{"version":3,"sources":["webpack:///./app/client/actions/forgotPasswordActions.js?7a4a","webpack:///./app/client/components/Routes.jsx?ae4d","webpack:///./app/client/components/group/GroupCard.jsx?a773","webpack:///./app/client/components/messages/MessageForm.jsx?c5ed","webpack:///./app/client/components/user/ForgetPasswordModal.jsx?1ec4","webpack:///./app/client/components/user/LoginForm.jsx?65be","webpack:///./app/client/components/user/ResetPasswordForm.jsx?7303","webpack:///./app/client/components/user/SignupForm.jsx?3869","webpack:///./app/client/components/common/Header.jsx?3ae3"],"names":["resetPasswordEmail","checkToken","resetPassword","email","post","token","get","params","newPassword","put","ReactRouter","require","Route","Switch","Routes","GroupCard","group","id","image","groupName","propTypes","object","isRequired","MessageForm","props","state","messages","groupId","message","priority","handleSubmit","bind","handleChange","event","setState","target","name","value","preventDefault","message_body","priority_level","postMessage","then","getMessages","$","document","ready","material_select","nextProps","grouId","groudId","allMessages","parseInt","groupTitle","map","currentGroup","length","User","username","createdAt","ISO_8601","fromNow","toLowerCase","Component","func","number","array","mapStateToProps","groups","ForgetPasswordModal","errors","isValid","addFlashMessage","e","isLoading","type","text","form","LoginForm","password","login","context","router","history","push","err","data","toggleForm","contextTypes","ResetPasswordForm","confirmNewPassword","query","parse","location","search","SignupForm","phoneNo","confirm_password","invalid","userSignupRequest","phone","checkUserExits","Header","searchParam","tooltip","click","dropdown","sideNav","logout","auth","isAuthenticated","user"],"mappings":"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","file":"0.dc38d715b4801fd2fcfd.hot-update.js","sourcesContent":["import axios from 'axios';\n\n/**\n * dispatches an action to send token to reset password via email.\n * @param {string} email - email.\n *\n * @returns {function} - makes an async post request to forgotPassword endpoint\n */\nexport function resetPasswordEmail(email) {\n  return () => (\n    axios.post('/api/v1/password/forgot', email)\n  );\n}\n\n/**\n * Check if Token matches with token in the database.\n * @param {string} token - token.\n * @param {string} email - email.\n *\n * @returns {function} - makes an async get request to checkToken endpoint\n */\nexport function checkToken(token, email) {\n  return () => (\n    axios.get('/api/v1/password/token/check', {\n      params: {\n        token,\n        email\n      } })\n  );\n}\n\n/**\n * Dispatches an action to Reset User Password.\n * @param {string} newPassword - New Password.\n * @param {string} email - email.\n *\n * @returns {function} - makes an async post request to resetPassword endpoint\n */\nexport function resetPassword(newPassword, email) {\n  return () => (\n    axios.put('/api/v1/password/verify', { newPassword, email })\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/actions/forgotPasswordActions.js","import React from 'react';\nimport LandingPage from './user/LandingPage';\nimport GroupsPage from './group/GroupsPage';\nimport AddGroup from './group/AddGroupPage';\nimport AddUser from './user/AddUser';\nimport GroupPage from './messages/MessagePage';\nimport ResetPasswordPage from './user/ResetPasswordPage';\nimport requireAuth from '../utils/requireAuth';\nimport UserPage from './user/UserPage';\nimport NotFoundPage from './NotFoundPage';\n\nconst ReactRouter = require('react-router-dom');\n\nconst Route = ReactRouter.Route;\nconst Switch = ReactRouter.Switch;\n\nconst Routes = () => {\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\" component={LandingPage} />\n        <Route path=\"/user/password/verify\" component={ResetPasswordPage} />\n        <Route path=\"/groups\" component={requireAuth(GroupsPage)} />\n        <Route path=\"/group/:id\" component={requireAuth(GroupPage)} />\n        <Route path=\"/add-group\" component={requireAuth(AddGroup)} />\n        <Route path=\"/add-user\" component={requireAuth(AddUser)} />\n        <Route path=\"/user/search/\" component={requireAuth(UserPage)} />\n        <Route\n          render={() => {\n            return <NotFoundPage />;\n          }}\n        />\n      </Switch>\n    </div>\n  );\n};\nexport default Routes;\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/Routes.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n/**\n * Renders GroupCard component\n * @export\n * @param {any} group\n * @returns {object} - GroupCard component\n */\nexport default function GroupCard({ group }) {\n  return (\n    <div>\n      <Link to={`/group/${group.id}`}>\n        <div className=\"col s12 m5 l3 small-cards\"><br />\n          <img\n            src={group.image}\n            alt=\"avatar\"\n            />\n          <h5><b>{group.groupName}</b></h5>\n          <Link to={`/group/${group.id}`} className=\"btn btn-primary\">\n            Enter Group\n          </Link>\n          <br /><br />\n        </div>\n      </Link>\n    </div>\n  );\n}\n\nGroupCard.propTypes = {\n  group: PropTypes.object.isRequired\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/group/GroupCard.jsx","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { getMessages, postMessage }\nfrom '../../actions/messageAction';\n\n/**\n * @class MessageForm\n * @extends {React.Component}\n */\nclass MessageForm extends React.Component {\n  /**\n   * Creates an instance of MessageForm.\n   * @param {any} props\n   * @memberof MessageForm\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: this.props.messages,\n      group: this.props.group,\n      groupId: this.props.groupId,\n      message: '',\n      priority: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  /**\n   * @param {any} event\n   * @memberof MessageForm\n   * @returns {void}\n   */\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  /**\n   * @param {any} event\n   * @memberof MessageForm\n   * @return {void}\n   */\n  handleSubmit(event) {\n    event.preventDefault();\n    const message = {\n      message_body: this.state.message,\n      priority_level: this.state.priority\n    };\n    this.props.postMessage(this.state.groupId, message)\n    .then(() => {\n      this.setState({\n        message: '',\n        priority: ''\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.props.getMessages(this.props.groupId);\n    $(document).ready(() => {\n      $('select').material_select();\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      messages: nextProps.messages,\n      group: nextProps.group,\n      grouId: nextProps.groudId\n    });\n  }\n  render() {\n    let allMessages;\n    const { group } = this.state;\n    const { messages } = this.state;\n    const groupId = parseInt(this.props.groupId, 10);\n    let groupTitle = 'No Group Found';\n\n    group.map((currentGroup) => {\n      const { id, groupName } = currentGroup;\n      if (id === groupId) {\n        groupTitle = groupName;\n      }\n    });\n\n    if (messages.length > 0) {\n      allMessages = messages.map(message => (\n        <div key={message.id}>\n          <b className=\"senderName\">\n            {message.User.username}\n          </b>\n          <span className=\"right sentTime\">\n            { moment(message.createdAt, moment.ISO_8601).fromNow() }\n          </span>\n          <p key={message.id} className=\"messageBody\">\n            {message.message_body}\n            <span\n            className={`new badge ${(message.priority_level).toLowerCase()}`}\n            data-badge-caption={message.priority_level} />\n          </p>\n          <hr /><br />\n        </div>));\n    } else {\n      allMessages = (\n        <h6>No messages to show</h6>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"col s12 m12 l6 message-cards\">\n          <div className=\"message-cards-board\">\n            <h5 className=\"groupTitle\">{groupTitle}</h5>\n            <div className=\"messages\">{ allMessages }</div>\n          </div>\n          <div className=\"message-cards-form\">\n            <form onSubmit={this.handleSubmit} method=\"post\">\n              <div className=\"input-field col s8\">\n                <textarea\n                  placeholder=\"Write your message Here\"\n                  id=\"message\"\n                  type=\"text\"\n                  required\n                  name=\"message\"\n                  onChange={this.handleChange}\n                  value={this.state.message}\n                  className=\"materialize-textarea\"\n                />\n              </div>\n              <div className=\"col s4 mySelect\">\n                <select\n                  className=\"browser-default\"\n                  required\n                  value={this.state.priority}\n                  name=\"priority\"\n                  onChange={this.handleChange}>\n                  <option value=\"\" disabled>Select Priority</option>\n                  <option value=\"Normal\">Normal</option>\n                  <option value=\"Critical\">Critical</option>\n                  <option value=\"Urgent\">Urgent</option>\n                </select>\n                <br />\n                <button className=\"btn messageBtn\" type=\"submit\">\n                  <i className=\"material-icons\">send</i>\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMessageForm.propTypes = {\n  postMessage: PropTypes.func.isRequired,\n  getMessages: PropTypes.func.isRequired,\n  groupId: PropTypes.number.isRequired,\n  messages: PropTypes.array.isRequired\n};\n\n\nconst mapStateToProps = state => ({\n  messages: state.messages,\n  group: state.groups\n});\n\nexport default\nconnect(mapStateToProps,\n  { getMessages, postMessage })(MessageForm);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/messages/MessageForm.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal } from 'react-materialize';\nimport { connect } from 'react-redux';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport { validateInput }\n from '../../validations/forgotpassword';\nimport { resetPasswordEmail } from '../../actions/forgotPasswordActions';\nimport { addFlashMessage } from '../../actions/flashMessageActions';\nimport FlashMessagesList from '../notification/FlashMessagesList';\n\n/**\n * @class ForgetPasswordModal\n * @extends {React.Component}\n */\nclass ForgetPasswordModal extends React.Component {\n  /**\n   * Creates an instance of ForgetPasswordModal.\n   * @param {any} props\n   * @memberof ForgetPasswordModal\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      errors: {}\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  /**\n   * @returns {isValid} - Check the form input is valid\n   * @memberof ForgetPasswordModal\n   */\n  isValid() {\n    const { errors, isValid, email, addFlashMessage } \n       = validateInput(this.state);\n\n    if (!isValid) {\n      this.setState({ errors });\n    }\n\n    return isValid;\n  }\n\n  /**\n   * @param {any} e\n   * @memberof ForgetPasswordModal\n   * @return {void}\n   */\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      email: ''\n    });\n    if (this.isValid()) {\n      this.setState({ errors: {}, isLoading: true });\n      this.props.resetPasswordEmail(this.state).then(\n        () => {\n          this.props.addFlashMessage({\n            type: 'success',\n            text: 'Please check your email and follow the instruction'\n          });\n        },\n      () => {\n        this.props.addFlashMessage({\n          type: 'error',\n          text: 'Incorrect email'\n        });\n      });\n    }\n  }\n\n  /**\n   * @param {any} e\n   * @memberof ForgetPasswordModal\n   * @return {void}\n   */\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  /**\n   * @returns {object} - Forget Password modal component\n   * @memberof ForgetPasswordModal\n   */\n  render() {\n    const { errors, email } = this.state;\n    return (\n      <div>\n        <Modal\n          header='Recover Password'\n          trigger={<p className=\"forgotPassword\">Forgot Password?</p>}>\n          <FlashMessagesList />\n          <form onSubmit={this.handleSubmit} >\n            { errors.form &&\n            <div className=\"alert alert-danger\">{errors.form}</div> }\n            <TextFieldGroup\n              label=\"Email\"\n              field=\"email\"\n              onChange={this.handleChange}\n              type=\"text\"\n              value={email}\n            />\n            <Button\n              className=\"btn waves-effect waves-light\"\n              type=\"submit\"\n            >\n            Reset\n            </Button>\n          </form>\n        </Modal>\n      </div>\n    );\n  }\n\n}\n\nForgetPasswordModal.propTypes = {\n  resetPasswordEmail: PropTypes.func.isRequired,\n  addFlashMessage: PropTypes.func.isRequired,\n};\n\nexport default\nconnect(null, { resetPasswordEmail, addFlashMessage })(ForgetPasswordModal);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/user/ForgetPasswordModal.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport ForgetPasswordModal from './ForgetPasswordModal';\nimport { login } from '../../actions/authenticationActions';\nimport validateInput from '../../validations/login';\nimport FlashMessagesList from '../notification/FlashMessagesList';\n\n/**\n * @class LoginForm\n * @extends {React.Component}\n */\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      errors: {},\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  /**\n   * @returns {isValid} - checks if the fields are not empty\n   * @memberof LoginForm\n   */\n  isValid() {\n    const { errors, isValid } = validateInput(this.state);\n\n    if (!isValid) {\n      this.setState({ errors });\n    }\n    return isValid;\n  }\n\n  /**\n   * @param {any} event\n   * @memberof LoginForm\n   * @returns {void}\n   */\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.isValid()) {\n      this.setState({ errors: {}, isLoading: true });\n      this.props.login(this.state).then(\n        () => this.context.router.history.push('/groups'),\n        err => this.setState({\n          errors: err.data.errors,\n          username: '',\n          password: ''\n        })\n      );\n    }\n  }\n\n  /**\n   * @param {any} event\n   * @memberof LoginForm\n   * @returns {void}\n   */\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  /**\n   * @returns {object} - LoginForm component\n   * @memberof LoginForm\n   */\n  render() {\n    const { errors, username, password } = this.state;\n    return (\n      <div>\n        <h4>Login to PostIt</h4>\n        <FlashMessagesList />\n        <form className=\"col s12\" onSubmit={this.handleSubmit}>\n          { errors.form &&\n          <div className=\"alert alert-danger\">{errors.form}</div> }\n          <div className=\"\">\n            <TextFieldGroup\n              error={errors.username}\n              label=\"Username\"\n              onChange={this.handleChange}\n              value={username}\n              field=\"username\"\n              type=\"text\"\n            />\n            <TextFieldGroup\n              error={errors.password}\n              label=\"Password\"\n              onChange={this.handleChange}\n              value={password}\n              field=\"password\"\n              type=\"password\"\n            />\n            <div className=\"input-field col s12\">\n              <button\n                  className=\"btn waves-effect waves-light\"\n                  type=\"submit\" name=\"action\">Submit\n                <i className=\"material-icons right\">send</i>\n              </button>\n              <br /><br />\n            </div>\n          </div>\n        </form>\n        <div className=\"row\">\n          <div className=\"col s6\"><ForgetPasswordModal /></div>\n          <div className=\"col s6\">\n            <p>\n              Do not have an account?\n              <button\n                className=\"blue-text signUp\"\n                onClick={() => this.props.toggleForm('signup')}>\n                <b>Sign Up</b>\n              </button>\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLoginForm.propTypes = {\n  login: PropTypes.func.isRequired,\n  toggleForm: PropTypes.func.isRequired\n};\n\nLoginForm.contextTypes = {\n  router: PropTypes.object.isRequired\n};\n\nexport default connect(null, { login })(LoginForm);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/user/LoginForm.jsx","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport queryString from 'query-string';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport { validateInput }\n  from '../../validations/reset_password';\nimport FlashMessagesList from '../notification/FlashMessagesList';\nimport { resetPassword } from '../../actions/forgotPasswordActions';\nimport { addFlashMessage } from '../../actions/flashMessageActions';\n\n/**\n * @class ResetPasswordForm\n * @extends {React.Component}\n */\nclass ResetPasswordForm extends React.Component {\n  /**\n   * Creates an instance of ResetPasswordForm.\n   * @param {any} props\n   * @memberof ResetPasswordForm\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      newPassword: '',\n      confirmNewPassword: '',\n      errors: {},\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  /**\n   * @memberof ResetPasswordForm\n   * @returns {isValid} - checks if the text field are not empty\n   */\n  isValid() {\n    const { errors, isValid } = validateInput(this.state);\n\n    if (!isValid) {\n      this.setState({ errors });\n    }\n    return isValid;\n  }\n\n  /**\n   * @param {any} event\n   * @memberof ResetPasswordForm\n   * @returns {void}\n   */\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.isValid()) {\n      const query = queryString.parse(this.props.location.search);\n      const email = query.email;\n      this.setState({ errors: {} });\n      if (this.state.newPassword === this.state.confirmNewPassword) {\n        this.props.resetPassword(this.state.newPassword, email).then(\n          () => this.context.router.history.push('/'),\n          err => this.setState({\n            errors: err.data.errors,\n            newPassword: '',\n            confirmNewPassword: ''\n          })\n        );\n      } else {\n        this.props.addFlashMessage({\n          type: 'error',\n          text: 'Password does not Match'\n        });\n      }\n    }\n  }\n\n  /**\n   * @param {any} e\n   * @memberof ResetPasswordForm\n   * @return {void}\n   */\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  /**\n   * @memberof ResetPasswordForm\n   * @returns {object} - ResetPasswordForm Component\n   */\n  render() {\n    const\n    { errors, newPassword, confirmNewPassword, addFlashMessage } = this.state;\n    return (\n      <div>\n        <section classID=\"wrapper\" className=\"resetPasswordForm\">\n          <div className=\"wrapper_cen2\">\n            <div className=\"row\">\n              <div className=\"col s12 m12 l12 reg_form\">\n                <div className=\"reg_form_cen\">\n                  <h4>Reset Password</h4>\n                  <FlashMessagesList />\n                  <form className=\"col s12\" onSubmit={this.handleSubmit}>\n                    {\n                      errors.form &&\n                      <div className=\"alert alert-danger\">{errors.form}</div>\n                    }\n                    <div className=\"\">\n                      <TextFieldGroup\n                        error={errors.newPassword}\n                        label=\"New Password\"\n                        field=\"newPassword\"\n                        onChange={this.handleChange}\n                        value={newPassword}\n                        type=\"password\"\n                      />\n                      <TextFieldGroup\n                        error={errors.confirmNewPassword}\n                        label=\"Confirm New Password\"\n                        field=\"confirmNewPassword\"\n                        value={confirmNewPassword}\n                        onChange={this.handleChange}\n                        type=\"password\"\n                      />\n                      <div className=\"input-field col s12\">\n                        <button\n                          className=\"btn waves-effect waves-light\"\n                          type=\"submit\" name=\"action\">Submit\n                          <i className=\"material-icons right\">send</i>\n                        </button>\n                        <br /><br />\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nResetPasswordForm.propTypes = {\n  resetPassword: PropTypes.func.isRequired,\n  addFlashMessage: PropTypes.func.isRequired\n};\n\nResetPasswordForm.contextTypes = {\n  router: PropTypes.object.isRequired\n};\n\nexport default connect(null,\n  { resetPassword, addFlashMessage })(withRouter(ResetPasswordForm));\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/user/ResetPasswordForm.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport validateInput from '../../validations/signup';\nimport {\n  userSignupRequest\n} from '../../actions/authenticationActions';\nimport { addFlashMessage } from '../../actions/flashMessageActions';\n\n/**\n * @class SignupForm\n * @extends {React.Component}\n */\nclass SignupForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      phoneNo: '',\n      password: '',\n      confirm_password: '',\n      errors: {},\n      isLoading: false,\n      invalid: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  /**\n   * Handle onChange event\n   * @param {any} event\n   * @memberof SignupForm\n   * @return {void}\n   */\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  /**\n   * Checks if the form input(s) is valid\n   * @memberof SignupForm\n   * @return {isValid} - checks if the fields are not empty\n   */\n  isValid() {\n    const { errors, isValid } = validateInput(this.state);\n\n    if (!isValid) {\n      this.setState({ errors });\n    }\n\n    return isValid;\n  }\n\n  /**\n   * Handles submit event\n   * @param {any} event\n   * @memberof SignupForm\n   * @return {void}\n   */\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.isValid()) {\n      this.setState({ errors: {}, isLoading: true });\n      this.props.userSignupRequest(this.state).then(\n        () => {\n          this.props.addFlashMessage({\n            type: 'success',\n            text: 'You signed up successfully. Login!'\n          });\n          this.context.router.history.push('/groups');\n        },\n        ({ data }) => this.setState({\n          errors: data,\n          isLoading: false,\n          username: '',\n          email: '',\n          phone: '',\n          password: '',\n          confirm_password: '',\n        })\n      );\n    }\n  }\n  /**\n   * renders the signup form component\n   * @returns {object} - signup component\n   * @memberof SignupForm\n   */\n  render() {\n    const { errors } = this.state;\n    return (\n      <div>\n        <h4>Register to PostIt</h4>\n        <form className=\"col s12\" onSubmit={this.handleSubmit}>\n          <div className=\"\">\n            <TextFieldGroup\n              error={errors.username}\n              label=\"Username\"\n              onChange={this.handleChange}\n              checkUserExits={this.checkUserExits}\n              value={this.state.username}\n              field=\"username\"\n              type=\"text\"\n            />\n            <TextFieldGroup\n              error={errors.email}\n              label=\"Email\"\n              onChange={this.handleChange}\n              checkUserExits={this.checkUserExits}\n              value={this.state.email}\n              field=\"email\"\n              type=\"text\"\n            />\n            <TextFieldGroup\n              error={errors.phone}\n              label=\"Phone Number\"\n              onChange={this.handleChange}\n              value={this.state.phoneNo}\n              field=\"phoneNo\"\n              type=\"number\"\n            />\n            <TextFieldGroup\n              error={errors.password}\n              label=\"Password\"\n              onChange={this.handleChange}\n              value={this.state.password}\n              field=\"password\"\n              type=\"password\"\n            />\n            <TextFieldGroup\n              error={errors.confirm_password}\n              label=\"Confirm Password\"\n              onChange={this.handleChange}\n              value={this.state.confirm_password}\n              field=\"confirm_password\"\n              type=\"password\"\n            />\n            <div className=\"input-field col s12\">\n              <button\n                disabled={this.state.isLoading || this.state.invalid}\n                className=\"btn waves-effect waves-light\" type=\"submit\"\n                name=\"action\">Submit\n                <i className=\"material-icons right\">send</i>\n              </button>\n              <br /><br />\n            </div>\n          </div>\n        </form>\n        <p>Have an account already?\n          <button\n            className=\"blue-text signUp\"\n            onClick={() => this.props.toggleForm('login')}\n          >\n            <b>Login</b></button>\n        </p>\n      </div>\n    );\n  }\n}\n\nSignupForm.propTypes = {\n  userSignupRequest: PropTypes.func.isRequired,\n  addFlashMessage: PropTypes.func.isRequired,\n  toggleForm: PropTypes.func.isRequired\n};\n\nSignupForm.contextTypes = {\n  router: PropTypes.object.isRequired\n};\n\nexport default connect(null,\n  { userSignupRequest, addFlashMessage })(SignupForm);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/user/SignupForm.jsx","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/authenticationActions';\n\n/**\n * @class Header\n * @extends {React.Component}\n */\nexport class Header extends React.Component {\n  /**\n   * Creates an instance of Header.\n   * @param {any} props\n   * @memberof Header\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchParam: '',\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  componentDidMount() {\n    $('.tooltipped').tooltip();\n    $('.editButtons').click(() => {\n      $(this).tooltip('close');\n    });\n    $('.dropdown-button').dropdown();\n    $('.button-collapse').sideNav();\n  }\n\n  /**\n   * redirects to search result page\n   * @memberof Header\n   * @return {void}\n   */\n  handleSubmit() {\n    this.context.router.history\n    .push(`/user/search?q=${this.state.searchParam}`);\n  }\n\n  /**\n   * @param {any} event\n   * @memberof Header\n   * @return {void}\n   */\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n/**\n * @param {any} event\n * @memberof Header\n * @return {void}\n */\n  logout(event) {\n    event.preventDefault();\n    this.props.logout(this.state);\n  }\n\n  /**\n   * Renders the header component\n   * @returns {object} - header component\n   * @memberof Header\n   */\n  render() {\n    const { isAuthenticated, user } = this.props.auth;\n\n    return (\n      <div>\n        <div className=\"navbar-fixed\">\n          {\n            isAuthenticated ?\n              <nav>\n                <div className=\"nav-wrapper\">\n                  <Link to=\"/\" className=\"brand-logo\">PostIt</Link>\n                  <Link\n                    to=\"#\"\n                    data-activates=\"mobile-demo\"\n                    className=\"button-collapse\">\n                    <i className=\"material-icons\">menu</i>\n                  </Link>\n                  <ul className=\"side-nav\" id=\"nav_mobile\">\n                    <li>\n                      <form id=\"searchForm\" onSubmit={this.handleSubmit}>\n                        <input\n                          type=\"text\"\n                          name=\"searchParam\"\n                          placeholder=\"Search for Friends\"\n                          id=\"searchBar\"\n                          value={this.state.searchParam}\n                          onChange={this.handleChange}\n                        />\n                      </form>\n                    </li>\n                    <li>\n                      <div className=\"authUser\">\n                        <span className=\"welcome\">\n                          Welcome { isAuthenticated ? user.username : ''}\n                        </span>\n                      </div>\n                    </li>\n                    <li>\n                      <ul id=\"dropdown1\" className=\"dropdown-content\">\n                        <li>\n                          <Link to=\"/groups\">\n                            <i\n                              className=\"fa fa-eye\"\n                              aria-hidden=\"true\" />\n                            View all Groups\n                          </Link>\n                        </li>\n                        <li>\n                          <Link to=\"/add-group\">\n                            <i\n                              className=\"fa fa-plus-circle\"\n                              aria-hidden=\"true\" />\n                            Add Groups\n                          </Link>\n                        </li>\n                      </ul>\n                      <Link\n                        to=\"#\" className=\"dropdown-button\"\n                        data-activates=\"mobile_menu_escrow_accounts\" data-beloworigin=\"true\">\n                        <i className=\"material-icons left\">group</i>\n                        Menu\n                        <i className=\"material-icons right\">arrow_drop_down</i>\n                      </Link>\n                    </li>\n                    <li>\n                      <Link\n                        to=\"#\"\n                        id=\"logout\"\n                        className=\"tooltipped\"\n                        data-position=\"top\"\n                        data-tooltip=\"Logout\"\n                      onClick={this.logout.bind(this)}>\n                        <i className=\"material-icons\">power_settings_new</i>\n                      </Link>\n                    </li>\n                  </ul>\n                  <ul\n                    classID=\"nav-mobile\"\n                    className=\"right hide-on-med-and-down\">\n                    <li>\n                      <form id=\"searchForm\" onSubmit={this.handleSubmit}>\n                        <input\n                          type=\"text\"\n                          name=\"searchParam\"\n                          placeholder=\"Search for Friends\"\n                          id=\"searchBar\"\n                          value={this.state.searchParam}\n                          onChange={this.handleChange}\n                        />\n                      </form>\n                    </li>\n                    <li>\n                      <div className=\"authUser\">\n                        <span className=\"welcome\">\n                          Welcome { isAuthenticated ? user.username : ''}\n                        </span>\n                      </div>\n                    </li>\n                    <li>\n                      <ul id=\"dropdown1\" className=\"dropdown-content\">\n                        <li>\n                          <Link to=\"/groups\">\n                            <i\n                              className=\"fa fa-eye\"\n                              aria-hidden=\"true\" />\n                            View all Groups\n                          </Link>\n                        </li>\n                        <li>\n                          <Link to=\"/add-group\">\n                            <i\n                              className=\"fa fa-plus-circle\"\n                              aria-hidden=\"true\" />\n                            Add Groups\n                          </Link>\n                        </li>\n                      </ul>\n                      <Link\n                        to=\"#\" className=\"dropdown-button\"\n                        data-activates=\"dropdown1\">\n                        <i className=\"material-icons left\">group</i>\n                        Menu\n                        <i className=\"material-icons right\">arrow_drop_down</i>\n                      </Link>\n                    </li>\n                    <li>\n                      <Link\n                        to=\"#\"\n                        id=\"logout\"\n                        className=\"tooltipped\"\n                        data-position=\"top\"\n                        data-tooltip=\"Logout\"\n                      onClick={this.logout.bind(this)}>\n                        <i className=\"material-icons\">power_settings_new</i>\n                      </Link>\n                    </li>\n                  </ul>\n                </div>\n              </nav> :\n              <nav><Link to=\"/\" className=\"brand-logo\">PostIt</Link></nav>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  auth: PropTypes.object.isRequired,\n  logout: PropTypes.func.isRequired\n};\n\nHeader.contextTypes = {\n  router: PropTypes.object.isRequired\n};\n\n\nconst mapStateToProps = state => (\n  {\n    auth: state.auth\n  }\n);\n\nexport default connect(mapStateToProps, { logout })(Header);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/common/Header.jsx"],"sourceRoot":""}