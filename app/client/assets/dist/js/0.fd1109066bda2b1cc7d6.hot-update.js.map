{"version":3,"sources":["webpack:///./app/client/components/user/UserList.jsx?9af7"],"names":["UserList","props","usersPerPage","pagination","state","users","offset","pageCount","Math","ceil","count","handlePageClick","bind","searchParams","parse","location","search","q","getUsersAction","nextProps","setState","totalCount","page","selected","length","map","user","index","username","email","Component","propTypes","object","isRequired","func","mapStateToProps"],"mappings":"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","file":"0.fd1109066bda2b1cc7d6.hot-update.js","sourcesContent":["import React from 'react';\nimport ReactPaginate from 'react-paginate';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport queryString from 'query-string';\nimport getUsersAction from '../../actions/getUsersAction';\n\n/**\n * @class UserList\n * @extends {Component}\n */\nclass UserList extends React.Component {\n  /**\n   * Creates an instance of UserList.\n   * @param {object} props\n   * @memberof UserList\n   */\n  constructor(props) {\n    super(props);\n    this.usersPerPage = 5;\n    const { pagination } = this.props;\n    this.state = {\n      users: pagination.users,\n      offset: 0,\n      pageCount: Math.ceil(pagination.count / this.usersPerPage)\n    };\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.searchParams = queryString.parse(this.props.location.search).q;\n  }\n\n  /**\n   * call the getUsers method after component have mounted\n   * @memberof UserList\n   * @return {void}\n   */\n  componentDidMount() {\n    this.props.getUsersAction(this.searchParams);\n  }\n\n  /**\n   * update component with new props\n   * @param {object} nextProps\n   * @memberof UserList\n   * @return {void}\n   */\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      users: nextProps.pagination.users,\n      pageCount: Math.ceil(nextProps.pagination.totalCount / this.usersPerPage)\n    });\n  }\n\n  /**\n   * used to calculate offset\n   * @param {number} page\n   * @memberof UserList\n   * @return {page} - page\n   */\n  handlePageClick(page) {\n    const selected = page.selected;\n    const offset = Math.ceil(selected * this.usersPerPage);\n\n    this.setState({ offset }, () => {\n      this.props.getUsersAction(this.searchParams, offset);\n    });\n  }\n\n  /**\n   * Renders the UserList component\n   * @memberof UserList\n   * @return {object} - UserList component\n   */\n  render() {\n    const { users } = this.state;\n    return (\n      <div>\n        <div className=\"col s12 m10 l10 col-md-10\">\n          <div className=\"mycontainer\">\n            <div className=\"row\">\n              <div className=\"col s12 m4 l2\" />\n              <div className=\"col s12 m4 l8 large-cards\">\n                <h4>Users</h4>\n                <table className=\"striped responsive-table\">\n                  <thead>\n                    <tr>\n                      <th>Name</th>\n                      <th>Email</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {\n                      users.length > 0 ? users.map((user, index) => (\n                        <tr key={index}>\n                          <td>{user.username}</td>\n                          <td>{user.email}</td>\n                        </tr>\n                      )) : (\n                        <tr>\n                          <td\n                            className=\"center\"\n                            col=\"2\" colSpan=\"2\">\n                            No user found\n                          </td>\n                        </tr>\n                      )\n                    }\n                  </tbody>\n                </table>\n                {\n                  users.length > 4 &&\n                  <ReactPaginate\n                  previousLabel={'previous'}\n                  nextLabel={'next'}\n                  breakLabel={<a href=\"\">...</a>}\n                  breakClassName={'break-me'}\n                  pageCount={this.state.pageCount}\n                  marginPagesDisplayed={2}\n                  pageRangeDisplayed={5}\n                  onPageChange={this.handlePageClick}\n                  containerClassName={'pagination'}\n                  subContainerClassName={'pages pagination'}\n                  activeClassName={'active'}\n                />\n                }\n              </div>\n              <div className=\"col s12 m4 l2\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUserList.propTypes = {\n  location: PropTypes.object.isRequired,\n  getUsersAction: PropTypes.func.isRequired,\n\n};\n\nconst mapStateToProps = state => ({\n  pagination: state.pagination,\n  pageCount: state.pagination.pageCount\n});\n\nexport default connect(mapStateToProps,\n  { getUsersAction })(withRouter(UserList));\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/user/UserList.jsx"],"sourceRoot":""}