{"version":3,"sources":["webpack:///./app/client/reducers/groupsReducer.js?2155"],"names":["initialState","pageNumber","pageCount","pageSize","totalCount","allGroups","state","action","type","groups"],"mappings":";;;;;;;;;;;;AAAA;;;;AAEA,IAAMA,eAAe;AACnBC,cAAY,CADO;AAEnBC,aAAW,CAFQ;AAGnBC,YAAU,CAHS;AAInBC,cAAY,CAJO;AAKnBC,aAAW;AALQ,CAArB;;AAQA;;;;;;;;kBAOe,YAAuC;AAAA,MAAtCC,KAAsC,uEAA9BN,YAA8B;AAAA,MAAhBO,MAAgB,uEAAP,EAAO;;AACpD,UAAQA,OAAOC,IAAf;AACA;AACE,0CACKD,OAAOE,MADZ;AAGF;AACE,aAAOH,KAAP;AANF;AAQD,C","file":"0.0f979ee42e120ca7b3a2.hot-update.js","sourcesContent":["import { GET_GROUPS } from '../actions/types';\n\nconst initialState = {\n  pageNumber: 0,\n  pageCount: 0,\n  pageSize: 0,\n  totalCount: 0,\n  allGroups: []\n};\n\n/**\n * updates the groups property of the store\n * @param {Object} state - current state\n * @param {Object} action - action type and action payload\n *\n * @returns {state} - returns a new state.\n */\nexport default (state = initialState, action = {}) => {\n  switch (action.type) {\n  case GET_GROUPS:\n    return [\n      ...action.groups\n    ];\n  default:\n    return state;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/reducers/groupsReducer.js"],"sourceRoot":""}