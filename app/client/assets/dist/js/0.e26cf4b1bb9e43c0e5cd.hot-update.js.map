{"version":3,"sources":["webpack:///./app/client/reducers/messagesReducer.js?43a7"],"names":["initialState","members","messages","state","action","type","groupInfo","message"],"mappings":";;;;;;;;;;;;AAAA;;;;AAEA,IAAMA,eAAe;AACnBC,WAAS,EADU;AAEnBC,YAAU;AAFS,CAArB;;AAKA;;;;;;;;;kBAQe,YAAuC;AAAA,MAAtCC,KAAsC,uEAA9BH,YAA8B;AAAA,MAAhBI,MAAgB,uEAAP,EAAO;;AACpD,UAAQA,OAAOC,IAAf;AACA;AACE,aAAOD,OAAOE,SAAd;AACF;AACE,0CACKH,KADL,IAEEC,OAAOG,OAFT;AAIF;AACE,aAAOJ,KAAP;AATF;AAWD,C","file":"0.e26cf4b1bb9e43c0e5cd.hot-update.js","sourcesContent":["import { GET_GROUP_WITH_MESSAGE, POST_MESSAGE } from '../actions/types';\n\nconst initialState = {\n  members: [],\n  messages: []\n};\n\n/**\n * updates the messages property of the store\n *\n * @param {Object} state - current state\n * @param {Object} action - action type and action payload\n *\n * @returns {state} - returns a new state.\n */\nexport default (state = initialState, action = {}) => {\n  switch (action.type) {\n  case GET_GROUP_WITH_MESSAGE:\n    return action.groupInfo;\n  case POST_MESSAGE:\n    return [\n      ...state,\n      action.message\n    ];\n  default:\n    return state;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/reducers/messagesReducer.js"],"sourceRoot":""}