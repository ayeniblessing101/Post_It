{"version":3,"sources":["webpack:///./app/client/utils/isAuthenticated.js?5bc3","webpack:///./app/client/actions/forgotPasswordActions.js?7a4a","webpack:///./app/client/components/Routes.jsx?ae4d","webpack:///./app/client/components/group/GroupCard.jsx?a773","webpack:///./app/client/components/messages/MessageForm.jsx?c5ed","webpack:///./app/client/components/user/ForgetPasswordModal.jsx?1ec4","webpack:///./app/client/components/user/LoginForm.jsx?65be","webpack:///./app/client/components/user/ResetPasswordForm.jsx?7303","webpack:///./app/client/components/user/SignupForm.jsx?3869","webpack:///./app/client/components/common/Header.jsx?3ae3"],"names":["ComposedComponent","Authenticate","props","isAuthenticated","context","router","history","push","nextProps","Component","propTypes","bool","isRequired","contextTypes","object","mapStateToProps","state","auth","resetPasswordEmail","checkToken","resetPassword","email","post","token","get","params","newPassword","confirmPassword","put","ReactRouter","require","Route","Switch","Routes","GroupCard","group","image","groupName","id","MessageForm","messages","groupId","message","priority","handleSubmit","bind","handleChange","event","setState","target","name","value","preventDefault","message_body","priority_level","postMessage","then","getMessages","$","document","ready","material_select","grouId","groudId","allMessages","parseInt","groupTitle","map","currentGroup","length","User","username","createdAt","ISO_8601","fromNow","toLowerCase","func","number","array","groups","ForgetPasswordModal","errors","isValid","isLoading","addFlashMessage","type","text","form","LoginForm","password","login","err","data","toggleForm","ResetPasswordForm","confirmNewPassword","query","parse","location","search","shape","SignupForm","phoneNo","confirm_password","invalid","userSignupRequest","checkUserExits","phone","Header","searchParam","tooltip","click","dropdown","sideNav","logout","user"],"mappings":"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","file":"0.bd11c051f3ae05c7a67e.hot-update.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n/**\n * A middleware that ensure a user is authenticated to access certain routes\n * @param {object} ComposedComponent - ComposedComponent\n * @return {void} - void\n */\nexport default (ComposedComponent) => {\n  class Authenticate extends React.Component {\n    componentWillMount() {\n      if (this.props.isAuthenticated) {\n        this.context.router.history.push('/groups');\n      }\n    }\n\n    componentWillUpdate(nextProps) {\n      if (nextProps.isAuthenticated) {\n        this.context.router.history.push('/groups');\n      }\n    }\n\n    render() {\n      return (\n        <ComposedComponent {...this.props} />\n      );\n    }\n  }\n\n  Authenticate.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n  };\n\n  Authenticate.contextTypes = {\n    router: PropTypes.object.isRequired\n  };\n  /**\n   * maps the store state isAuthenticated to props\n   * @param {*} state\n   * @returns {void}\n   */\n  const mapStateToProps = (state) => {\n    return {\n      isAuthenticated: state.auth.isAuthenticated\n    };\n  };\n\n  return connect(mapStateToProps)(Authenticate);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/utils/isAuthenticated.js","import axios from 'axios';\n\n/**\n * dispatches an action to send token to reset password via email.\n * @param {string} email - email.\n *\n * @returns {function} - makes an async post request to forgotPassword endpoint\n */\nexport function resetPasswordEmail(email) {\n  return () => (\n    axios.post('/api/v1/password/forgot', email)\n  );\n}\n\n/**\n * Check if Token matches with token in the database.\n * @param {string} token - token.\n * @param {string} email - email.\n *\n * @returns {function} - makes an async get request to checkToken endpoint\n */\nexport function checkToken(token, email) {\n  return () => (\n    axios.get('/api/v1/password/token/check', {\n      params: {\n        token,\n        email\n      } })\n  );\n}\n\n/**\n * Dispatches an action to Reset User Password.\n * @param {string} newPassword - New Password.\n * @param {string} confirmPassword - confirm Password.\n * @param {string} email - email.\n *\n * @returns {function} - makes an async post request to resetPassword endpoint\n */\nexport function resetPassword(newPassword, confirmPassword, email) {\n  return () => (\n    axios\n    .put('/api/v1/password/verify', { newPassword, confirmPassword, email })\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/actions/forgotPasswordActions.js","import React from 'react';\nimport LandingPage from './user/LandingPage';\nimport GroupsPage from './group/GroupsPage';\nimport AddGroup from './group/AddGroupPage';\nimport AddUser from './user/AddUser';\nimport GroupPage from './messages/MessagePage';\nimport ResetPasswordPage from './user/ResetPasswordPage';\nimport requireAuth from '../utils/requireAuth';\nimport isAuthenticated from '../utils/isAuthenticated';\nimport UserPage from './user/UserPage';\nimport NotFoundPage from './NotFoundPage';\n\nconst ReactRouter = require('react-router-dom');\n\nconst Route = ReactRouter.Route;\nconst Switch = ReactRouter.Switch;\n\nconst Routes = () => {\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\" component={isAuthenticated(LandingPage)} />\n        <Route path=\"/user/password/verify\" component={ResetPasswordPage} />\n        <Route path=\"/groups\" component={requireAuth(GroupsPage)} />\n        <Route path=\"/group/:id\" component={requireAuth(GroupPage)} />\n        <Route path=\"/add-group\" component={requireAuth(AddGroup)} />\n        <Route path=\"/add-user\" component={requireAuth(AddUser)} />\n        <Route path=\"/user/search/\" component={requireAuth(UserPage)} />\n        <Route\n          render={() => {\n            return <NotFoundPage />;\n          }}\n        />\n      </Switch>\n    </div>\n  );\n};\nexport default Routes;\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/Routes.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n/**\n * Renders GroupCard component\n * @export\n * @param {any} group\n * @returns {object} - GroupCard component\n */\nexport default function GroupCard({ group }) {\n  return (\n    <div>\n      <div className=\"col s12 m5 l3 small-cards\"><br />\n        <img\n          src={group.image}\n          alt=\"avatar\"\n          />\n        <h5><b>{group.groupName}</b></h5>\n        <Link to={`/group/${group.id}`} className=\"btn btn-primary\">\n          Enter Group\n        </Link>\n        <br /><br />\n      </div>\n    </div>\n  );\n}\n\nGroupCard.propTypes = {\n  group: PropTypes.object.isRequired\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/group/GroupCard.jsx","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { getMessages, postMessage }\nfrom '../../actions/messageAction';\n\n/**\n * @class MessageForm\n * @extends {React.Component}\n */\nclass MessageForm extends React.Component {\n  /**\n   * Creates an instance of MessageForm.\n   * @param {any} props\n   * @memberof MessageForm\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: this.props.messages,\n      group: this.props.group,\n      groupId: this.props.groupId,\n      message: '',\n      priority: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  /**\n   * @param {any} event\n   * @memberof MessageForm\n   * @returns {void}\n   */\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  /**\n   * @param {any} event\n   * @memberof MessageForm\n   * @return {void}\n   */\n  handleSubmit(event) {\n    event.preventDefault();\n    const message = {\n      message_body: this.state.message,\n      priority_level: this.state.priority\n    };\n    this.props.postMessage(this.state.groupId, message)\n    .then(() => {\n      this.setState({\n        message: '',\n        priority: ''\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.props.getMessages(this.props.groupId);\n    $(document).ready(() => {\n      $('select').material_select();\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      messages: nextProps.messages,\n      group: nextProps.group,\n      grouId: nextProps.groudId\n    });\n  }\n  render() {\n    let allMessages;\n    const { group } = this.state;\n    const { messages } = this.state;\n    const groupId = parseInt(this.props.groupId, 10);\n    let groupTitle = 'No Group Found';\n\n    group.map((currentGroup) => {\n      const { id, groupName } = currentGroup;\n      if (id === groupId) {\n        groupTitle = groupName;\n      }\n    });\n\n    if (messages.length > 0) {\n      allMessages = messages.map(message => (\n        <div key={message.id}>\n          <b className=\"senderName\">\n            {message.User.username}\n          </b>\n          <span className=\"right sentTime\">\n            { moment(message.createdAt, moment.ISO_8601).fromNow() }\n          </span>\n          <p key={message.id} className=\"messageBody\">\n            {message.message_body}\n            <span\n            className={`new badge ${message.priority_level\n              && (message.priority_level).toLowerCase()}`}\n            data-badge-caption={message.priority_level} />\n          </p>\n          <hr /><br />\n        </div>));\n    } else {\n      allMessages = (\n        <h6>No messages to show</h6>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"col s12 m12 l6 message-cards\">\n          <div className=\"message-cards-board\">\n            <h5 className=\"groupTitle\">{groupTitle}</h5>\n            <div className=\"messages\">{ allMessages }</div>\n          </div>\n          <div className=\"message-cards-form\">\n            <form onSubmit={this.handleSubmit} method=\"post\">\n              <div className=\"input-field col s8\">\n                <textarea\n                  placeholder=\"Write your message Here\"\n                  id=\"message\"\n                  type=\"text\"\n                  required\n                  name=\"message\"\n                  onChange={this.handleChange}\n                  value={this.state.message}\n                  className=\"materialize-textarea\"\n                />\n              </div>\n              <div className=\"col s4 mySelect\">\n                <select\n                  className=\"browser-default\"\n                  required\n                  value={this.state.priority}\n                  name=\"priority\"\n                  onChange={this.handleChange}>\n                  <option value=\"\" disabled>Select Priority</option>\n                  <option value=\"Normal\">Normal</option>\n                  <option value=\"Critical\">Critical</option>\n                  <option value=\"Urgent\">Urgent</option>\n                </select>\n                <br />\n                <button className=\"btn messageBtn\" type=\"submit\">\n                  <i className=\"material-icons\">send</i>\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMessageForm.propTypes = {\n  postMessage: PropTypes.func.isRequired,\n  getMessages: PropTypes.func.isRequired,\n  groupId: PropTypes.number.isRequired,\n  messages: PropTypes.array.isRequired\n};\n\n\nconst mapStateToProps = state => ({\n  messages: state.messages,\n  group: state.groups\n});\n\nexport default\nconnect(mapStateToProps,\n  { getMessages, postMessage })(MessageForm);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/messages/MessageForm.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal } from 'react-materialize';\nimport { connect } from 'react-redux';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport { validateInput }\n from '../../validations/forgotpassword';\nimport { resetPasswordEmail } from '../../actions/forgotPasswordActions';\nimport { addFlashMessage } from '../../actions/flashMessageActions';\nimport FlashMessagesList from '../notification/FlashMessagesList';\n\n/**\n * @class ForgetPasswordModal\n * @extends {React.Component}\n */\nclass ForgetPasswordModal extends React.Component {\n  /**\n   * Creates an instance of ForgetPasswordModal.\n   * @param {any} props\n   * @memberof ForgetPasswordModal\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      errors: {}\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  /**\n   * @returns {isValid} - Check the form input is valid\n   * @memberof ForgetPasswordModal\n   */\n  isValid() {\n    const { errors, isValid }\n       = validateInput(this.state);\n\n    if (!isValid) {\n      this.setState({ errors });\n    }\n\n    return isValid;\n  }\n\n  /**\n   * @param {any} event\n   * @memberof ForgetPasswordModal\n   * @return {void}\n   */\n  handleSubmit(event) {\n    event.preventDefault();\n    this.setState({\n      email: ''\n    });\n    if (this.isValid()) {\n      this.setState({ errors: {}, isLoading: true });\n      this.props.resetPasswordEmail(this.state).then(\n        () => {\n          this.props.addFlashMessage({\n            type: 'success',\n            text: 'Please check your email and follow the instruction'\n          });\n        },\n      () => {\n        this.props.addFlashMessage({\n          type: 'error',\n          text: 'Incorrect email'\n        });\n      });\n    }\n  }\n\n  /**\n   * @param {any} event\n   * @memberof ForgetPasswordModal\n   * @return {void}\n   */\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  /**\n   * @returns {object} - Forget Password modal component\n   * @memberof ForgetPasswordModal\n   */\n  render() {\n    const { errors, email } = this.state;\n    return (\n      <div>\n        <Modal\n          header='Recover Password'\n          trigger={<p className=\"forgotPassword\">Forgot Password?</p>}>\n          <FlashMessagesList />\n          <form onSubmit={this.handleSubmit} >\n            { errors.form &&\n            <div className=\"alert alert-danger\">{errors.form}</div> }\n            <TextFieldGroup\n              error={errors.email}\n              label=\"Email\"\n              field=\"email\"\n              onChange={this.handleChange}\n              type=\"text\"\n              value={email}\n            />\n            <Button\n              className=\"btn waves-effect waves-light\"\n              type=\"submit\"\n            >\n            Reset\n            </Button>\n          </form>\n        </Modal>\n      </div>\n    );\n  }\n\n}\n\nForgetPasswordModal.propTypes = {\n  resetPasswordEmail: PropTypes.func.isRequired,\n  addFlashMessage: PropTypes.func.isRequired,\n};\n\nexport default\nconnect(null, { resetPasswordEmail, addFlashMessage })(ForgetPasswordModal);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/user/ForgetPasswordModal.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport ForgetPasswordModal from './ForgetPasswordModal';\nimport { login } from '../../actions/authenticationActions';\nimport validateInput from '../../validations/login';\nimport FlashMessagesList from '../notification/FlashMessagesList';\n\n/**\n * @class LoginForm\n * @extends {React.Component}\n */\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      errors: {},\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  /**\n   * @returns {isValid} - checks if the fields are not empty\n   * @memberof LoginForm\n   */\n  isValid() {\n    const { errors, isValid } = validateInput(this.state);\n\n    if (!isValid) {\n      this.setState({ errors });\n    }\n    return isValid;\n  }\n\n  /**\n   * @param {any} event\n   * @memberof LoginForm\n   * @returns {void}\n   */\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.isValid()) {\n      this.setState({ errors: {}, isLoading: true });\n      this.props.login(this.state).then(\n        () => this.context.router.history.push('/groups'),\n        err => this.setState({\n          errors: err.data.errors,\n          password: ''\n        })\n      );\n    }\n  }\n\n  /**\n   * @param {any} event\n   * @memberof LoginForm\n   * @returns {void}\n   */\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  /**\n   * @returns {object} - LoginForm component\n   * @memberof LoginForm\n   */\n  render() {\n    const { errors, username, password } = this.state;\n    return (\n      <div>\n        <h4>Login to PostIt</h4>\n        <FlashMessagesList />\n        <form className=\"col s12\" onSubmit={this.handleSubmit}>\n          { errors.form &&\n          <div className=\"alert alert-danger\">{errors.form}</div> }\n          <div className=\"\">\n            <TextFieldGroup\n              error={errors.username}\n              label=\"Username\"\n              onChange={this.handleChange}\n              value={username}\n              field=\"username\"\n              type=\"text\"\n            />\n            <TextFieldGroup\n              error={errors.password}\n              label=\"Password\"\n              onChange={this.handleChange}\n              value={password}\n              field=\"password\"\n              type=\"password\"\n            />\n            <div className=\"input-field col s12\">\n              <button\n                  className=\"btn waves-effect waves-light\"\n                  type=\"submit\" name=\"action\">Submit\n                <i className=\"material-icons right\">send</i>\n              </button>\n              <br /><br />\n            </div>\n          </div>\n        </form>\n        <div className=\"row\">\n          <div className=\"col s6\"><ForgetPasswordModal /></div>\n          <div className=\"col s6\">\n            <p>\n              Do not have an account?\n              <button\n                className=\"blue-text signUp\"\n                onClick={() => this.props.toggleForm('signup')}>\n                <b>Sign Up</b>\n              </button>\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLoginForm.propTypes = {\n  login: PropTypes.func.isRequired,\n  toggleForm: PropTypes.func.isRequired\n};\n\nLoginForm.contextTypes = {\n  router: PropTypes.object.isRequired\n};\n\nexport default connect(null, { login })(LoginForm);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/user/LoginForm.jsx","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport queryString from 'query-string';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport { validateInput }\n  from '../../validations/reset_password';\nimport FlashMessagesList from '../notification/FlashMessagesList';\nimport { resetPassword } from '../../actions/forgotPasswordActions';\nimport { addFlashMessage } from '../../actions/flashMessageActions';\n\n/**\n * @class ResetPasswordForm\n * @extends {React.Component}\n */\nclass ResetPasswordForm extends React.Component {\n  /**\n   * Creates an instance of ResetPasswordForm.\n   * @param {any} props\n   * @memberof ResetPasswordForm\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      newPassword: '',\n      confirmNewPassword: '',\n      errors: {},\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  /**\n   * @memberof ResetPasswordForm\n   * @returns {isValid} - checks if the text field are not empty\n   */\n  isValid() {\n    const { errors, isValid } = validateInput(this.state);\n\n    if (!isValid) {\n      this.setState({ errors });\n    }\n    return isValid;\n  }\n\n  /**\n   * @param {any} event\n   * @memberof ResetPasswordForm\n   * @returns {void}\n   */\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.isValid()) {\n      const query = queryString.parse(this.props.location.search);\n      const email = query.email;\n      this.setState({ errors: {} });\n      if (this.state.newPassword === this.state.confirmNewPassword) {\n        this.props\n        .resetPassword(this.state.newPassword,\n          this.state.confirmNewPassword, email)\n        .then(\n          () => this.context.router.history.push('/'),\n          ({ data }) => {\n            this.setState({\n              errors: data.message,\n              newPassword: '',\n              confirmNewPassword: ''\n            });\n            this.props.addFlashMessage({\n              type: 'error',\n              text: data.message\n            });\n          }\n        );\n      } else {\n        this.props.addFlashMessage({\n          type: 'error',\n          text: 'Password does not Match'\n        });\n      }\n    }\n  }\n\n  /**\n   * @param {any} event\n   * @memberof ResetPasswordForm\n   * @return {void}\n   */\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  /**\n   * @memberof ResetPasswordForm\n   * @returns {object} - ResetPasswordForm Component\n   */\n  render() {\n    const\n    { errors, newPassword, confirmNewPassword } = this.state;\n    return (\n      <div>\n        <section classID=\"wrapper\" className=\"resetPasswordForm\">\n          <div className=\"wrapper_cen2\">\n            <div className=\"row\">\n              <div className=\"col s12 m12 l12 reg_form\">\n                <div className=\"reg_form_cen\">\n                  <h4>Reset Password</h4>\n                  <FlashMessagesList />\n                  <form className=\"col s12\" onSubmit={this.handleSubmit}>\n                    {\n                      errors.form &&\n                      <div className=\"alert alert-danger\">{errors.form}</div>\n                    }\n                    <div className=\"\">\n                      <TextFieldGroup\n                        error={errors.newPassword}\n                        label=\"New Password\"\n                        field=\"newPassword\"\n                        onChange={this.handleChange}\n                        value={newPassword}\n                        type=\"password\"\n                      />\n                      <TextFieldGroup\n                        error={errors.confirmNewPassword}\n                        label=\"Confirm New Password\"\n                        field=\"confirmNewPassword\"\n                        value={confirmNewPassword}\n                        onChange={this.handleChange}\n                        type=\"password\"\n                      />\n                      <div className=\"input-field col s12\">\n                        <button\n                          className=\"btn waves-effect waves-light\"\n                          type=\"submit\" name=\"action\">Submit\n                          <i className=\"material-icons right\">send</i>\n                        </button>\n                        <br /><br />\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nResetPasswordForm.propTypes = {\n  resetPassword: PropTypes.func.isRequired,\n  addFlashMessage: PropTypes.func.isRequired,\n  location: PropTypes.shape({\n    search: PropTypes.shape({})\n  })\n};\n\nResetPasswordForm.contextTypes = {\n  router: PropTypes.object.isRequired\n};\n\nexport default connect(null,\n  { resetPassword, addFlashMessage })(withRouter(ResetPasswordForm));\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/user/ResetPasswordForm.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport validateInput from '../../validations/signup';\nimport {\n  userSignupRequest\n} from '../../actions/authenticationActions';\nimport { addFlashMessage } from '../../actions/flashMessageActions';\n\n/**\n * @class SignupForm\n * @extends {React.Component}\n */\nclass SignupForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      phoneNo: '',\n      password: '',\n      confirm_password: '',\n      errors: {},\n      isLoading: false,\n      invalid: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  /**\n   * Handle onChange event\n   * @param {any} event\n   * @memberof SignupForm\n   * @return {void}\n   */\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  /**\n   * Checks if the form input(s) is valid\n   * @memberof SignupForm\n   * @return {isValid} - checks if the fields are not empty\n   */\n  isValid() {\n    const { errors, isValid } = validateInput(this.state);\n\n    if (!isValid) {\n      this.setState({ errors });\n    }\n\n    return isValid;\n  }\n\n  /**\n   * Handles submit event\n   * @param {any} event\n   * @memberof SignupForm\n   * @return {void}\n   */\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.isValid()) {\n      this.setState({ errors: {}, isLoading: true });\n      this.props.userSignupRequest(this.state).then(\n        () => {\n          this.props.addFlashMessage({\n            type: 'success',\n            text: 'You signed up successfully. Login!'\n          });\n          this.context.router.history.push('/groups');\n        },\n        ({ data }) => this.setState({\n          errors: data,\n          isLoading: false,\n          password: '',\n          confirm_password: '',\n        })\n      );\n    }\n  }\n  /**\n   * renders the signup form component\n   * @returns {object} - signup component\n   * @memberof SignupForm\n   */\n  render() {\n    const { errors } = this.state;\n    return (\n      <div>\n        <h4>Register to PostIt</h4>\n        <form className=\"col s12\" onSubmit={this.handleSubmit}>\n          <div className=\"\">\n            <TextFieldGroup\n              error={errors.username}\n              label=\"Username\"\n              onChange={this.handleChange}\n              checkUserExits={this.checkUserExits}\n              value={this.state.username}\n              field=\"username\"\n              type=\"text\"\n            />\n            <TextFieldGroup\n              error={errors.email}\n              label=\"Email\"\n              onChange={this.handleChange}\n              checkUserExits={this.checkUserExits}\n              value={this.state.email}\n              field=\"email\"\n              type=\"text\"\n            />\n            <TextFieldGroup\n              error={errors.phone}\n              label=\"Phone Number\"\n              onChange={this.handleChange}\n              value={this.state.phoneNo}\n              field=\"phoneNo\"\n              type=\"number\"\n            />\n            <TextFieldGroup\n              error={errors.password}\n              label=\"Password\"\n              onChange={this.handleChange}\n              value={this.state.password}\n              field=\"password\"\n              type=\"password\"\n            />\n            <TextFieldGroup\n              error={errors.confirm_password}\n              label=\"Confirm Password\"\n              onChange={this.handleChange}\n              value={this.state.confirm_password}\n              field=\"confirm_password\"\n              type=\"password\"\n            />\n            <div className=\"input-field col s12\">\n              <button\n                disabled={this.state.isLoading || this.state.invalid}\n                className=\"btn waves-effect waves-light\" type=\"submit\"\n                name=\"action\">Submit\n                <i className=\"material-icons right\">send</i>\n              </button>\n              <br /><br />\n            </div>\n          </div>\n        </form>\n        <p>Have an account already?\n          <button\n            className=\"blue-text signUp\"\n            onClick={() => this.props.toggleForm('login')}\n          >\n            <b>Login</b></button>\n        </p>\n      </div>\n    );\n  }\n}\n\nSignupForm.propTypes = {\n  userSignupRequest: PropTypes.func.isRequired,\n  addFlashMessage: PropTypes.func.isRequired,\n  toggleForm: PropTypes.func.isRequired\n};\n\nSignupForm.contextTypes = {\n  router: PropTypes.object.isRequired\n};\n\nexport default connect(null,\n  { userSignupRequest, addFlashMessage })(SignupForm);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/user/SignupForm.jsx","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/authenticationActions';\n\n/**\n * @class Header\n * @extends {React.Component}\n */\nexport class Header extends React.Component {\n  /**\n   * Creates an instance of Header.\n   * @param {any} props\n   * @memberof Header\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchParam: '',\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  componentDidMount() {\n    $('.tooltipped').tooltip();\n    $('.editButtons').click(() => {\n      $(this).tooltip('close');\n    });\n    $('.dropdown-button').dropdown();\n    $('.button-collapse').sideNav();\n  }\n\n  /**\n   * redirects to search result page\n   * @memberof Header\n   * @return {void}\n   */\n  handleSubmit() {\n    this.context.router.history\n    .push(`/user/search?q=${this.state.searchParam}`);\n  }\n\n  /**\n   * @param {any} event\n   * @memberof Header\n   * @return {void}\n   */\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n/**\n * @param {any} event\n * @memberof Header\n * @return {void}\n */\n  logout(event) {\n    event.preventDefault();\n    this.props.logout(this.state);\n  }\n\n  /**\n   * Renders the header component\n   * @returns {object} - header component\n   * @memberof Header\n   */\n  render() {\n    const { isAuthenticated, user } = this.props.auth;\n\n    return (\n      <div>\n        <div className=\"navbar-fixed\">\n          {\n            isAuthenticated ?\n              <nav>\n                <div className=\"nav-wrapper\">\n                  <Link to=\"/groups\" className=\"brand-logo\">PostIt</Link>\n                  <Link\n                    to=\"#\"\n                    data-activates=\"mobile-demo\"\n                    className=\"button-collapse\">\n                    <i className=\"material-icons\">menu</i>\n                  </Link>\n                  <ul className=\"side-nav\" id=\"nav_mobile\">\n                    <li>\n                      <form id=\"searchForm\" onSubmit={this.handleSubmit}>\n                        <input\n                          type=\"text\"\n                          name=\"searchParam\"\n                          placeholder=\"Search for Friends\"\n                          id=\"searchBar\"\n                          value={this.state.searchParam}\n                          onChange={this.handleChange}\n                        />\n                      </form>\n                    </li>\n                    <li>\n                      <div className=\"authUser\">\n                        <span className=\"welcome\">\n                          Welcome { isAuthenticated ? user.username : ''}\n                        </span>\n                      </div>\n                    </li>\n                    <li>\n                      <ul id=\"dropdown1\" className=\"dropdown-content\">\n                        <li>\n                          <Link to=\"/groups\">\n                            <i\n                              className=\"fa fa-eye\"\n                              aria-hidden=\"true\" />\n                            View all Groups\n                          </Link>\n                        </li>\n                        <li>\n                          <Link to=\"/add-group\">\n                            <i\n                              className=\"fa fa-plus-circle\"\n                              aria-hidden=\"true\" />\n                            Add Groups\n                          </Link>\n                        </li>\n                      </ul>\n                      <Link\n                        to=\"#\" className=\"dropdown-button\"\n                        data-activates=\"mobile_menu_escrow_accounts\" data-beloworigin=\"true\">\n                        <i className=\"material-icons left\">group</i>\n                        Menu\n                        <i className=\"material-icons right\">arrow_drop_down</i>\n                      </Link>\n                    </li>\n                    <li>\n                      <Link\n                        to=\"#\"\n                        id=\"logout\"\n                        className=\"tooltipped\"\n                        data-position=\"top\"\n                        data-tooltip=\"Logout\"\n                      onClick={this.logout.bind(this)}>\n                        <i className=\"material-icons\">power_settings_new</i>\n                      </Link>\n                    </li>\n                  </ul>\n                  <ul\n                    classID=\"nav-mobile\"\n                    className=\"right hide-on-med-and-down\">\n                    <li>\n                      <form id=\"searchForm\" onSubmit={this.handleSubmit}>\n                        <input\n                          type=\"text\"\n                          name=\"searchParam\"\n                          placeholder=\"Search for Friends\"\n                          id=\"searchBar\"\n                          value={this.state.searchParam}\n                          onChange={this.handleChange}\n                        />\n                      </form>\n                    </li>\n                    <li>\n                      <div className=\"authUser\">\n                        <span className=\"welcome\">\n                          Welcome { isAuthenticated ? user.username : ''}\n                        </span>\n                      </div>\n                    </li>\n                    <li>\n                      <ul id=\"dropdown1\" className=\"dropdown-content\">\n                        <li>\n                          <Link to=\"/groups\">\n                            <i\n                              className=\"fa fa-eye\"\n                              aria-hidden=\"true\" />\n                            View all Groups\n                          </Link>\n                        </li>\n                        <li>\n                          <Link to=\"/add-group\">\n                            <i\n                              className=\"fa fa-plus-circle\"\n                              aria-hidden=\"true\" />\n                            Add Groups\n                          </Link>\n                        </li>\n                      </ul>\n                      <Link\n                        to=\"#\" className=\"dropdown-button\"\n                        data-activates=\"dropdown1\">\n                        <i className=\"material-icons left\">group</i>\n                        Menu\n                        <i className=\"material-icons right\">arrow_drop_down</i>\n                      </Link>\n                    </li>\n                    <li>\n                      <Link\n                        to=\"#\"\n                        id=\"logout\"\n                        className=\"tooltipped\"\n                        data-position=\"top\"\n                        data-tooltip=\"Logout\"\n                      onClick={this.logout.bind(this)}>\n                        <i className=\"material-icons\">power_settings_new</i>\n                      </Link>\n                    </li>\n                  </ul>\n                </div>\n              </nav> :\n              <nav><Link to=\"/\" className=\"brand-logo\">PostIt</Link></nav>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  auth: PropTypes.object.isRequired,\n  logout: PropTypes.func.isRequired\n};\n\nHeader.contextTypes = {\n  router: PropTypes.object.isRequired\n};\n\n\nconst mapStateToProps = state => (\n  {\n    auth: state.auth\n  }\n);\n\nexport default connect(mapStateToProps, { logout })(Header);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/common/Header.jsx"],"sourceRoot":""}