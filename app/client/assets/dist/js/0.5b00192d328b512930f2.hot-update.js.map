{"version":3,"sources":["webpack:///./app/client/components/messages/AllUsers.jsx?d195"],"names":["AllUsers","props","fetchGroupUsers","groupId","selectedGroupId","console","log","addUserToGroup","groupUsers","map","groupUser","id","username","propTypes","func","isRequired","array","number","mapStateToProps","state"],"mappings":";;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;;;;;;;IAEMA,Q;;;;;;;;;;;;AACJ;;;;yCAIqB;AACnB,WAAKC,KAAL,CAAWC,eAAX,CAA2B,KAAKD,KAAL,CAAWE,OAAtC;AACD;;;6BACQ;AACP,UAAMC,kBAAkB,KAAKH,KAAL,CAAWG,eAAnC;AACAC,cAAQC,GAAR,CAAY,KAAKL,KAAjB;AAFO,UAGCM,cAHD,GAGoB,KAAKN,KAHzB,CAGCM,cAHD;;AAIP,UAAMC,aAAa,KAAKP,KAAL,CAAWO,UAA9B;AACA,aACE;AAAA;AAAA;AACE;AAAA;AAAA,YAAK,WAAU,iBAAf;AACE;AAAA;AAAA,cAAI,WAAU,WAAd;AAAA;AAAA,WADF;AAEG;AACG,4BAAgBD,cADnB;AAEG,qBAASH;AAFZ,YAFH;AAME;AAAA;AAAA;AACE,yBAAU,4BADZ;AAEE,kCAAiB,WAFnB;AAIII,uBAAWC,GAAX,CAAe;AAAA,qBACb;AAAA;AAAA,kBAAI,KAAKC,UAAUC,EAAnB;AACE;AAAA;AAAA,oBAAK,WAAU,oBAAf;AACE;AAAA;AAAA;AACA,0BAAG,GADH;AAEA,iCAAU,WAFV;AAEuBD,8BAAUE;AAFjC;AADF;AADF,eADa;AAAA,aAAf;AAJJ;AANF;AADF,OADF;AAyBD;;;;;;AAGHZ,SAASa,SAAT,GAAqB;AACnBN,kBAAgB,oBAAUO,IAAV,CAAeC,UADZ;AAEnBb,mBAAiB,oBAAUY,IAAV,CAAeC,UAFb;AAGnBP,cAAY,oBAAUQ,KAAV,CAAgBD,UAHT;AAInBZ,WAAS,oBAAUc,MAAV,CAAiBF,UAJP;AAKnBX,mBAAiB,oBAAUa,MAAV,CAAiBF;AALf,CAArB;;AAQA,IAAMG,kBAAkB,SAAlBA,eAAkB;AAAA,SAAU;AAChCV,gBAAYW,MAAMX;AADc,GAAV;AAAA,CAAxB;;kBAKe,yBAAQU,eAAR,EAAyB,EAAEhB,8CAAF,EAAzB,EAA8CF,QAA9C,C","file":"0.5b00192d328b512930f2.hot-update.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport AddUserModal from './AddUserModal';\nimport { fetchGroupUsers } from '../../actions/groupActions';\n\nclass AllUsers extends Component {\n  /**\n   * @memberof AllUsers\n   * @return {void}\n   */\n  componentWillMount() {\n    this.props.fetchGroupUsers(this.props.groupId);\n  }\n  render() {\n    const selectedGroupId = this.props.selectedGroupId;\n    console.log(this.props);\n    const { addUserToGroup } = this.props;\n    const groupUsers = this.props.groupUsers;\n    return (\n      <div>\n        <div className=\"col s12 m12 l3 \">\n          <h5 className=\"groupName\">Users</h5>\n          {<AddUserModal\n              addUserToGroup={addUserToGroup}\n              groupId={selectedGroupId}\n              />}\n          <ul\n            className=\"collapsible allMessageCard\"\n            data-collapsible=\"accordion\">\n            {\n              groupUsers.map(groupUser =>\n                <li key={groupUser.id}>\n                  <div className=\"collapsible-header\">\n                    <Link\n                    to=\"#\"\n                    className=\"userNames\">{groupUser.username}</Link>\n                  </div>\n                </li>\n              )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nAllUsers.propTypes = {\n  addUserToGroup: PropTypes.func.isRequired,\n  fetchGroupUsers: PropTypes.func.isRequired,\n  groupUsers: PropTypes.array.isRequired,\n  groupId: PropTypes.number.isRequired,\n  selectedGroupId: PropTypes.number.isRequired\n};\n\nconst mapStateToProps = state => ({\n  groupUsers: state.groupUsers\n});\n\n\nexport default connect(mapStateToProps, { fetchGroupUsers })(AllUsers);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/messages/AllUsers.jsx"],"sourceRoot":""}