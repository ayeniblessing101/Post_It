{"version":3,"sources":["webpack:///./app/client/components/messages/MessageForm.jsx?c5ed"],"names":["MessageForm","props","state","messages","group","groupId","message","priority","handleSubmit","bind","handleChange","event","setState","target","name","value","preventDefault","message_body","priority_level","postMessage","then","getMessages","$","document","ready","material_select","nextProps","grouId","groudId","allMessages","parseInt","groupTitle","map","currentGroup","id","groupName","length","User","username","createdAt","ISO_8601","fromNow","toLowerCase","Component","propTypes","func","isRequired","number","array","mapStateToProps","groups"],"mappings":"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","file":"0.7e6be92ec55d3c71a955.hot-update.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { getMessages, postMessage }\nfrom '../../actions/messageAction';\n\n/**\n * @class MessageForm\n * @extends {React.Component}\n */\nclass MessageForm extends React.Component {\n  /**\n   * Creates an instance of MessageForm.\n   * @param {any} props\n   * @memberof MessageForm\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: this.props.messages,\n      group: this.props.group,\n      groupId: this.props.groupId,\n      message: '',\n      priority: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  /**\n   * @param {any} event\n   * @memberof MessageForm\n   * @returns {void}\n   */\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  /**\n   * @param {any} event\n   * @memberof MessageForm\n   * @return {void}\n   */\n  handleSubmit(event) {\n    event.preventDefault();\n    const message = {\n      message_body: this.state.message,\n      priority_level: this.state.priority\n    };\n    this.props.postMessage(this.state.groupId, message)\n    .then(() => {\n      this.setState({\n        message: '',\n        priority: ''\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.props.getMessages(this.props.groupId);\n    $(document).ready(() => {\n      $('select').material_select();\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      messages: nextProps.messages,\n      group: nextProps.group,\n      grouId: nextProps.groudId\n    });\n  }\n  render() {\n    let allMessages;\n    const { group } = this.state;\n    const { messages } = this.state;\n    const groupId = parseInt(this.props.groupId, 10);\n    let groupTitle = 'No Group Found';\n\n    group.map((currentGroup) => {\n      const { id, groupName } = currentGroup;\n      if (id === groupId) {\n        groupTitle = groupName;\n      }\n    });\n\n    if (messages.length > 0) {\n      allMessages = messages.map(message => (\n        <div key={message.id}>\n          <b className=\"senderName\">\n            {message.User.username}\n          </b>\n          <span className=\"right sentTime\">\n            { moment(message.createdAt, moment.ISO_8601).fromNow() }\n          </span>\n          <p key={message.id} className=\"messageBody\">\n            {message.message_body}\n            <span\n            className={`new badge ${message.priority_level && (message.priority_level).toLowerCase()}`}\n            data-badge-caption={message.priority_level} />\n          </p>\n          <hr /><br />\n        </div>));\n    } else {\n      allMessages = (\n        <h6>No messages to show</h6>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"col s12 m12 l6 message-cards\">\n          <div className=\"message-cards-board\">\n            <h5 className=\"groupTitle\">{groupTitle}</h5>\n            <div className=\"messages\">{ allMessages }</div>\n          </div>\n          <div className=\"message-cards-form\">\n            <form onSubmit={this.handleSubmit} method=\"post\">\n              <div className=\"input-field col s8\">\n                <textarea\n                  placeholder=\"Write your message Here\"\n                  id=\"message\"\n                  type=\"text\"\n                  required\n                  name=\"message\"\n                  onChange={this.handleChange}\n                  value={this.state.message}\n                  className=\"materialize-textarea\"\n                />\n              </div>\n              <div className=\"col s4 mySelect\">\n                <select\n                  className=\"browser-default\"\n                  required\n                  value={this.state.priority}\n                  name=\"priority\"\n                  onChange={this.handleChange}>\n                  <option value=\"\" disabled>Select Priority</option>\n                  <option value=\"Normal\">Normal</option>\n                  <option value=\"Critical\">Critical</option>\n                  <option value=\"Urgent\">Urgent</option>\n                </select>\n                <br />\n                <button className=\"btn messageBtn\" type=\"submit\">\n                  <i className=\"material-icons\">send</i>\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMessageForm.propTypes = {\n  postMessage: PropTypes.func.isRequired,\n  getMessages: PropTypes.func.isRequired,\n  groupId: PropTypes.number.isRequired,\n  messages: PropTypes.array.isRequired\n};\n\n\nconst mapStateToProps = state => ({\n  messages: state.messages,\n  group: state.groups\n});\n\nexport default\nconnect(mapStateToProps,\n  { getMessages, postMessage })(MessageForm);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/messages/MessageForm.jsx"],"sourceRoot":""}