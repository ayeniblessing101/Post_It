{"version":3,"sources":["webpack:///./app/client/components/user/ResetPasswordForm.jsx?7303"],"names":["ResetPasswordForm","props","state","newPassword","confirmNewPassword","errors","handleSubmit","bind","handleChange","isValid","setState","event","preventDefault","query","parse","location","search","email","resetPassword","then","context","router","history","push","data","console","log","message","addFlashMessage","type","text","target","name","value","form","Component","propTypes","func","isRequired","contextTypes","object"],"mappings":"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","file":"0.032809595e7fed0d5803.hot-update.js","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport queryString from 'query-string';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport { validateInput }\n  from '../../validations/reset_password';\nimport FlashMessagesList from '../notification/FlashMessagesList';\nimport { resetPassword } from '../../actions/forgotPasswordActions';\nimport { addFlashMessage } from '../../actions/flashMessageActions';\n\n/**\n * @class ResetPasswordForm\n * @extends {React.Component}\n */\nclass ResetPasswordForm extends React.Component {\n  /**\n   * Creates an instance of ResetPasswordForm.\n   * @param {any} props\n   * @memberof ResetPasswordForm\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      newPassword: '',\n      confirmNewPassword: '',\n      errors: {},\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  /**\n   * @memberof ResetPasswordForm\n   * @returns {isValid} - checks if the text field are not empty\n   */\n  isValid() {\n    const { errors, isValid } = validateInput(this.state);\n\n    if (!isValid) {\n      this.setState({ errors });\n    }\n    return isValid;\n  }\n\n  /**\n   * @param {any} event\n   * @memberof ResetPasswordForm\n   * @returns {void}\n   */\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.isValid()) {\n      const query = queryString.parse(this.props.location.search);\n      const email = query.email;\n      this.setState({ errors: {} });\n      if (this.state.newPassword === this.state.confirmNewPassword) {\n        this.props\n        .resetPassword(this.state.newPassword, this.state.confirmNewPassword, email)\n        .then(\n          () => this.context.router.history.push('/'),\n          ({ data }) => {\n            console.log(data);\n            this.setState({\n              errors: data.message,\n              newPassword: '',\n              confirmNewPassword: ''\n            });\n          }\n        );\n      } else {\n        this.props.addFlashMessage({\n          type: 'error',\n          text: 'Password does not Match'\n        });\n      }\n    }\n  }\n\n  /**\n   * @param {any} event\n   * @memberof ResetPasswordForm\n   * @return {void}\n   */\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  /**\n   * @memberof ResetPasswordForm\n   * @returns {object} - ResetPasswordForm Component\n   */\n  render() {\n    const\n    { errors, newPassword, confirmNewPassword } = this.state;\n    return (\n      <div>\n        <section classID=\"wrapper\" className=\"resetPasswordForm\">\n          <div className=\"wrapper_cen2\">\n            <div className=\"row\">\n              <div className=\"col s12 m12 l12 reg_form\">\n                <div className=\"reg_form_cen\">\n                  <h4>Reset Password</h4>\n                  <FlashMessagesList />\n                  <form className=\"col s12\" onSubmit={this.handleSubmit}>\n                    {\n                      errors.form &&\n                      <div className=\"alert alert-danger\">{errors.form}</div>\n                    }\n                    <div className=\"\">\n                      <TextFieldGroup\n                        error={errors.newPassword}\n                        label=\"New Password\"\n                        field=\"newPassword\"\n                        onChange={this.handleChange}\n                        value={newPassword}\n                        type=\"password\"\n                      />\n                      <TextFieldGroup\n                        error={errors.confirmNewPassword}\n                        label=\"Confirm New Password\"\n                        field=\"confirmNewPassword\"\n                        value={confirmNewPassword}\n                        onChange={this.handleChange}\n                        type=\"password\"\n                      />\n                      <div className=\"input-field col s12\">\n                        <button\n                          className=\"btn waves-effect waves-light\"\n                          type=\"submit\" name=\"action\">Submit\n                          <i className=\"material-icons right\">send</i>\n                        </button>\n                        <br /><br />\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nResetPasswordForm.propTypes = {\n  resetPassword: PropTypes.func.isRequired,\n  addFlashMessage: PropTypes.func.isRequired\n};\n\nResetPasswordForm.contextTypes = {\n  router: PropTypes.object.isRequired\n};\n\nexport default connect(null,\n  { resetPassword, addFlashMessage })(withRouter(ResetPasswordForm));\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/user/ResetPasswordForm.jsx"],"sourceRoot":""}