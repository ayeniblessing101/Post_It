{"version":3,"sources":["webpack:///./app/client/components/notification/FlashMessagesList.jsx?ec54","webpack:///./app/client/utils/setAuthorizationToken.js?c600","webpack:///./app/client/actions/getUsersAction.js?837b","webpack:///./app/client/actions/messageAction.js?f4ea","webpack:///./app/client/components/group/AddGroupForm.jsx?80e0","webpack:///./app/client/components/group/GroupCard.jsx?a773","webpack:///./app/client/components/group/GroupsList.jsx?5ba1","webpack:///./app/client/components/group/GroupsPage.jsx?42ea","webpack:///./app/client/components/messages/AddUserModal.jsx?1cbc","webpack:///./app/client/components/messages/AllGroups.jsx?0a0a","webpack:///./app/client/components/messages/AllUsers.jsx?d195","webpack:///./app/client/components/messages/MessageBoard.jsx?8fe6","webpack:///./app/client/components/messages/MessageForm.jsx?c5ed","webpack:///./app/client/components/messages/MessagePage.jsx?4d9d","webpack:///./app/client/components/notification/FlashMessage.jsx?dd46","webpack:///./app/client/components/user/ForgetPasswordModal.jsx?1ec4","webpack:///./app/client/components/user/LoginForm.jsx?65be","webpack:///./app/client/components/user/ResetPasswordForm.jsx?7303","webpack:///./app/client/components/user/ResetPasswordPage.jsx?dabb","webpack:///./app/client/components/user/SignupForm.jsx?3869","webpack:///./app/client/components/user/UserList.jsx?9af7","webpack:///./app/client/reducers/groupsReducer.js?2155","webpack:///./app/client/utils/numberValidation.js?a1a8","webpack:///./app/client/actions/groupActions.js?06ef","webpack:///./app/client/validations/validation.js?9642"],"names":["FlashMessagesList","messages","props","map","message","id","deleteFlashMessage","Component","propTypes","array","isRequired","func","mapStateToProps","state","flashMessages","setAuthorizationToken","token","defaults","headers","common","Authorization","getUsersAction","addUsersToReduxState","type","users","searchParams","offset","limit","get","params","q","then","response","dispatch","data","postMessage","getMessages","postMessageStatus","getAllMessages","groupId","post","AddGroupForm","groupname","errors","handleSubmit","bind","handleChange","isValid","setState","event","preventDefault","isLoading","createGroup","context","router","history","push","catch","err","addFlashMessage","text","target","name","value","form","contextTypes","object","GroupCard","avatar1","require","group","groupName","isEmpty","GroupsList","groups","emptyMessage","groupsList","i","GroupsPage","usersPerPage","pageCount","Math","ceil","totalCount","handlePageClick","fetchGroups","nextProps","allGroups","page","selected","clear","shape","number","AddUserModal","username","addUserToGroup","res","fetchGroupUsers","AllGroups","length","AllUsers","groupUsers","groupUser","MessageBoard","selectedGroupId","console","log","MessageForm","priority","message_body","priority_level","$","document","ready","material_select","grouId","groudId","allMessages","parseInt","groupTitle","currentGroup","User","createdAt","ISO_8601","fromNow","handleMessageStatus","toLowerCase","MessagePage","match","Number","selectedGroupName","defaultProps","FlashMessage","onClick","ForgetPasswordModal","email","resetPasswordEmail","LoginForm","password","login","toggleForm","ResetPasswordForm","newPassword","confirmNewPassword","query","parse","location","search","resetPassword","ResetPasswordPage","ok","checkToken","SignupForm","phoneNo","confirm_password","invalid","userSignupRequest","phone","checkUserExits","UserList","pagination","count","user","index","initialState","pageNumber","pageSize","action","checkNum","num","rawNum","isNaN","module","exports","getGroups","getGroupUsers","addUserStatus","status","error","members","validateSignUpInput","inputData","isEmail","equals","validateLoginInput","validateAddUserInput","validateAddGroupInput","validateForgotPasswordInput","validateResetPasswordInput"],"mappings":"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","file":"0.d0643c2838948c35b880.hot-update.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FlashMessage from './FlashMessage';\n\nimport { deleteFlashMessage } from '../../actions/flashMessageActions';\n\n/**\n * @class FlashMessagesList\n * @extends {React.Component}\n */\nclass FlashMessagesList extends React.Component {\n  render() {\n    const messages = this.props.messages.map(message =>\n     (<FlashMessage\n        key={message.id}\n        message={message}\n        deleteFlashMessage={this.props.deleteFlashMessage}\n      />)\n    );\n    return (\n      <div>{messages}</div>\n    );\n  }\n}\n\nFlashMessagesList.propTypes = {\n  messages: PropTypes.array.isRequired,\n  deleteFlashMessage: PropTypes.func.isRequired\n};\n\n/**\n * takes a state in the store (messages) and passes it to the component as props\n *\n * @param {object} state\n * @returns\n */\nfunction mapStateToProps(state) {\n  return {\n    messages: state.flashMessages\n  };\n}\n\nexport default\n connect(mapStateToProps, { deleteFlashMessage })(FlashMessagesList);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/notification/FlashMessagesList.jsx","import axios from 'axios';\n\nconst setAuthorizationToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  } else {\n    delete axios.defaults.headers.common.Authorization;\n  }\n};\n\n\nexport default setAuthorizationToken;\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/utils/setAuthorizationToken.js","import axios from 'axios';\nimport { GET_ALL_USERS } from './types';\n\nconst addUsersToReduxState = users => (\n  {\n    type: GET_ALL_USERS,\n    users\n  }\n);\n\n/**\n * @function getUsers\n * @param {string} searchParams - search parameters\n * @param {int} offset - offset\n * @param {int} limit - limit\n *\n * @return {function} action payload data and action type\n */\nexport default function getUsersAction(searchParams, offset = 0, limit = 5) {\n  return dispatch => (\n    axios.get('/api/v1/user/search', {\n      params: {\n        q: searchParams,\n        offset,\n        limit\n      }\n    })\n  )\n    .then((response) => {\n      dispatch(addUsersToReduxState(response.data));\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/actions/getUsersAction.js","import axios from 'axios';\nimport { POST_MESSAGE, GET_MESSAGES } from './types';\n\n/**\n * post message status\n * @param {any} message\n * @return {object} -action payload data and action type\n */\nexport const postMessageStatus = message => (\n  {\n    type: POST_MESSAGE,\n    message\n  }\n);\n\n/**\n * action to fetch all messages\n * @param {any} messages\n * @return {object} - action payload data and action type\n */\nexport const getAllMessages = messages => (\n  {\n    type: GET_MESSAGES,\n    messages\n  }\n);\n\n/**\n * Post a message.\n * @param {integer} groupId - groupdId.\n * @param {string} message - groupdId.\n *\n *@returns {function} - dispatches an action to post message.\n */\nexport function postMessage(groupId, message) {\n  return dispatch => (\n    axios.post(`/api/v1/group/${groupId}/message`, message)\n    .then(({ data }) => {\n      dispatch(postMessageStatus(data.data));\n    })\n  );\n}\n\n/**\n * Fetch all Messages.\n * @param {Integer} groupId - groupdId.\n *\n * @returns {function} - dispatch an action to get all messages to the store.\n */\nexport function getMessages(groupId) {\n  return dispatch => (\n    axios.get(`/api/v1/group/${groupId}/messages`)\n    .then(({ data }) => {\n      dispatch(getAllMessages(data.messages));\n    })\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/actions/messageAction.js","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport { createGroup } from '../../actions/groupActions';\nimport { addFlashMessage } from '../../actions/flashMessageActions';\nimport { validateAddGroupInput } from '../../validations/validation';\nimport FlashMessagesList from '../notification/FlashMessagesList';\n\n/**\n * @class AddGroupForm\n * @extends {React.Component}\n */\nexport class AddGroupForm extends React.Component {\n  /**\n   * Creates an instance of AddGroupForm.\n   * @param {any} props\n   * @memberof AddGroupForm\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      groupname: '',\n      errors: {}\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  isValid() {\n    const { errors, isValid } = validateAddGroupInput(this.state);\n\n    if (!isValid) {\n      this.setState({ errors });\n    }\n\n    return isValid;\n  }\n\n  /**\n   * @param {any} event\n   * @memberof AddGroupForm\n   *\n   * @return {void}\n   */\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.isValid()) {\n      this.setState({ errors: {}, isLoading: true });\n      this.props.createGroup(this.state).then(\n        () => {\n          this.context.router.history.push('/groups');\n        },\n        this.setState({\n          groupname: '',\n          errors: {}\n        })\n      ).catch((err) => {\n        this.props.addFlashMessage({\n          type: 'error',\n          text: err.data.groupname\n        });\n      });\n    }\n  }\n\n  /**\n   * @param {any} event\n   * @memberof AddGroupForm\n   *\n   * @return {void}\n   */\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  /**\n   * Render AddGroup Form component\n   *\n   * @returns {object} Add group form component\n   * @memberof AddGroupForm\n   */\n  render() {\n    const { errors, groupname } = this.state;\n    return (\n      <div>\n        <div className=\"col s12 m10 l10 col-md-10\">\n          <div className=\"mycontainer\">\n            <div className=\"row\">\n              <div className=\"col s12 m4 l2\" />\n              <div className=\"col s12 m4 l8 large-cards\">\n                <h4>Add Group</h4>\n                <FlashMessagesList />\n                <form onSubmit={this.handleSubmit}>\n                  { errors.form &&\n                    <div\n                      className=\"alert alert-danger\">\n                      {errors.form}\n                    </div>\n                  }\n                  <div className=\"\">\n                    <TextFieldGroup\n                      error={errors.groupname}\n                      label=\"Group Name\"\n                      onChange={this.handleChange}\n                      value={groupname}\n                      field=\"groupname\"\n                      type=\"text\"\n                    />\n                    <div className=\"input-field col s12\">\n                      <button\n                        className=\"btn waves-effect waves-light\"\n                        type=\"submit\">\n                        Create\n                      </button>\n                      <br /><br />\n                    </div>\n                  </div>\n                  <br /><br />\n                </form>\n              </div>\n              <div className=\"col s12 m4 l2\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddGroupForm.propTypes = {\n  createGroup: PropTypes.func.isRequired,\n  addFlashMessage: PropTypes.func.isRequired,\n};\n\nAddGroupForm.contextTypes = {\n  router: PropTypes.object.isRequired\n};\n\nexport default connect(null, { createGroup, addFlashMessage })(AddGroupForm);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/group/AddGroupForm.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst avatar1 = require('../../assets/images/avatar1.png');\n\n/**\n * Renders GroupCard component\n * @export\n * @param {any} group\n *\n * @returns {object} - GroupCard component\n */\nexport default function GroupCard({ group }) {\n  return (\n    <div>\n      <Link to={`/group/${group.id}`}>\n        <div className=\"col s12 m5 l3 small-cards\"><br />\n          <img\n          src={avatar1}\n          alt=\"avatar\"\n          />\n          <h5><b>{group.groupName}</b></h5>\n          <Link to={`/group/${group.id}`} className=\"btn btn-primary\">\n            Enter Group\n          </Link>\n          <br /><br />\n        </div>\n      </Link>\n    </div>\n  );\n}\n\nGroupCard.propTypes = {\n  group: PropTypes.object.isRequired\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/group/GroupCard.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport GroupCard from './GroupCard';\n\nconst isEmpty = require('lodash/isEmpty');\n\n/**\n * Renders GroupsList component\n * @param {any} groups\n *\n * @returns {object} - GroupsList component\n */\nconst GroupsList = ({ groups }) => {\n  const emptyMessage = (\n    <div>\n      <h3 className=\"emptyMessage\">No Groups</h3>\n    </div>\n\n  );\n  const groupsList = (\n    <div>\n      <div className=\"col s12 m1 l1\" />\n      <div id=\"groupsList\" className=\"col s12 m11 l11 col-md-10 no-float\">\n        <div className=\"mycontainer\">\n          <div className=\"row \">\n            <h4>All Groups</h4>\n            <br />\n            <div className=\"mycontainer\">\n              <div className=\"row \">\n                {\n                  groups.map((group, i) => {\n                    return <GroupCard group={group} key={i} />;\n                  })\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n      isEmpty(groups) ? emptyMessage : groupsList\n  );\n};\n\nGroupsList.propTypes = {\n  groups: PropTypes.array.isRequired,\n};\n\nexport default GroupsList;\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/group/GroupsList.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ReactPaginate from 'react-paginate';\nimport GroupsList from './GroupsList';\nimport Header from '../common/Header';\nimport Footer from '../common/Footer';\nimport { fetchGroups } from '../../actions/groupActions';\n\n/**\n * renders groups page compoent\n * @class GroupsPage\n * @extends {React.Component}\n */\nclass GroupsPage extends React.Component {\n  /**\n   * Creates an instance of GroupsPage.\n   * @param {any} props\n   * @memberof GroupsPage\n   */\n  constructor(props) {\n    super(props);\n    this.usersPerPage = 6;\n    this.state = {\n      groups: [],\n      offset: 0,\n      pageCount: Math.ceil(this.props.groups.totalCount / this.usersPerPage)\n    };\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n  }\n  /**\n   * @memberof GroupsPage\n   *\n   * @return {void}\n   */\n  componentDidMount() {\n    this.props.fetchGroups(0, 6);\n  }\n\n  /**\n   * @param {any} nextProps\n   * @memberof GroupsPage\n   *\n   * @return {void}\n   */\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      groups: nextProps.groups.allGroups,\n      totalCount: nextProps.groups.totalCount,\n      pageCount: Math.ceil(nextProps.groups.totalCount / this.usersPerPage)\n    });\n  }\n\n  /**\n   * used to calculate offset\n   * @param {number} page\n   * @memberof AllGroups\n   * @return {page} - page\n   */\n  handlePageClick(page) {\n    const selected = page.selected;\n    const offset = Math.ceil(selected * this.usersPerPage);\n\n    this.setState({ offset }, () => {\n      this.props.fetchGroups(offset);\n    });\n  }\n\n  /**\n   * Renders the GroupPage Component\n   * @returns {object} groupsPage Component\n   * @memberof GroupsPage\n   */\n  render() {\n    const { totalCount, groups } = this.state;\n    return (\n      <div id=\"groupsPage\">\n        <Header />\n        <div className=\"mycontainer\" >\n          <div className=\"row\">\n            <GroupsList groups={groups} />\n          </div>\n          <div className=\"row\">\n            <div className=\"dashboard-paginate\">\n              {\n                totalCount > 6 &&\n                <ReactPaginate\n                previousLabel={'previous'}\n                nextLabel={'next'}\n                breakLabel={<a href=\"\">...</a>}\n                breakClassName={'break-me'}\n                pageCount={this.state.pageCount}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={5}\n                onPageChange={this.handlePageClick}\n                containerClassName={'pagination'}\n                subContainerClassName={'pages pagination'}\n                activeClassName={'active'}\n                />\n                }\n            </div>\n          </div>\n          <div style={{ clear: 'both' }} />\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\n// as props is introduced to this component its documented with propTypes\nGroupsPage.propTypes = {\n  fetchGroups: PropTypes.func.isRequired,\n  groups: PropTypes.shape({\n    totalCount: PropTypes.number.isRequired,\n    allGroups: PropTypes.array.isRequired,\n  }),\n};\n\nconst mapStateToProps = state => ({\n  groups: state.groups,\n  pageCount: state.groups.pageCount,\n});\n\n\nexport default connect(mapStateToProps, { fetchGroups })(GroupsPage);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/group/GroupsPage.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal } from 'react-materialize';\nimport { connect } from 'react-redux';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport { validateAddUserInput } from '../../validations/validation';\nimport { addFlashMessage } from '../../actions/flashMessageActions';\nimport { fetchGroupUsers } from '../../actions/groupActions';\nimport FlashMessagesList from '../notification/FlashMessagesList';\n\n/**\n * @class AddUserModal\n * @extends {React.Component}\n */\nclass AddUserModal extends React.Component {\n  /**\n   * Creates an instance of AddUserModal.\n   * @param {any} props\n   * @memberof AddUserModal\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      errors: {}\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  /**\n   * Checks if form input(s) is valid\n   * @returns {isValid} - checks if form input is valid\n   * @memberof AddUserModal\n   */\n  isValid() {\n    const { errors, isValid } = validateAddUserInput(this.state);\n\n    if (!isValid) {\n      this.setState({ errors });\n    }\n\n    return isValid;\n  }\n\n  /**\n   * Handles submit request\n   * @param {any} event\n   * @memberof AddUserModal\n   *\n   * @returns {void}\n   */\n  handleSubmit(event) {\n    event.preventDefault();\n    const groupId = this.props.groupId;\n    if (this.isValid()) {\n      this.setState({ errors: {} });\n      this.props.addUserToGroup(groupId, {\n        username: this.state.username\n      }).then((res) => {\n        if (res === true) {\n          this.props.addFlashMessage({\n            type: 'success',\n            text: 'User has been add to Group Successfully'\n          });\n          this.props.fetchGroupUsers(groupId);\n        } else {\n          this.props.addFlashMessage({\n            type: 'error',\n            text: res\n          });\n        }\n      });\n    }\n    this.setState({\n      username: '',\n      errors: {}\n    });\n  }\n\n  /**\n   * Handles onChange event\n   * @param {any} event\n   * @memberof AddUserModal\n   *\n   * @return {void}\n   */\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  /**\n   * @memberof AddUserModal\n   *\n   * @returns {object} - AddUserModal Component\n   */\n  render() {\n    const { errors, username } = this.state;\n    return (\n      <div>\n        <Modal\n          header=\"Add User to Group\"\n          trigger={<Button className=\"add_user\">Add User</Button>}>\n          <FlashMessagesList />\n          <form onSubmit={this.handleSubmit} >\n            { errors.form &&\n              <div className=\"alert alert-danger\">{errors.form}</div> }\n            <TextFieldGroup\n              error={errors.username}\n              label=\"Username\"\n              onChange={this.handleChange}\n              value={username}\n              field=\"username\"\n              type=\"text\"\n            />\n            <Button\n              className=\"btn waves-effect waves-light\"\n              type=\"submit\"\n            >\n            Add\n            </Button>\n          </form>\n        </Modal>\n      </div>\n    );\n  }\n\n}\n\nAddUserModal.propTypes = {\n  addUserToGroup: PropTypes.func.isRequired,\n  fetchGroupUsers: PropTypes.func.isRequired,\n  addFlashMessage: PropTypes.func.isRequired,\n  groupId: PropTypes.number.isRequired\n};\n\nexport default connect(null,\n  { addFlashMessage, fetchGroupUsers })(AddUserModal);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/messages/AddUserModal.jsx","import React from 'react';\nimport ReactPaginate from 'react-paginate';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchGroups } from '../../actions/groupActions';\n\n\n/**\n * @class AllGroups\n * @extends {React.Component}\n */\nclass AllGroups extends React.Component {\n  /**\n   * Creates an instance of AllGroups.\n   * @param {any} props\n   * @memberof AllGroups\n   */\n  constructor(props) {\n    super(props);\n    this.usersPerPage = 5;\n    // const { allGroups } = this.props.groups;\n    this.state = {\n      groups: this.props.groups.allGroups,\n      offset: 0,\n      pageCount: Math.ceil(this.props.groups.totalCount / this.usersPerPage)\n    };\n    this.handlePageClick = this.handlePageClick.bind(this);\n  }\n\n  /**\n   * @memberof AllGroups\n   *\n   * @return {void}\n   */\n  componentDidMount() {\n    this.props.fetchGroups();\n  }\n\n  /**\n   * @param {any} nextProps\n   * @memberof AllGroups\n   * @return {void}\n   */\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      groups: nextProps.groups.allGroups,\n      totalCount: nextProps.groups.totalCount,\n      messages: nextProps.messages,\n      pageCount: Math.ceil(nextProps.groups.totalCount / this.usersPerPage)\n    });\n  }\n  /**\n   * used to calculate offset\n   * @param {number} page\n   * @memberof AllGroups\n   * @return {page} - page\n   */\n  handlePageClick(page) {\n    const selected = page.selected;\n    const offset = Math.ceil(selected * this.usersPerPage);\n\n    this.setState({ offset }, () => {\n      this.props.fetchGroups(offset);\n    });\n  }\n  /**\n   * Renders the AllGroup Component\n   * @memberof AllGroups\n   *\n   * @returns {object} - AllGroups Component\n   */\n  render() {\n    const { totalCount } = this.state;\n    const groups = this.state.groups;\n    return (\n      <div>\n        <div className=\"col s12 m12 l3 \">\n          <ul\n            className=\"collapsible allMessageCard\"\n            data-collapsible=\"accordion\"\n          >\n            {\n              groups.length > 0 && (\n                groups.map(group =>\n                  <li key={group.id}>\n                    <div className=\"collapsible-header\">\n                      <i className=\"material-icons\">filter_drama</i>\n                      <Link to={`/group/${group.id}`} className=\"groupNames\">\n                        {group.groupName}\n                      </Link>\n                    </div>\n                  </li>\n                )\n              )\n            }\n          </ul>\n          {\n            totalCount > 4 &&\n            <ReactPaginate\n            previousLabel={'previous'}\n            nextLabel={'next'}\n            breakLabel={<a href=\"\">...</a>}\n            breakClassName={'break-me'}\n            pageCount={this.state.pageCount}\n            marginPagesDisplayed={2}\n            pageRangeDisplayed={5}\n            onPageChange={this.handlePageClick}\n            containerClassName={'pagination'}\n            subContainerClassName={'pages pagination'}\n            activeClassName={'active'}\n          />\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nAllGroups.propTypes = {\n  groups: PropTypes.object.isRequired,\n  fetchGroups: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  groups: state.groups,\n  pageCount: state.groups.pageCount,\n  messages: state.messages\n});\n\nexport default connect(mapStateToProps, { fetchGroups })(AllGroups);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/messages/AllGroups.jsx","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchGroupUsers } from '../../actions/groupActions';\n\nclass AllUsers extends Component {\n  /**\n   * @memberof AllUsers\n   *\n   * @return {void}\n   */\n  componentWillMount() {\n    this.props.fetchGroupUsers(this.props.groupId);\n  }\n  render() {\n    const groupUsers = this.props.groupUsers;\n    return (\n      <div>\n        <div className=\"col s12 m12 l3 \">\n          <ul\n            className=\"collapsible allMessageCard\"\n            data-collapsible=\"accordion\">\n            {\n              groupUsers.map(groupUser =>\n                <li key={groupUser.id}>\n                  <div className=\"collapsible-header\">\n                    <Link\n                    to=\"#\"\n                    className=\"userNames\">{groupUser.username}</Link>\n                  </div>\n                </li>\n              )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nAllUsers.propTypes = {\n  fetchGroupUsers: PropTypes.func.isRequired,\n  groupUsers: PropTypes.array.isRequired,\n  groupId: PropTypes.number.isRequired\n};\n\nconst mapStateToProps = state => ({\n  groupUsers: state.groupUsers\n});\n\n\nexport default connect(mapStateToProps, { fetchGroupUsers })(AllUsers);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/messages/AllUsers.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AddUserModal from './AddUserModal';\nimport MessageForm from './MessageForm';\nimport AllGroups from './AllGroups';\nimport AllUsers from './AllUsers';\n\n/**\n * @class MessageBoard\n * @extends {React.Component}\n */\nclass MessageBoard extends React.Component {\n  /**\n   * Creates an instance of MessageBoard.\n   * @param {any} props\n   * @memberof MessageBoard\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      groups: this.props.groups,\n    };\n  }\n\n  /**\n   * @param {any} nextProps\n   * @memberof MessageBoard\n   * @return {void}\n   */\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      groups: nextProps.groups\n    });\n  }\n\n  render() {\n    const selectedGroupId = this.props.selectedGroupId;\n    const { addUserToGroup } = this.props;\n    console.log(this.props.groups, '========')        \n    \n    return (\n      <div>\n        <div className=\"col s12 m12 l12 col-md-10\">\n          <div id=\"messageBoard\" className=\"mycontainer\">\n            {<AddUserModal\n              addUserToGroup={addUserToGroup}\n              groupId={selectedGroupId}\n              /* statusMessage={statusMessage} */\n              />}\n            <div className=\"row\">\n              <AllGroups\n                groups={this.props.groups}\n              />\n              <MessageForm\n                groupId={selectedGroupId}\n              />\n              <AllUsers groupId={selectedGroupId} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMessageBoard.propTypes = {\n  addUserToGroup: PropTypes.func.isRequired,\n  groups: PropTypes.object.isRequired,\n  selectedGroupId: PropTypes.number.isRequired\n};\n\n\nexport default connect(null)(MessageBoard);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/messages/MessageBoard.jsx","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport { getMessages, postMessage }\nfrom '../../actions/messageAction';\n\n/**\n * @class MessageForm\n * @extends {React.Component}\n */\nclass MessageForm extends React.Component {\n  /**\n   * Creates an instance of MessageForm.\n   * @param {any} props\n   * @memberof MessageForm\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: this.props.messages,\n      group: this.props.group,\n      groupId: this.props.groupId,\n      message: '',\n      priority: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  /**\n   * @param {any} event\n   * @memberof MessageForm\n   * @returns {void}\n   */\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  /**\n   * @param {any} event\n   * @memberof MessageForm\n   * @return {void}\n   */\n  handleSubmit(event) {\n    event.preventDefault();\n    const message = {\n      message_body: this.state.message,\n      priority_level: this.state.priority\n    };\n    this.props.postMessage(this.state.groupId, message)\n    .then(() => {\n      this.setState({\n        message: '',\n        priority: ''\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.props.getMessages(this.props.groupId);\n    $(document).ready(() => {\n      $('select').material_select();\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      messages: nextProps.messages,\n      group: nextProps.group,\n      grouId: nextProps.groudId\n    });\n  }\n  render() {\n    let allMessages;\n    const { group } = this.state;\n    const { messages } = this.state;\n    const groupId = parseInt(this.props.groupId, 10);\n    let groupTitle = 'No Group Found';\n\n    group.map((currentGroup) => {\n      const { id, groupName } = currentGroup;\n      if (id === groupId) {\n        groupTitle = groupName;\n      }\n    });\n\n    if (messages.length > 0) {\n      allMessages = messages && messages.map(message => (\n        <div key={message.id}>\n          <b className=\"senderName\">\n            {message.User.username}\n          </b>\n          <span className=\"right\">\n            { moment(message.createdAt, moment.ISO_8601).fromNow() }\n          </span>\n          <p key={message.id}>\n            <Link\n              id={message.id}\n              className=\"messageLink\"\n              to=\"#\"\n              onClick={this.handleMessageStatus}>\n              {message.message_body}\n            </Link>\n            <span\n            className={`new badge ${(message.priority_level).toLowerCase()}`}\n            data-badge-caption={message.priority_level} />\n          </p>\n          <hr /><br />\n        </div>));\n    } else {\n      allMessages = (\n        <h6>No messages to show</h6>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"col s12 m12 l6 message-cards\">\n          <div className=\"message-cards-board\">\n            <h5 className=\"groupName\">{groupTitle}</h5>\n            { allMessages }\n          </div>\n          <div className=\"message-cards-form\">\n            <form onSubmit={this.handleSubmit} method=\"post\">\n              <div className=\"input-field col s8\">\n                <textarea\n                  placeholder=\"Write your message Here\"\n                  id=\"message\"\n                  type=\"text\"\n                  required\n                  name=\"message\"\n                  onChange={this.handleChange}\n                  value={this.state.message}\n                  className=\"materialize-textarea\"\n                />\n              </div>\n              <div className=\"col s4 mySelect\">\n                <select\n                  className=\"browser-default\"\n                  required\n                  value={this.state.priority}\n                  name=\"priority\"\n                  onChange={this.handleChange}>\n                  <option value=\"\" disabled>Select Priority</option>\n                  <option value=\"Normal\">Normal</option>\n                  <option value=\"Critical\">Critical</option>\n                  <option value=\"Urgent\">Urgent</option>\n                </select>\n                <br />\n                <button className=\"btn messageBtn\" type=\"submit\">\n                  <i className=\"material-icons\">send</i>\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMessageForm.propTypes = {\n  postMessage: PropTypes.func.isRequired,\n  getMessages: PropTypes.func.isRequired,\n  groupId: PropTypes.number.isRequired,\n  messages: PropTypes.array.isRequired\n};\n\n\nconst mapStateToProps = state => ({\n  messages: state.messages,\n  group: state.groups.allGroups\n});\n\nexport default\nconnect(mapStateToProps,\n  { getMessages, postMessage })(MessageForm);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/messages/MessageForm.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport MessageBoard from './MessageBoard';\nimport Header from '../common/Header';\nimport Footer from '../common/Footer';\nimport { addUserToGroup } from '../../actions/groupActions';\n\n/**\n * @class MessagePage\n * @extends {React.Component}\n */\nclass MessagePage extends React.Component {\n\n  /**\n   * @memberof MessagePage\n   * @return {void}\n   */\n  componentWillMount() {\n    const groupId = this.props.match.params.id;\n    this.setState({\n      groupId\n    });\n  }\n  /**\n   * @param {any} nextProps\n   * @memberof MessagePage\n   * @return {void}\n   */\n\n  /**\n   * @returns {object} - Message Component\n   * @memberof MessagePage\n   */\n  render() {\n    return (\n      <div>\n        <Header />\n        <div className=\"mycontainer\" >\n          <div className=\"row\">\n            <MessageBoard\n              groups={this.props.groups}\n              addUserToGroup={this.props.addUserToGroup}\n              selectedGroupId={Number(this.state.groupId)}\n              selectedGroupName={this.state.selectedGroupName}\n            />\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nMessagePage.propTypes = {\n  addUserToGroup: PropTypes.func.isRequired,\n  groups: PropTypes.object.isRequired,\n};\n\nMessagePage.defaultProps = {\n  message: ''\n};\n\nconst mapStateToProps = state => (\n  {\n    groups: state.groups,\n  }\n);\n\n\nexport default connect(mapStateToProps, { addUserToGroup })(MessagePage);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/messages/MessagePage.jsx","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\n/**\n * @class FlashMessage\n * @extends {React.Component}\n */\nclass FlashMessage extends React.Component {\n  /**\n   * Creates an instance of FlashMessage.\n   * @param {any} props\n   * @memberof FlashMessage\n   */\n  constructor(props) {\n    super(props);\n    this.onClick = this.onClick.bind(this);\n  }\n  /**\n   * @memberof FlashMessage\n   *\n   * @returns {void}\n   */\n  onClick() {\n    this.props.deleteFlashMessage(this.props.message.id);\n  }\n  /**\n   * @returns {object} flash message component\n   * @memberof FlashMessage\n   */\n  render() {\n    const { type, text } = this.props.message;\n    return (\n      <div\n        className={classnames('alert', {\n          'alert-success': type === 'success',\n          'alert-danger': type === 'error'\n        })}>\n        <button\n          onClick={this.onClick}\n          className=\"close\"><span>&times;</span></button>\n        {text}\n      </div>\n    );\n  }\n}\n\nFlashMessage.propTypes = {\n  message: PropTypes.object.isRequired,\n  deleteFlashMessage: PropTypes.func.isRequired\n};\n\nexport default FlashMessage;\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/notification/FlashMessage.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal } from 'react-materialize';\nimport { connect } from 'react-redux';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport { validateForgotPasswordInput }\n from '../../validations/validation';\nimport { resetPasswordEmail } from '../../actions/forgotPasswordActions';\nimport { addFlashMessage } from '../../actions/flashMessageActions';\nimport FlashMessagesList from '../notification/FlashMessagesList';\n\n/**\n * @class ForgetPasswordModal\n * @extends {React.Component}\n */\nclass ForgetPasswordModal extends React.Component {\n  /**\n   * Creates an instance of ForgetPasswordModal.\n   * @param {any} props\n   * @memberof ForgetPasswordModal\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      errors: {}\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  /**\n   * @returns {isValid} - Check the form input is valid\n   * @memberof ForgetPasswordModal\n   */\n  isValid() {\n    const { errors, isValid, email, addFlashMessage }\n       = validateForgotPasswordInput(this.state);\n\n    if (!isValid) {\n      this.setState({ errors });\n    }\n\n    return isValid;\n  }\n\n  /**\n   * @param {any} event\n   * @memberof ForgetPasswordModal\n   * @return {void}\n   */\n  handleSubmit(event) {\n    event.preventDefault();\n    this.setState({\n      email: ''\n    });\n    if (this.isValid()) {\n      this.setState({ errors: {}, isLoading: true });\n      this.props.resetPasswordEmail(this.state).then(\n        () => {\n          this.props.addFlashMessage({\n            type: 'success',\n            text: 'Please check your email and follow the instruction'\n          });\n        },\n      () => {\n        this.props.addFlashMessage({\n          type: 'error',\n          text: 'Incorrect email'\n        });\n      });\n    }\n  }\n\n  /**\n   * @param {any} event\n   * @memberof ForgetPasswordModal\n   * @return {void}\n   */\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  /**\n   * @returns {object} - Forget Password modal component\n   * @memberof ForgetPasswordModal\n   */\n  render() {\n    const { errors, email } = this.state;\n    return (\n      <div>\n        <Modal\n          header='Recover Password'\n          trigger={<p className=\"forgotPassword\">Forgot Password?</p>}>\n          <FlashMessagesList />\n          <form onSubmit={this.handleSubmit} >\n            { errors.form &&\n            <div className=\"alert alert-danger\">{errors.form}</div> }\n            <TextFieldGroup\n              label=\"Email\"\n              field=\"email\"\n              onChange={this.handleChange}\n              type=\"text\"\n              value={email}\n            />\n            <Button\n              className=\"btn waves-effect waves-light\"\n              type=\"submit\"\n            >\n            Reset\n            </Button>\n          </form>\n        </Modal>\n      </div>\n    );\n  }\n\n}\n\nForgetPasswordModal.propTypes = {\n  resetPasswordEmail: PropTypes.func.isRequired,\n  addFlashMessage: PropTypes.func.isRequired,\n};\n\nexport default\nconnect(null, { resetPasswordEmail, addFlashMessage })(ForgetPasswordModal);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/user/ForgetPasswordModal.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport ForgetPasswordModal from './ForgetPasswordModal';\nimport { login } from '../../actions/authenticationActions';\nimport { validateLoginInput } from '../../validations/validation';\nimport FlashMessagesList from '../notification/FlashMessagesList';\n\n/**\n * @class LoginForm\n * @extends {React.Component}\n */\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      errors: {},\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  /**\n   * @returns {isValid} - checks if the fields are not empty\n   * @memberof LoginForm\n   */\n  isValid() {\n    const { errors, isValid } = validateLoginInput(this.state);\n\n    if (!isValid) {\n      this.setState({ errors });\n    }\n    return isValid;\n  }\n\n  /**\n   * @param {any} event\n   * @memberof LoginForm\n   * @returns {void}\n   */\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.isValid()) {\n      this.setState({ errors: {}, isLoading: true });\n      this.props.login(this.state).then(\n        () => this.context.router.history.push('/groups'),\n        err => this.setState({\n          errors: err.data.errors,\n          username: '',\n          password: ''\n        })\n      );\n    }\n  }\n\n  /**\n   * @param {any} event\n   * @memberof LoginForm\n   * @returns {void}\n   */\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  /**\n   * @returns {object} - LoginForm component\n   * @memberof LoginForm\n   */\n  render() {\n    const { errors, username, password } = this.state;\n    return (\n      <div>\n        <h4>Login to PostIt</h4>\n        <FlashMessagesList />\n        <form className=\"col s12\" onSubmit={this.handleSubmit}>\n          { errors.form &&\n          <div className=\"alert alert-danger\">{errors.form}</div> }\n          <div className=\"\">\n            <TextFieldGroup\n              error={errors.username}\n              label=\"Username\"\n              onChange={this.handleChange}\n              value={username}\n              field=\"username\"\n              type=\"text\"\n            />\n            <TextFieldGroup\n              error={errors.password}\n              label=\"Password\"\n              onChange={this.handleChange}\n              value={password}\n              field=\"password\"\n              type=\"password\"\n            />\n            <div className=\"input-field col s12\">\n              <button\n                  className=\"btn waves-effect waves-light\"\n                  type=\"submit\" name=\"action\">Submit\n                <i className=\"material-icons right\">send</i>\n              </button>\n              <br /><br />\n            </div>\n          </div>\n        </form>\n        <div className=\"row\">\n          <div className=\"col s6\"><ForgetPasswordModal /></div>\n          <div className=\"col s6\">\n            <p>\n              Do not have an account?\n              <button\n                className=\"blue-text signUp\"\n                onClick={() => this.props.toggleForm('signup')}>\n                <b>Sign Up</b>\n              </button>\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLoginForm.propTypes = {\n  login: PropTypes.func.isRequired,\n  toggleForm: PropTypes.func.isRequired\n};\n\nLoginForm.contextTypes = {\n  router: PropTypes.object.isRequired\n};\n\nexport default connect(null, { login })(LoginForm);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/user/LoginForm.jsx","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport queryString from 'query-string';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport { validateResetPasswordInput }\n  from '../../validations/validation';\nimport FlashMessagesList from '../notification/FlashMessagesList';\nimport { resetPassword } from '../../actions/forgotPasswordActions';\nimport { addFlashMessage } from '../../actions/flashMessageActions';\n\n/**\n * @class ResetPasswordForm\n * @extends {React.Component}\n */\nclass ResetPasswordForm extends React.Component {\n  /**\n   * Creates an instance of ResetPasswordForm.\n   * @param {any} props\n   * @memberof ResetPasswordForm\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      newPassword: '',\n      confirmNewPassword: '',\n      errors: {},\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  /**\n   * @memberof ResetPasswordForm\n   * @returns {isValid} - checks if the text field are not empty\n   */\n  isValid() {\n    const { errors, isValid } = validateResetPasswordInput(this.state);\n\n    if (!isValid) {\n      this.setState({ errors });\n    }\n    return isValid;\n  }\n\n  /**\n   * @param {any} event\n   * @memberof ResetPasswordForm\n   * @returns {void}\n   */\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.isValid()) {\n      const query = queryString.parse(this.props.location.search);\n      const email = query.email;\n      this.setState({ errors: {} });\n      if (this.state.newPassword === this.state.confirmNewPassword) {\n        this.props.resetPassword(this.state.newPassword, email).then(\n          () => this.context.router.history.push('/'),\n          err => this.setState({\n            errors: err.data.errors,\n            newPassword: '',\n            confirmNewPassword: ''\n          })\n        );\n      } else {\n        this.props.addFlashMessage({\n          type: 'error',\n          text: 'Password does not Match'\n        });\n      }\n    }\n  }\n\n  /**\n   * @param {any} event\n   * @memberof ResetPasswordForm\n   * @return {void}\n   */\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  /**\n   * @memberof ResetPasswordForm\n   * @returns {object} - ResetPasswordForm Component\n   */\n  render() {\n    const\n    { errors, newPassword, confirmNewPassword, addFlashMessage } = this.state;\n    return (\n      <div>\n        <section classID=\"wrapper\" className=\"resetPasswordForm\">\n          <div className=\"wrapper_cen2\">\n            <div className=\"row\">\n              <div className=\"col s12 m12 l12 reg_form\">\n                <div className=\"reg_form_cen\">\n                  <h4>Reset Password</h4>\n                  <FlashMessagesList />\n                  <form className=\"col s12\" onSubmit={this.handleSubmit}>\n                    {\n                      errors.form &&\n                      <div className=\"alert alert-danger\">{errors.form}</div>\n                    }\n                    <div className=\"\">\n                      <TextFieldGroup\n                        error={errors.newPassword}\n                        label=\"New Password\"\n                        field=\"newPassword\"\n                        onChange={this.handleChange}\n                        value={newPassword}\n                        type=\"password\"\n                      />\n                      <TextFieldGroup\n                        error={errors.confirmNewPassword}\n                        label=\"Confirm New Password\"\n                        field=\"confirmNewPassword\"\n                        value={confirmNewPassword}\n                        onChange={this.handleChange}\n                        type=\"password\"\n                      />\n                      <div className=\"input-field col s12\">\n                        <button\n                          className=\"btn waves-effect waves-light\"\n                          type=\"submit\" name=\"action\">Submit\n                          <i className=\"material-icons right\">send</i>\n                        </button>\n                        <br /><br />\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nResetPasswordForm.propTypes = {\n  resetPassword: PropTypes.func.isRequired,\n  addFlashMessage: PropTypes.func.isRequired\n};\n\nResetPasswordForm.contextTypes = {\n  router: PropTypes.object.isRequired\n};\n\nexport default connect(null,\n  { resetPassword, addFlashMessage })(withRouter(ResetPasswordForm));\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/user/ResetPasswordForm.jsx","import React from 'react';\nimport queryString from 'query-string';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ResetPasswordForm from './ResetPasswordForm';\nimport { checkToken } from '../../actions/forgotPasswordActions';\n\n/**\n * @class ResetPasswordPage\n * @extends {React.Component}\n */\nclass ResetPasswordPage extends React.Component {\n  /**\n   * Creates an instance of ResetPasswordPage.\n   * @param {any} props\n   * @memberof ResetPasswordPage\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      ok: false\n    };\n  }\n\n  /**\n   * @memberof ResetPasswordPage\n   * @return {void}\n   */\n  componentDidMount() {\n    const query = queryString.parse(this.props.location.search);\n    const token = query.token;\n    const email = query.email;\n    this.props.checkToken(token, email)\n    .then(() => {\n      this.setState({\n        ok: true\n      });\n    }, () => {\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        { this.state.ok && <ResetPasswordForm />}\n      </div>\n    );\n  }\n}\n\nResetPasswordPage.propTypes = {\n  checkToken: PropTypes.func.isRequired\n};\n\n\nexport default connect(null, { checkToken })(ResetPasswordPage);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/user/ResetPasswordPage.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport { validateSignUpInput } from '../../validations/validation';\nimport {\n  userSignupRequest\n} from '../../actions/authenticationActions';\nimport { addFlashMessage } from '../../actions/flashMessageActions';\n\n/**\n * @class SignupForm\n * @extends {React.Component}\n */\nclass SignupForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      phoneNo: '',\n      password: '',\n      confirm_password: '',\n      errors: {},\n      isLoading: false,\n      invalid: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  /**\n   * Handle onChange event\n   * @param {any} event\n   * @memberof SignupForm\n   * @return {void}\n   */\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  /**\n   * Checks if the form input(s) is valid\n   * @memberof SignupForm\n   * @return {isValid} - checks if the fields are not empty\n   */\n  isValid() {\n    const { errors, isValid } = validateSignUpInput(this.state);\n\n    if (!isValid) {\n      this.setState({ errors });\n    }\n\n    return isValid;\n  }\n\n  /**\n   * Handles submit event\n   * @param {any} event\n   * @memberof SignupForm\n   * @return {void}\n   */\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.isValid()) {\n      this.setState({ errors: {}, isLoading: true });\n      this.props.userSignupRequest(this.state).then(\n        () => {\n          this.props.addFlashMessage({\n            type: 'success',\n            text: 'You signed up successfully. Login!'\n          });\n          this.context.router.history.push('/groups');\n        },\n        ({ data }) => this.setState({\n          errors: data,\n          isLoading: false,\n          username: '',\n          email: '',\n          phone: '',\n          password: '',\n          confirm_password: '',\n        })\n      );\n    }\n  }\n  /**\n   * renders the signup form component\n   * @returns {object} - signup component\n   * @memberof SignupForm\n   */\n  render() {\n    const { errors } = this.state;\n    return (\n      <div>\n        <h4>Register to PostIt</h4>\n        <form className=\"col s12\" onSubmit={this.handleSubmit}>\n          <div className=\"\">\n            <TextFieldGroup\n              error={errors.username}\n              label=\"Username\"\n              onChange={this.handleChange}\n              checkUserExits={this.checkUserExits}\n              value={this.state.username}\n              field=\"username\"\n              type=\"text\"\n            />\n            <TextFieldGroup\n              error={errors.email}\n              label=\"Email\"\n              onChange={this.handleChange}\n              checkUserExits={this.checkUserExits}\n              value={this.state.email}\n              field=\"email\"\n              type=\"text\"\n            />\n            <TextFieldGroup\n              error={errors.phone}\n              label=\"Phone Number\"\n              onChange={this.handleChange}\n              value={this.state.phoneNo}\n              field=\"phoneNo\"\n              type=\"number\"\n            />\n            <TextFieldGroup\n              error={errors.password}\n              label=\"Password\"\n              onChange={this.handleChange}\n              value={this.state.password}\n              field=\"password\"\n              type=\"password\"\n            />\n            <TextFieldGroup\n              error={errors.confirm_password}\n              label=\"Confirm Password\"\n              onChange={this.handleChange}\n              value={this.state.confirm_password}\n              field=\"confirm_password\"\n              type=\"password\"\n            />\n            <div className=\"input-field col s12\">\n              <button\n                disabled={this.state.isLoading || this.state.invalid}\n                className=\"btn waves-effect waves-light\" type=\"submit\"\n                name=\"action\">Submit\n                <i className=\"material-icons right\">send</i>\n              </button>\n              <br /><br />\n            </div>\n          </div>\n        </form>\n        <p>Have an account already?\n          <button\n            className=\"blue-text signUp\"\n            onClick={() => this.props.toggleForm('login')}\n          >\n            <b>Login</b></button>\n        </p>\n      </div>\n    );\n  }\n}\n\nSignupForm.propTypes = {\n  userSignupRequest: PropTypes.func.isRequired,\n  addFlashMessage: PropTypes.func.isRequired,\n  toggleForm: PropTypes.func.isRequired\n};\n\nSignupForm.contextTypes = {\n  router: PropTypes.object.isRequired\n};\n\nexport default connect(null,\n  { userSignupRequest, addFlashMessage })(SignupForm);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/user/SignupForm.jsx","import React from 'react';\nimport ReactPaginate from 'react-paginate';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport queryString from 'query-string';\nimport getUsersAction from '../../actions/getUsersAction';\n\n/**\n * @class UserList\n * @extends {Component}\n */\nclass UserList extends React.Component {\n  /**\n   * Creates an instance of UserList.\n   * @param {object} props\n   * @memberof UserList\n   */\n  constructor(props) {\n    super(props);\n    this.usersPerPage = 5;\n    const { pagination } = this.props;\n    this.state = {\n      users: pagination.users,\n      offset: 0,\n      pageCount: Math.ceil(pagination.count / this.usersPerPage)\n    };\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.searchParams = queryString.parse(this.props.location.search).q;\n  }\n\n  /**\n   * call the getUsers method after component have mounted\n   * @memberof UserList\n   * @return {void}\n   */\n  componentDidMount() {\n    this.props.getUsersAction(this.searchParams);\n  }\n\n  /**\n   * update component with new props\n   * @param {object} nextProps\n   * @memberof UserList\n   * @return {void}\n   */\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      users: nextProps.pagination.users,\n      totalCount: nextProps.pagination.totalCount,\n      pageCount: Math.ceil(nextProps.pagination.totalCount / this.usersPerPage)\n    });\n  }\n\n  /**\n   * used to calculate offset\n   * @param {number} page\n   * @memberof UserList\n   * @return {page} - page\n   */\n  handlePageClick(page) {\n    const selected = page.selected;\n    const offset = Math.ceil(selected * this.usersPerPage);\n\n    this.setState({ offset }, () => {\n      this.props.getUsersAction(this.searchParams, offset);\n    });\n  }\n\n  /**\n   * Renders the UserList component\n   * @memberof UserList\n   * @return {object} - UserList component\n   */\n  render() {\n    const { users, totalCount } = this.state;\n    return (\n      <div>\n        <div className=\"col s12 m10 l10 col-md-10\">\n          <div className=\"mycontainer\">\n            <div className=\"row\">\n              <div className=\"col s12 m4 l2\" />\n              <div className=\"col s12 m4 l8 large-cards\">\n                <h4>Users</h4>\n                <table className=\"striped responsive-table\">\n                  <thead>\n                    <tr>\n                      <th>Name</th>\n                      <th>Email</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {\n                      users.length > 0 ? users.map((user, index) => (\n                        <tr key={index}>\n                          <td>{user.username}</td>\n                          <td>{user.email}</td>\n                        </tr>\n                      )) : (\n                        <tr>\n                          <td\n                            className=\"center\"\n                            col=\"2\" colSpan=\"2\">\n                            No user found\n                          </td>\n                        </tr>\n                      )\n                    }\n                  </tbody>\n                </table>\n                {\n                  totalCount > 5 &&\n                  <ReactPaginate\n                  previousLabel={'previous'}\n                  nextLabel={'next'}\n                  breakLabel={<a href=\"\">...</a>}\n                  breakClassName={'break-me'}\n                  pageCount={this.state.pageCount}\n                  marginPagesDisplayed={2}\n                  pageRangeDisplayed={5}\n                  onPageChange={this.handlePageClick}\n                  containerClassName={'pagination'}\n                  subContainerClassName={'pages pagination'}\n                  activeClassName={'active'}\n                />\n                }\n              </div>\n              <div className=\"col s12 m4 l2\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUserList.propTypes = {\n  location: PropTypes.object.isRequired,\n  getUsersAction: PropTypes.func.isRequired,\n\n};\n\nconst mapStateToProps = state => ({\n  pagination: state.pagination,\n  pageCount: state.pagination.pageCount\n});\n\nexport default connect(mapStateToProps,\n  { getUsersAction })(withRouter(UserList));\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/user/UserList.jsx","import { GET_GROUPS } from '../actions/types';\n\nconst initialState = {\n  pageNumber: 0,\n  pageCount: 0,\n  pageSize: 0,\n  totalCount: 0,\n  allGroups: []\n};\n\n/**\n * updates the groups property of the store\n * @param {Object} state - current state\n * @param {Object} action - action type and action payload\n *\n * @returns {state} - returns a new state.\n */\nexport default (state = initialState, action = {}) => {\n  switch (action.type) {\n  case GET_GROUPS:\n    return {\n      pageNumber: action.groups.pageNumber,\n      pageCount: action.groups.pageCount,\n      pageSize: action.groups.pageSize,\n      allGroups: action.groups.allGroups,\n      totalCount: action.groups.totalCount\n    };\n      // ...action.groups;\n  default:\n    return state;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/reducers/groupsReducer.js","\n/**\n * Checks if a value is a number\n * @param {number} num  -number\n *\n * @returns {boolean} - true or false\n */\nconst checkNum = (num) => {\n  const rawNum = parseInt(num, 10);\n  if (isNaN(rawNum)) {\n    return false;\n  }\n  return true;\n};\n\n\nmodule.exports = checkNum;\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/utils/numberValidation.js","import axios from 'axios';\nimport { GET_GROUPS, ADD_USER_TO_GROUP, GET_GROUP_USERS } from './types';\n\n/**\n * Creates a new Group.\n * @param {Array} group - groups.\n *\n * @returns {createGroup} -\n    returns the createGroup function to perform async dispatch.\n */\nexport function createGroup(group) {\n  return () => (\n    axios.post('/api/v1/group/', group)\n  );\n}\n\n/**\n * Fetch all Groups.\n * @param {Array} groups - groups.\n *\n * @returns {object} action payload data and action type\n */\nexport function getGroups(groups) {\n  return {\n    type: GET_GROUPS,\n    groups\n  };\n}\n\n/**\n * Fetch all Users in a group.\n * @param {Array} groupUsers - groupUsers.\n *\n * @returns {object} action payload data and action type\n */\nexport function getGroupUsers(groupUsers) {\n  return {\n    type: GET_GROUP_USERS,\n    groupUsers\n  };\n}\n\n/**\n * Add user to a group.\n * @param {Boolean} status - status.\n * @param {string} message - message.\n *\n * @returns {object} action payload data and action type\n */\nexport function addUserStatus(status, message) {\n  return {\n    type: ADD_USER_TO_GROUP,\n    status,\n    message\n  };\n}\n\n/**\n * Fetch all Groups.\n *  @param {int} offset - offset\n * @param {int} limit - limit\n *\n * @returns {function} dispatches getGroups action\n */\nexport function fetchGroups(offset = 0, limit = 5) {\n  return dispatch => (\n    axios.get('/api/v1/groups', {\n      params: {\n        offset,\n        limit\n      }\n    })\n    .then((response) => {\n      const groups = response.data;\n      dispatch(getGroups(groups));\n    }).catch((error) => {\n      throw (error);\n    })\n  );\n}\n\n/**\n * Dispatches an action to fetch all users in a group.\n * @param {Integer} groupId - groupdId.\n *\n * @returns {function} - dispatches fetchGroupUsers action.\n */\nexport function fetchGroupUsers(groupId) {\n  return dispatch => (\n    axios.get(`/api/v1/group/${groupId}/users`)\n    .then(({ data }) => {\n      dispatch(getGroupUsers(data.data.members));\n    }).catch((error) => {\n      throw (error);\n    })\n  );\n}\n\n/**\n * Dispatches an action to add a user to a group.\n * @param {integer} groupId - The Id of the group.\n * @param {String} user - The username.\n *@returns {function} - dispatches addUserToGroup action.\n */\nexport function addUserToGroup(groupId, user) {\n  return dispatch =>\n  axios.post(`/api/v1/group/${groupId}/user`, user)\n    .then((data) => {\n      const message = data.message;\n      dispatch(addUserStatus(true, message));\n      return true;\n    }).catch((error) => {\n      const message = error.data.message;\n      dispatch(addUserStatus(false, message));\n      return message;\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/actions/groupActions.js","import Validator from 'validator';\nimport isEmpty from 'lodash/isEmpty';\nimport checkNum from '../utils/numberValidation';\n\n\nmodule.exports = {\n  /**\n    * Checks if the input in Signup form is Valid\n    * @param {Object} inputData - inputData.\n    *\n    * @returns {errors} - returns errors.\n  */\n  validateSignUpInput: (inputData) => {\n    const errors = {};\n\n    if (Validator.isEmpty(inputData.username)) {\n      errors.username = 'This field required';\n    }\n    if (Validator.isEmpty(inputData.email)) {\n      errors.email = 'This field required';\n    }\n    if (!checkNum(inputData.phoneNo)) {\n      errors.phoneNo = 'This field required';\n    }\n    if (!Validator.isEmail(inputData.email)) {\n      errors.email = 'Email is not valid';\n    }\n    if (Validator.isEmpty(inputData.password)) {\n      errors.password = 'This field required';\n    }\n    if (Validator.isEmpty(inputData.confirm_password)) {\n      errors.confirm_password = 'This field required';\n    }\n    if (!Validator.equals(inputData.password, inputData.confirm_password)) {\n      errors.confirm_password = 'Password must Match';\n    }\n    return {\n      errors,\n      isValid: isEmpty(errors)\n    };\n  },\n  /**\n    * Checks if the input in Login form is Valid\n    * @param {Object} inputData - inputData.\n    *\n    * @returns {errors} - returns errors.\n  */\n  validateLoginInput: (inputData) => {\n    const errors = {};\n    if (Validator.isEmpty(inputData.username)) {\n      errors.username = 'This field is required';\n    }\n    if (Validator.isEmpty(inputData.password)) {\n      errors.password = 'This field is required';\n    }\n    return {\n      errors,\n      isValid: isEmpty(errors)\n    };\n  },\n  /**\n    * Checks if the input in Add User form is Valid\n    * @param {Object} inputData - inputData.\n    *\n    * @returns {errors} - returns errors.\n  */\n  validateAddUserInput: (inputData) => {\n    const errors = {};\n    if (Validator.isEmpty(inputData.username)) {\n      errors.username = 'This field is required';\n    }\n    return {\n      errors,\n      isValid: isEmpty(errors)\n    };\n  },\n  /**\n    * Checks if the input Add Group in  form is Valid\n    * @param {Object} inputData - inputData.\n    *\n    * @returns {errors} - returns errors.\n  */\n  validateAddGroupInput: (inputData) => {\n    const errors = {};\n    if (Validator.isEmpty(inputData.groupname)) {\n      errors.groupname = 'This field is required';\n    }\n    return {\n      errors,\n      isValid: isEmpty(errors)\n    };\n  },\n  /**\n    * Checks if the inputs in Forgot Password form is Valid\n    * @param {Object} inputData - inputData.\n    *\n    * @returns {errors} - returns errors.\n  */\n  validateForgotPasswordInput: (inputData) => {\n    const errors = {};\n    if (Validator.isEmpty(inputData.email)) {\n      errors.email = 'This field is required';\n    }\n    return {\n      errors,\n      isValid: isEmpty(errors)\n    };\n  },\n\n  /**\n  * Checks if the inputs in Reset Password form is Valid\n  * @param {Object} inputData - inputData.\n  *\n  * @returns {errors} - returns errors.\n */\n  validateResetPasswordInput: (inputData) => {\n    const errors = {};\n    if (Validator.isEmpty(inputData.newPassword)) {\n      errors.newPassword = 'This field is required';\n    }\n    if (Validator.isEmpty(inputData.confirmNewPassword)) {\n      errors.confirmNewPassword = 'This field is required';\n    }\n    return {\n      errors,\n      isValid: isEmpty(errors)\n    };\n  }\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/validations/validation.js"],"sourceRoot":""}