{"version":3,"sources":["webpack:///./app/client/components/user/ForgetPasswordModal.jsx?1ec4"],"names":["ForgetPasswordModal","props","state","email","errors","handleSubmit","bind","handleChange","isValid","setState","event","preventDefault","isLoading","resetPasswordEmail","then","addFlashMessage","type","text","target","name","value","form","Component","propTypes","func","isRequired"],"mappings":";;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;AAEA;;;;IAIMA,mB;;;AACJ;;;;;AAKA,+BAAYC,KAAZ,EAAmB;AAAA;;AAAA,0IACXA,KADW;;AAEjB,UAAKC,KAAL,GAAa;AACXC,aAAO,EADI;AAEXC,cAAQ;AAFG,KAAb;AAIA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,OAApB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,OAApB;AAPiB;AAQlB;;AAED;;;;;;;;8BAIU;AAAA,2BAEH,mCAAc,KAAKJ,KAAnB,CAFG;AAAA,UACAE,MADA,kBACAA,MADA;AAAA,UACQI,OADR,kBACQA,OADR;;AAIR,UAAI,CAACA,OAAL,EAAc;AACZ,aAAKC,QAAL,CAAc,EAAEL,cAAF,EAAd;AACD;;AAED,aAAOI,OAAP;AACD;;AAED;;;;;;;;iCAKaE,K,EAAO;AAAA;;AAClBA,YAAMC,cAAN;AACA,WAAKF,QAAL,CAAc;AACZN,eAAO;AADK,OAAd;AAGA,UAAI,KAAKK,OAAL,EAAJ,EAAoB;AAClB,aAAKC,QAAL,CAAc,EAAEL,QAAQ,EAAV,EAAcQ,WAAW,IAAzB,EAAd;AACA,aAAKX,KAAL,CAAWY,kBAAX,CAA8B,KAAKX,KAAnC,EAA0CY,IAA1C,CACE,YAAM;AACJ,iBAAKb,KAAL,CAAWc,eAAX,CAA2B;AACzBC,kBAAM,SADmB;AAEzBC,kBAAM;AAFmB,WAA3B;AAID,SANH,EAOA,YAAM;AACJ,iBAAKhB,KAAL,CAAWc,eAAX,CAA2B;AACzBC,kBAAM,OADmB;AAEzBC,kBAAM;AAFmB,WAA3B;AAID,SAZD;AAaD;AACF;;AAED;;;;;;;;iCAKaP,K,EAAO;AAClB,WAAKD,QAAL,qBACGC,MAAMQ,MAAN,CAAaC,IADhB,EACuBT,MAAMQ,MAAN,CAAaE,KADpC;AAGD;;AAED;;;;;;;6BAIS;AAAA,mBACmB,KAAKlB,KADxB;AAAA,UACCE,MADD,UACCA,MADD;AAAA,UACSD,KADT,UACSA,KADT;;AAEP,aACE;AAAA;AAAA;AACE;AAAA;AAAA;AACE,oBAAO,kBADT;AAEE,qBAAS;AAAA;AAAA,gBAAG,WAAU,gBAAb;AAAA;AAAA,aAFX;AAGE,0EAHF;AAIE;AAAA;AAAA,cAAM,UAAU,KAAKE,YAArB;AACID,mBAAOiB,IAAP,IACF;AAAA;AAAA,gBAAK,WAAU,oBAAf;AAAqCjB,qBAAOiB;AAA5C,aAFF;AAGE;AACE,qBAAOjB,OAAOD,KADhB;AAEE,qBAAM,OAFR;AAGE,qBAAM,OAHR;AAIE,wBAAU,KAAKI,YAJjB;AAKE,oBAAK,MALP;AAME,qBAAOJ;AANT,cAHF;AAWE;AAAA;AAAA;AACE,2BAAU,8BADZ;AAEE,sBAAK;AAFP;AAAA;AAAA;AAXF;AAJF;AADF,OADF;AA2BD;;;;EAvG+B,gBAAMmB,S;;AA2GxCtB,oBAAoBuB,SAApB,GAAgC;AAC9BV,sBAAoB,oBAAUW,IAAV,CAAeC,UADL;AAE9BV,mBAAiB,oBAAUS,IAAV,CAAeC;AAFF,CAAhC;;kBAMA,yBAAQ,IAAR,EAAc,EAAEZ,6DAAF,EAAsBE,qDAAtB,EAAd,EAAuDf,mBAAvD,C","file":"0.81dfeb4ee60af091e28f.hot-update.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal } from 'react-materialize';\nimport { connect } from 'react-redux';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport { validateInput }\n from '../../validations/forgotpassword';\nimport { resetPasswordEmail } from '../../actions/forgotPasswordActions';\nimport { addFlashMessage } from '../../actions/flashMessageActions';\nimport FlashMessagesList from '../notification/FlashMessagesList';\n\n/**\n * @class ForgetPasswordModal\n * @extends {React.Component}\n */\nclass ForgetPasswordModal extends React.Component {\n  /**\n   * Creates an instance of ForgetPasswordModal.\n   * @param {any} props\n   * @memberof ForgetPasswordModal\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      errors: {}\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  /**\n   * @returns {isValid} - Check the form input is valid\n   * @memberof ForgetPasswordModal\n   */\n  isValid() {\n    const { errors, isValid }\n       = validateInput(this.state);\n\n    if (!isValid) {\n      this.setState({ errors });\n    }\n\n    return isValid;\n  }\n\n  /**\n   * @param {any} event\n   * @memberof ForgetPasswordModal\n   * @return {void}\n   */\n  handleSubmit(event) {\n    event.preventDefault();\n    this.setState({\n      email: ''\n    });\n    if (this.isValid()) {\n      this.setState({ errors: {}, isLoading: true });\n      this.props.resetPasswordEmail(this.state).then(\n        () => {\n          this.props.addFlashMessage({\n            type: 'success',\n            text: 'Please check your email and follow the instruction'\n          });\n        },\n      () => {\n        this.props.addFlashMessage({\n          type: 'error',\n          text: 'Incorrect email'\n        });\n      });\n    }\n  }\n\n  /**\n   * @param {any} event\n   * @memberof ForgetPasswordModal\n   * @return {void}\n   */\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  /**\n   * @returns {object} - Forget Password modal component\n   * @memberof ForgetPasswordModal\n   */\n  render() {\n    const { errors, email } = this.state;\n    return (\n      <div>\n        <Modal\n          header='Recover Password'\n          trigger={<p className=\"forgotPassword\">Forgot Password?</p>}>\n          <FlashMessagesList />\n          <form onSubmit={this.handleSubmit} >\n            { errors.form &&\n            <div className=\"alert alert-danger\">{errors.form}</div> }\n            <TextFieldGroup\n              error={errors.email}\n              label=\"Email\"\n              field=\"email\"\n              onChange={this.handleChange}\n              type=\"text\"\n              value={email}\n            />\n            <Button\n              className=\"btn waves-effect waves-light\"\n              type=\"submit\"\n            >\n            Reset\n            </Button>\n          </form>\n        </Modal>\n      </div>\n    );\n  }\n\n}\n\nForgetPasswordModal.propTypes = {\n  resetPasswordEmail: PropTypes.func.isRequired,\n  addFlashMessage: PropTypes.func.isRequired,\n};\n\nexport default\nconnect(null, { resetPasswordEmail, addFlashMessage })(ForgetPasswordModal);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/user/ForgetPasswordModal.jsx"],"sourceRoot":""}