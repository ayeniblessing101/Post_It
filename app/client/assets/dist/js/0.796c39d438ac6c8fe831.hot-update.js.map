{"version":3,"sources":["webpack:///./app/client/components/notification/FlashMessagesList.jsx?ec54","webpack:///./app/client/validations/addgroup.js?9928","webpack:///./app/client/validations/adduser.js?f563","webpack:///./app/client/validations/forgotpassword.js?7532","webpack:///./app/client/validations/login.js?6c72","webpack:///./app/client/validations/reset_password.js?f056","webpack:///./app/client/validations/signup.js?94a2","webpack:///./app/client/utils/setAuthorizationToken.js?c600","webpack:///./app/client/actions/types.js?dd2b","webpack:///./app/client/actions/getUsersAction.js?837b","webpack:///./app/client/actions/messageAction.js?f4ea","webpack:///./app/client/components/group/AddGroupForm.jsx?80e0","webpack:///./app/client/components/group/GroupCard.jsx?a773","webpack:///./app/client/components/group/GroupsList.jsx?5ba1","webpack:///./app/client/components/group/GroupsPage.jsx?42ea","webpack:///./app/client/components/messages/AddUserModal.jsx?1cbc","webpack:///./app/client/components/messages/AllGroups.jsx?0a0a","webpack:///./app/client/components/messages/AllUsers.jsx?d195","webpack:///./app/client/components/messages/MessageBoard.jsx?8fe6","webpack:///./app/client/components/messages/MessageForm.jsx?c5ed","webpack:///./app/client/components/messages/MessagePage.jsx?4d9d","webpack:///./app/client/components/notification/FlashMessage.jsx?dd46","webpack:///./app/client/components/user/ForgetPasswordModal.jsx?1ec4","webpack:///./app/client/components/user/LoginForm.jsx?65be","webpack:///./app/client/components/user/ResetPasswordForm.jsx?7303","webpack:///./app/client/components/user/ResetPasswordPage.jsx?dabb","webpack:///./app/client/components/user/SignupForm.jsx?3869","webpack:///./app/client/components/user/UserList.jsx?9af7","webpack:///./app/client/reducers/groupsReducer.js?2155","webpack:///./app/client/reducers/messagesReducer.js?43a7","webpack:///./app/client/reducers/paginationReducer.js?7ac6","webpack:///./app/client/utils/numberValidation.js?a1a8","webpack:///./app/client/actions/groupActions.js?06ef"],"names":["FlashMessagesList","messages","props","map","message","id","deleteFlashMessage","Component","propTypes","array","isRequired","func","mapStateToProps","state","flashMessages","Validator","require","isEmpty","exports","validateInput","data","errors","groupname","isValid","username","email","password","newPassword","confirmNewPassword","phoneNo","isEmail","confirm_password","equals","setAuthorizationToken","token","defaults","headers","common","ADD_FLASH_MESSAGE","DELETE_FLASH_MESSAGE","GET_CURRENT_AUTHENTICATED_USER","GET_GROUPS","ADD_USER_TO_GROUP","POST_MESSAGE","GET_MESSAGES","GET_GROUP_USERS","UPDATE_READ_STATUS","GET_ALL_USERS","getUsersAction","addUsersToReduxState","type","users","searchParams","offset","limit","get","params","q","then","response","dispatch","postMessage","getMessages","postMessageStatus","getAllMessages","groupId","post","AddGroupForm","handleSubmit","bind","handleChange","setState","event","preventDefault","isLoading","createGroup","context","router","history","push","target","name","value","form","contextTypes","object","GroupCard","avatar1","group","groupName","GroupsList","groups","emptyMessage","groupsList","i","GroupsPage","fetchGroups","nextProps","AddUserModal","addUserToGroup","res","addFlashMessage","text","fetchGroupUsers","number","AllGroups","AllUsers","groupUsers","groupUser","MessageBoard","selectedGroupId","MessageForm","priority","message_body","priority_level","$","document","ready","material_select","grouId","groudId","allMessages","parseInt","groupTitle","currentGroup","length","User","createdAt","ISO_8601","fromNow","handleMessageStatus","toLowerCase","MessagePage","match","Number","selectedGroupName","string","defaultProps","FlashMessage","onClick","ForgetPasswordModal","e","resetPasswordEmail","LoginForm","login","err","toggleForm","ResetPasswordForm","query","parse","location","search","resetPassword","ResetPasswordPage","ok","checkToken","SignupForm","invalid","userSignupRequest","phone","checkUserExits","UserList","usersPerPage","pagination","pageCount","Math","ceil","count","handlePageClick","totalCount","page","selected","user","index","initialState","action","pageNumber","pageSize","checkNum","num","rawNum","isNaN","module","getGroups","getGroupUsers","addUserStatus","status","catch","error","members"],"mappings":"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","file":"0.796c39d438ac6c8fe831.hot-update.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FlashMessage from './FlashMessage';\n\nimport { deleteFlashMessage } from '../../actions/flashMessageActions';\n\nclass FlashMessagesList extends React.Component {\n  render() {\n    const messages = this.props.messages.map(message =>\n     (<FlashMessage\n        key={message.id}\n        message={message}\n        deleteFlashMessage={this.props.deleteFlashMessage}\n      />)\n    );\n    return (\n      <div>{messages}</div>\n    );\n  }\n}\n\nFlashMessagesList.propTypes = {\n  messages: PropTypes.array.isRequired,\n  deleteFlashMessage: PropTypes.func.isRequired\n};\n\n/**\n * takes a state in the store (messages) and passes it to the component as props\n *\n * @param {object} state\n * @returns\n */\nfunction mapStateToProps(state) {\n  return {\n    messages: state.flashMessages\n  };\n}\n\nexport default\n connect(mapStateToProps, { deleteFlashMessage })(FlashMessagesList);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/notification/FlashMessagesList.jsx","const Validator = require('validator');\nconst isEmpty = require('lodash/isEmpty');\n\nexports.validateInput = (data) => {\n  const errors = {};\n\n  if (Validator.isEmpty(data.groupname)) {\n    errors.groupname = 'This field is required';\n  }\n\n  return {\n    errors,\n    isValid: isEmpty(errors)\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/validations/addgroup.js","const Validator = require('validator');\nconst isEmpty = require('lodash/isEmpty');\n\nexports.validateInput = (data) => {\n  const errors = {};\n  if (Validator.isEmpty(data.username)) {\n    errors.username = 'This field is required';\n  }\n\n  return {\n    errors,\n    isValid: isEmpty(errors)\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/validations/adduser.js","const Validator = require('validator');\nconst isEmpty = require('lodash/isEmpty');\n\nexports.validateInput = (data) => {\n  const errors = {};\n  if (Validator.isEmpty(data.email)) {\n    errors.email = 'This field is required';\n  }\n\n  return {\n    errors,\n    isValid: isEmpty(errors)\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/validations/forgotpassword.js","import Validator from 'validator';\nimport isEmpty from 'lodash/isEmpty';\n\nexport default function validateInput(data) {\n  const errors = {};\n\n  if (Validator.isEmpty(data.username)) {\n    errors.username = 'This field is required';\n  }\n\n  if (Validator.isEmpty(data.password)) {\n    errors.password = 'This field is required';\n  }\n\n  return {\n    errors,\n    isValid: isEmpty(errors)\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/validations/login.js","const Validator = require('validator');\nconst isEmpty = require('lodash/isEmpty');\n\nexports.validateInput = (data) => {\n  const errors = {};\n  if (Validator.isEmpty(data.newPassword)) {\n    errors.newPassword = 'This field is required';\n  }\n  if (Validator.isEmpty(data.confirmNewPassword)) {\n    errors.confirmNewPassword = 'This field is required';\n  }\n\n  return {\n    errors,\n    isValid: isEmpty(errors)\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/validations/reset_password.js","import Validator from 'validator';\nimport isEmpty from 'lodash/isEmpty';\nimport checkNum from '../utils/numberValidation';\n\nexport default (data) => {\n  const errors = {};\n\n  if (Validator.isEmpty(data.username)) {\n    errors.username = 'This field required';\n  }\n  if (Validator.isEmpty(data.email)) {\n    errors.email = 'This field required';\n  }\n  if (!checkNum(data.phoneNo)) {\n    errors.phoneNo = 'This field required';\n  }\n  if (!Validator.isEmail(data.email)) {\n    errors.email = 'Email is not valid';\n  }\n  if (Validator.isEmpty(data.password)) {\n    errors.password = 'This field required';\n  }\n  if (Validator.isEmpty(data.confirm_password)) {\n    errors.confirm_password = 'This field required';\n  }\n  if (!Validator.equals(data.password, data.confirm_password)) {\n    errors.confirm_password = 'Password must Match';\n  }\n  return {\n    errors,\n    isValid: isEmpty(errors)\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/validations/signup.js","import axios from 'axios';\n\nconst setAuthorizationToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\n\nexport default setAuthorizationToken;\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/utils/setAuthorizationToken.js","export const ADD_FLASH_MESSAGE = 'ADD_FLASH_MESSAGE';\nexport const DELETE_FLASH_MESSAGE = 'DELETE_FLASH_MESSAGE';\nexport const GET_CURRENT_AUTHENTICATED_USER = 'GET_CURRENT_AUTHENTICATED_USER';\nexport const GET_GROUPS = 'GET_GROUPS';\nexport const ADD_USER_TO_GROUP = 'ADD_USER_TO_GROUP';\nexport const POST_MESSAGE = 'POST_MESSAGE';\nexport const GET_MESSAGES = 'GET_MESSAGES';\nexport const GET_GROUP_USERS = 'GET_GROUP_USERS';\nexport const UPDATE_READ_STATUS = 'UPDATE_READ_STATUS';\nexport const GET_ALL_USERS = 'GET_ALL_USERS';\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/actions/types.js","import axios from 'axios';\nimport { GET_ALL_USERS } from './types';\n\nconst addUsersToReduxState = users => (\n  {\n    type: GET_ALL_USERS,\n    users\n  }\n);\n\n/**\n * @function getUsers\n * @param {string} searchParams - search parameters\n * @param {int} offset - offset\n * @param {int} limit - limit\n * @return {function} action payload data and action type\n */\nexport default function getUsersAction(searchParams, offset = 0, limit = 5) {\n  return dispatch => (\n    axios.get('/api/v1/user/search', {\n      params: {\n        q: searchParams,\n        offset,\n        limit\n      }\n    })\n  )\n    .then((response) => {\n      dispatch(addUsersToReduxState(response.data));\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/actions/getUsersAction.js","import axios from 'axios';\nimport { POST_MESSAGE, GET_MESSAGES } from './types';\n\n/**\n * post message status\n * @param {any} message\n * @return {object} -action payload data and action type\n */\nexport const postMessageStatus = message => (\n  {\n    type: POST_MESSAGE,\n    message\n  }\n);\n\n/**\n * action to fetch all messages\n * @param {any} messages\n * @return {object} - action payload data and action type\n */\nexport const getAllMessages = messages => (\n  {\n    type: GET_MESSAGES,\n    messages\n  }\n);\n\n/**\n * Post a message.\n * @param {integer} groupId - groupdId.\n * @param {string} message - groupdId.\n *\n *@returns {function} - dispatches an action to post message.\n */\nexport function postMessage(groupId, message) {\n  return dispatch => (\n    axios.post(`/api/v1/group/${groupId}/message`, message)\n    .then(({ data }) => {\n      dispatch(postMessageStatus(data.data));\n    })\n  );\n}\n\n/**\n * Fetch all Messages.\n * @param {Integer} groupId - groupdId.\n *\n *@returns {function} - dispatch an action to get all messages to the store.\n */\nexport function getMessages(groupId) {\n  return dispatch => (\n    axios.get(`/api/v1/group/${groupId}/messages`)\n    .then(({ data }) => {\n      dispatch(getAllMessages(data.messages));\n    })\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/actions/messageAction.js","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport { createGroup } from '../../actions/groupActions';\nimport { validateInput } from '../../validations/addgroup';\n\n/**\n * @class AddGroupForm\n * @extends {React.Component}\n */\nexport class AddGroupForm extends React.Component {\n  /**\n   * Creates an instance of AddGroupForm.\n   * @param {any} props\n   * @memberof AddGroupForm\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      groupname: '',\n      errors: {}\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  isValid() {\n    const { errors, isValid } = validateInput(this.state);\n\n    if (!isValid) {\n      this.setState({ errors });\n    }\n\n    return isValid;\n  }\n\n  /**\n   * @param {any} event\n   * @memberof AddGroupForm\n   * @return {void}\n   */\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.isValid()) {\n      this.setState({ errors: {}, isLoading: true });\n      this.props.createGroup(this.state).then(\n        () => {\n          this.context.router.history.push('/groups');\n        },\n        this.setState({\n          groupname: '',\n          errors: {}\n        })\n      );\n    }\n  }\n\n  /**\n   * @param {any} event\n   * @memberof AddGroupForm\n   * @return {void}\n   */\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  /**\n   * Render AddGroup Form component\n   * @returns {object} Add group form component\n   * @memberof AddGroupForm\n   */\n  render() {\n    const { errors, groupname } = this.state;\n    return (\n      <div>\n        <div className=\"col s12 m10 l10 col-md-10\">\n          <div className=\"mycontainer\">\n            <div className=\"row\">\n              <div className=\"col s12 m4 l2\" />\n              <div className=\"col s12 m4 l8 large-cards\">\n                <h4>Add Group</h4>\n                <form onSubmit={this.handleSubmit}>\n                  { errors.form &&\n                    <div\n                      className=\"alert alert-danger\">\n                      {errors.form}\n                    </div>\n                  }\n                  <div className=\"\">\n                    <TextFieldGroup\n                      error={errors.groupname}\n                      label=\"Group Name\"\n                      onChange={this.handleChange}\n                      value={groupname}\n                      field=\"groupname\"\n                      type=\"text\"\n                    />\n                    <div className=\"input-field col s12\">\n                      <button\n                        className=\"btn waves-effect waves-light\"\n                        type=\"submit\">\n                        Create\n                      </button>\n                      <br /><br />\n                    </div>\n                  </div>\n                  <br /><br />\n                </form>\n              </div>\n              <div className=\"col s12 m4 l2\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddGroupForm.propTypes = {\n  createGroup: PropTypes.func.isRequired,\n};\n\nAddGroupForm.contextTypes = {\n  router: PropTypes.object.isRequired\n};\n\nexport default connect(null, { createGroup })(AddGroupForm);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/group/AddGroupForm.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst avatar1 = require('../../assets/images/avatar1.png');\n\n/**\n * Renders GroupCard component\n * @export\n * @param {any} group\n * @returns {object} - GroupCard component\n */\nexport default function GroupCard({ group }) {\n  return (\n    <div>\n      <Link to={`/group/${group.id}`}>\n        <div className=\"col s12 m5 l3 small-cards\"><br />\n          <img\n          src={avatar1}\n          alt=\"avatar\"\n          />\n          <h5><b>{group.groupName}</b></h5>\n          <Link to={`/group/${group.id}`} className=\"btn btn-primary\">\n            Enter Group\n          </Link>\n          <br /><br />\n        </div>\n      </Link>\n    </div>\n  );\n}\n\nGroupCard.propTypes = {\n  group: PropTypes.object.isRequired\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/group/GroupCard.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport GroupCard from './GroupCard';\n\nconst isEmpty = require('lodash/isEmpty');\n\nconst GroupsList = ({ groups }) => {\n  const emptyMessage = (\n    <div>\n      <h3 className=\"emptyMessage\">No Groups</h3>\n    </div>\n\n  );\n  const groupsList = (\n    <div>\n      <div className=\"col s12 m1 l1\" />\n      <div id=\"groupsList\" className=\"col s12 m11 l11 col-md-10 no-float\">\n        <div className=\"mycontainer\">\n          <div className=\"row \">\n            <h4>All Groups</h4>\n            <br />\n            <div className=\"mycontainer\">\n              <div className=\"row \">\n                {\n                  groups.map((group, i) => {\n                    return <GroupCard group={group} key={i} />;\n                  })\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n      isEmpty(groups) ? emptyMessage : groupsList\n  );\n};\n\nGroupsList.propTypes = {\n  groups: PropTypes.array.isRequired,\n};\n\nexport default GroupsList;\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/group/GroupsList.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport GroupsList from './GroupsList';\nimport Header from '../common/Header';\nimport Footer from '../common/Footer';\nimport { fetchGroups } from '../../actions/groupActions';\n\n/**\n * renders groups page compoent\n * @class GroupsPage\n * @extends {React.Component}\n */\nclass GroupsPage extends React.Component {\n  /**\n   * Creates an instance of GroupsPage.\n   * @memberof GroupsPage\n   */\n  constructor() {\n    super();\n    this.state = {\n      groups: []\n    };\n  }\n  /**\n   * @memberof GroupsPage\n   * @return {void}\n   */\n  componentDidMount() {\n    this.props.fetchGroups();\n  }\n\n  /**\n   * @param {any} nextProps\n   * @memberof GroupsPage\n   * @return {void}\n   */\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      groups: nextProps.groups\n    });\n  }\n\n  /**\n   * @returns {object} groupsPage Component\n   * @memberof GroupsPage\n   */\n  render() {\n    const { groups } = this.state;\n\n    return (\n      <div id=\"groupsPage\">\n        <Header />\n        <div className=\"mycontainer\" >\n          <div className=\"row\">\n            <GroupsList groups={groups} />\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\n// as props is introduced to this component its documented with propTypes\nGroupsPage.propTypes = {\n  fetchGroups: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  groups: state.groups\n});\n\n\nexport default connect(mapStateToProps, { fetchGroups })(GroupsPage);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/group/GroupsPage.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal } from 'react-materialize';\nimport { connect } from 'react-redux';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport { validateInput } from '../../validations/adduser';\nimport { addFlashMessage } from '../../actions/flashMessageActions';\nimport { fetchGroupUsers } from '../../actions/groupActions';\nimport FlashMessagesList from '../notification/FlashMessagesList';\n\n/**\n * @class AddUserModal\n * @extends {React.Component}\n */\nclass AddUserModal extends React.Component {\n  /**\n   * Creates an instance of AddUserModal.\n   * @param {any} props\n   * @memberof AddUserModal\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      errors: {}\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  /**\n   * Checks if form input(s) is valid\n   * @returns {isValid} - checks if form input is valid\n   * @memberof AddUserModal\n   */\n  isValid() {\n    const { errors, isValid } = validateInput(this.state);\n\n    if (!isValid) {\n      this.setState({ errors });\n    }\n\n    return isValid;\n  }\n\n  /**\n   * Handles submit request\n   * @param {any} event\n   * @memberof AddUserModal\n   * @returns {void}\n   */\n  handleSubmit(event) {\n    event.preventDefault();\n    const groupId = this.props.groupId;\n    if (this.isValid()) {\n      this.setState({ errors: {} });\n      this.props.addUserToGroup(groupId, {\n        username: this.state.username\n      }).then((res) => {\n        if (res === true) {\n          this.props.addFlashMessage({\n            type: 'success',\n            text: 'User has been add to Group Successfully'\n          });\n          this.props.fetchGroupUsers(groupId);\n        } else {\n          this.props.addFlashMessage({\n            type: 'error',\n            text: res\n          });\n        }\n      });\n    }\n    this.setState({\n      username: '',\n      errors: {}\n    });\n  }\n\n  /**\n   * Handles onChange event\n   * @param {any} event\n   * @memberof AddUserModal\n   * @return {void}\n   */\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  /**\n   * @memberof AddUserModal\n   * @returns {object} - AddUserModal Component\n   */\n  render() {\n    const { errors, username } = this.state;\n    return (\n      <div>\n        <Modal\n          header=\"Add User to Group\"\n          trigger={<Button className=\"add_user\">Add User</Button>}>\n          <FlashMessagesList />\n          <form onSubmit={this.handleSubmit} >\n            { errors.form &&\n              <div className=\"alert alert-danger\">{errors.form}</div> }\n            <TextFieldGroup\n              error={errors.username}\n              label=\"Username\"\n              onChange={this.handleChange}\n              value={username}\n              field=\"username\"\n              type=\"text\"\n            />\n            <Button\n              className=\"btn waves-effect waves-light\"\n              type=\"submit\"\n            >\n            Add\n            </Button>\n          </form>\n        </Modal>\n      </div>\n    );\n  }\n\n}\n\nAddUserModal.propTypes = {\n  addUserToGroup: PropTypes.func.isRequired,\n  fetchGroupUsers: PropTypes.func.isRequired,\n  addFlashMessage: PropTypes.func.isRequired,\n  groupId: PropTypes.number.isRequired\n};\n\nexport default connect(null,\n  { addFlashMessage, fetchGroupUsers })(AddUserModal);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/messages/AddUserModal.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchGroups } from '../../actions/groupActions';\n\n\n/**\n * @class AllGroups\n * @extends {React.Component}\n */\nclass AllGroups extends React.Component {\n  /**\n   * Creates an instance of AllGroups.\n   * @param {any} props\n   * @memberof AllGroups\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      groups: this.props.groups,\n    };\n  }\n\n  /**\n   * @memberof AllGroups\n   * @return {void}\n   */\n  componentDidMount() {\n    this.props.fetchGroups();\n  }\n\n  /**\n   * @param {any} nextProps\n   * @memberof AllGroups\n   * @return {void}\n   */\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      groups: nextProps.groups,\n      messages: nextProps.messages\n    });\n  }\n  /**\n   * Renders the AllGroup Component\n   * @memberof AllGroups\n   * @returns {object} - AllGroups Component\n   */\n  render() {\n    const groups = this.state.groups;\n    return (\n      <div>\n        <div className=\"col s12 m12 l3 \">\n          <ul\n            className=\"collapsible allMessageCard\"\n            data-collapsible=\"accordion\"\n          >\n            {\n              groups.map(group =>\n                <li key={group.id}>\n                  <div className=\"collapsible-header\">\n                    <i className=\"material-icons\">filter_drama</i>\n                    <Link to={`/group/${group.id}`} className=\"groupNames\">\n                      {group.groupName}\n                    </Link>\n                  </div>\n                </li>\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nAllGroups.propTypes = {\n  groups: PropTypes.array.isRequired,\n  fetchGroups: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  groups: state.groups,\n  messages: state.messages\n});\n\nexport default connect(mapStateToProps, { fetchGroups })(AllGroups);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/messages/AllGroups.jsx","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchGroupUsers } from '../../actions/groupActions';\n\nclass AllUsers extends Component {\n  /**\n   * @memberof AllUsers\n   * @return {void}\n   */\n  componentWillMount() {\n    this.props.fetchGroupUsers(this.props.groupId);\n  }\n  render() {\n    const groupUsers = this.props.groupUsers;\n    return (\n      <div>\n        <div className=\"col s12 m12 l3 \">\n          <ul\n            className=\"collapsible allMessageCard\"\n            data-collapsible=\"accordion\">\n            {\n              groupUsers.map(groupUser =>\n                <li key={groupUser.id}>\n                  <div className=\"collapsible-header\">\n                    <Link\n                    to=\"#\"\n                    className=\"userNames\">{groupUser.username}</Link>\n                  </div>\n                </li>\n              )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nAllUsers.propTypes = {\n  fetchGroupUsers: PropTypes.func.isRequired,\n  groupUsers: PropTypes.array.isRequired,\n  groupId: PropTypes.number.isRequired\n};\n\nconst mapStateToProps = state => ({\n  groupUsers: state.groupUsers\n});\n\n\nexport default connect(mapStateToProps, { fetchGroupUsers })(AllUsers);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/messages/AllUsers.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AddUserModal from './AddUserModal';\nimport MessageForm from './MessageForm';\nimport AllGroups from './AllGroups';\nimport AllUsers from './AllUsers';\n\n/**\n * @class MessageBoard\n * @extends {React.Component}\n */\nclass MessageBoard extends React.Component {\n  /**\n   * Creates an instance of MessageBoard.\n   * @param {any} props\n   * @memberof MessageBoard\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      groups: this.props.groups,\n    };\n  }\n\n  /**\n   * @param {any} nextProps\n   * @memberof MessageBoard\n   * @return {void}\n   */\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      groups: nextProps.groups\n    });\n  }\n\n  render() {\n    const groups = this.props.groups;\n    const selectedGroupId = this.props.selectedGroupId;\n    const { addUserToGroup } = this.props;\n    return (\n      <div>\n        <div className=\"col s12 m12 l12 col-md-10\">\n          <div id=\"messageBoard\" className=\"mycontainer\">\n            {<AddUserModal\n              addUserToGroup={addUserToGroup}\n              groupId={selectedGroupId}\n              /* statusMessage={statusMessage} */\n              />}\n            <div className=\"row\">\n              <AllGroups\n                groups={this.props.groups}\n              />\n              <MessageForm\n                groupId={selectedGroupId}\n              />\n              <AllUsers groupId={selectedGroupId} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMessageBoard.propTypes = {\n  addUserToGroup: PropTypes.func.isRequired,\n  groups: PropTypes.array.isRequired,\n  selectedGroupId: PropTypes.number.isRequired\n};\n\n\nexport default connect(null)(MessageBoard);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/messages/MessageBoard.jsx","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport { getMessages, postMessage }\nfrom '../../actions/messageAction';\n\n/**\n * @class MessageForm\n * @extends {React.Component}\n */\nclass MessageForm extends React.Component {\n  /**\n   * Creates an instance of MessageForm.\n   * @param {any} props\n   * @memberof MessageForm\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: this.props.messages,\n      group: this.props.group,\n      groupId: this.props.groupId,\n      message: '',\n      priority: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  /**\n   * @param {any} event\n   * @memberof MessageForm\n   * @returns {void}\n   */\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  /**\n   * @param {any} event\n   * @memberof MessageForm\n   * @return {void}\n   */\n  handleSubmit(event) {\n    event.preventDefault();\n    const message = {\n      message_body: this.state.message,\n      priority_level: this.state.priority\n    };\n    this.props.postMessage(this.state.groupId, message)\n    .then(() => {\n      this.setState({\n        message: '',\n        priority: ''\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.props.getMessages(this.props.groupId);\n    $(document).ready(() => {\n      $('select').material_select();\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      messages: nextProps.messages,\n      group: nextProps.group,\n      grouId: nextProps.groudId\n    });\n  }\n  render() {\n    let allMessages;\n    const { group } = this.state;\n    const { messages } = this.state;\n    const groupId = parseInt(this.props.groupId, 10);\n    let groupTitle = 'No Group Found';\n\n    group.map((currentGroup) => {\n      const { id, groupName } = currentGroup;\n      if (id === groupId) {\n        groupTitle = groupName;\n      }\n    });\n\n    if (messages.length > 0) {\n      allMessages = messages.map(message => (\n        <div key={message.id}>\n          <b className=\"senderName\">\n            {message.User.username}\n          </b>\n          <span className=\"right\">\n            { moment(message.createdAt, moment.ISO_8601).fromNow() }\n          </span>\n          <p key={message.id}>\n            <Link\n              id={message.id}\n              className=\"messageLink\"\n              to=\"#\"\n              onClick={this.handleMessageStatus}>\n              {message.message_body}\n            </Link>\n            <span\n            className={`new badge ${(message.priority_level).toLowerCase()}`}\n            data-badge-caption={message.priority_level} />\n          </p>\n          <hr /><br />\n        </div>));\n    } else {\n      allMessages = (\n        <h6>No messages to show</h6>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"col s12 m12 l6 message-cards\">\n          <div className=\"message-cards-board\">\n            <h5 className=\"groupName\">{groupTitle}</h5>\n            { allMessages }\n          </div>\n          <div className=\"message-cards-form\">\n            <form onSubmit={this.handleSubmit} method=\"post\">\n              <div className=\"input-field col s8\">\n                <textarea\n                  placeholder=\"Write your message Here\"\n                  id=\"message\"\n                  type=\"text\"\n                  required\n                  name=\"message\"\n                  onChange={this.handleChange}\n                  value={this.state.message}\n                  className=\"materialize-textarea\"\n                />\n              </div>\n              <div className=\"col s4 mySelect\">\n                <select\n                  className=\"browser-default\"\n                  required\n                  value={this.state.priority}\n                  name=\"priority\"\n                  onChange={this.handleChange}>\n                  <option value=\"\" disabled>Select Priority</option>\n                  <option value=\"Normal\">Normal</option>\n                  <option value=\"Critical\">Critical</option>\n                  <option value=\"Urgent\">Urgent</option>\n                </select>\n                <br />\n                <button className=\"btn messageBtn\" type=\"submit\">\n                  <i className=\"material-icons\">send</i>\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMessageForm.propTypes = {\n  postMessage: PropTypes.func.isRequired,\n  getMessages: PropTypes.func.isRequired,\n  groupId: PropTypes.number.isRequired,\n  messages: PropTypes.array.isRequired\n};\n\n\nconst mapStateToProps = state => ({\n  messages: state.messages,\n  group: state.groups\n});\n\nexport default\nconnect(mapStateToProps,\n  { getMessages, postMessage })(MessageForm);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/messages/MessageForm.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport MessageBoard from './MessageBoard';\nimport Header from '../common/Header';\nimport Footer from '../common/Footer';\nimport { addUserToGroup } from '../../actions/groupActions';\n\n/**\n * @class MessagePage\n * @extends {React.Component}\n */\nclass MessagePage extends React.Component {\n\n  /**\n   * @memberof MessagePage\n   * @return {void}\n   */\n  componentWillMount() {\n    const groupId = this.props.match.params.id;\n    this.setState({\n      groupId\n    });\n  }\n  /**\n   * @param {any} nextProps\n   * @memberof MessagePage\n   * @return {void}\n   */\n\n  /**\n   * @returns {object} - Message Component\n   * @memberof MessagePage\n   */\n  render() {\n    return (\n      <div>\n        <Header />\n        <div className=\"mycontainer\" >\n          <div className=\"row\">\n            <MessageBoard\n              groups={this.props.groups}\n              addUserToGroup={this.props.addUserToGroup}\n              selectedGroupId={Number(this.state.groupId)}\n              selectedGroupName={this.state.selectedGroupName}\n            />\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nMessagePage.propTypes = {\n  addUserToGroup: PropTypes.func.isRequired,\n  groups: PropTypes.array.isRequired,\n  message: PropTypes.string,\n};\n\nMessagePage.defaultProps = {\n  message: ''\n};\n\nconst mapStateToProps = state => (\n  {\n    groups: state.groups,\n  }\n);\n\n\nexport default connect(mapStateToProps, { addUserToGroup })(MessagePage);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/messages/MessagePage.jsx","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\n/**\n * @class FlashMessage\n * @extends {React.Component}\n */\nclass FlashMessage extends React.Component {\n  /**\n   * Creates an instance of FlashMessage.\n   * @param {any} props\n   * @memberof FlashMessage\n   */\n  constructor(props) {\n    super(props);\n    this.onClick = this.onClick.bind(this);\n  }\n  /**\n   * @memberof FlashMessage\n   * @returns {void}\n   */\n  onClick() {\n    this.props.deleteFlashMessage(this.props.message.id);\n  }\n  /**\n   * @returns {object} flash message component\n   * @memberof FlashMessage\n   */\n  render() {\n    const { id, type, text } = this.props.message;\n    return (\n      <div\n        className={classnames('alert', {\n          'alert-success': type === 'success',\n          'alert-danger': type === 'error'\n        })}>\n        <button\n          onClick={this.onClick}\n          className=\"close\"><span>&times;</span></button>\n        {text}\n      </div>\n    );\n  }\n}\n\nFlashMessage.propTypes = {\n  message: PropTypes.object.isRequired,\n  deleteFlashMessage: PropTypes.func.isRequired\n};\n\nexport default FlashMessage;\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/notification/FlashMessage.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal } from 'react-materialize';\nimport { connect } from 'react-redux';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport { validateInput }\n from '../../validations/forgotpassword';\nimport { resetPasswordEmail } from '../../actions/forgotPasswordActions';\nimport { addFlashMessage } from '../../actions/flashMessageActions';\nimport FlashMessagesList from '../notification/FlashMessagesList';\n\n/**\n * @class ForgetPasswordModal\n * @extends {React.Component}\n */\nclass ForgetPasswordModal extends React.Component {\n  /**\n   * Creates an instance of ForgetPasswordModal.\n   * @param {any} props\n   * @memberof ForgetPasswordModal\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      errors: {}\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  /**\n   * @returns {isValid} - Check the form input is valid\n   * @memberof ForgetPasswordModal\n   */\n  isValid() {\n    const { errors, isValid, email, addFlashMessage } \n       = validateInput(this.state);\n\n    if (!isValid) {\n      this.setState({ errors });\n    }\n\n    return isValid;\n  }\n\n  /**\n   * @param {any} e\n   * @memberof ForgetPasswordModal\n   * @return {void}\n   */\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      email: ''\n    });\n    if (this.isValid()) {\n      this.setState({ errors: {}, isLoading: true });\n      this.props.resetPasswordEmail(this.state).then(\n        () => {\n          this.props.addFlashMessage({\n            type: 'success',\n            text: 'Please check your email and follow the instruction'\n          });\n        },\n      () => {\n        this.props.addFlashMessage({\n          type: 'error',\n          text: 'Incorrect email'\n        });\n      });\n    }\n  }\n\n  /**\n   * @param {any} e\n   * @memberof ForgetPasswordModal\n   * @return {void}\n   */\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  /**\n   * @returns {object} - Forget Password modal component\n   * @memberof ForgetPasswordModal\n   */\n  render() {\n    const { errors, email } = this.state;\n    return (\n      <div>\n        <Modal\n          header='Recover Password'\n          trigger={<p className=\"forgotPassword\">Forgot Password?</p>}>\n          <FlashMessagesList />\n          <form onSubmit={this.handleSubmit} >\n            { errors.form &&\n            <div className=\"alert alert-danger\">{errors.form}</div> }\n            <TextFieldGroup\n              label=\"Email\"\n              field=\"email\"\n              onChange={this.handleChange}\n              type=\"text\"\n              value={email}\n            />\n            <Button\n              className=\"btn waves-effect waves-light\"\n              type=\"submit\"\n            >\n            Reset\n            </Button>\n          </form>\n        </Modal>\n      </div>\n    );\n  }\n\n}\n\nForgetPasswordModal.propTypes = {\n  resetPasswordEmail: PropTypes.func.isRequired,\n  addFlashMessage: PropTypes.func.isRequired,\n};\n\nexport default\nconnect(null, { resetPasswordEmail, addFlashMessage })(ForgetPasswordModal);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/user/ForgetPasswordModal.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport ForgetPasswordModal from './ForgetPasswordModal';\nimport { login } from '../../actions/authenticationActions';\nimport validateInput from '../../validations/login';\nimport FlashMessagesList from '../notification/FlashMessagesList';\n\n/**\n * @class LoginForm\n * @extends {React.Component}\n */\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      errors: {},\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  /**\n   * @returns {isValid} - checks if the fields are not empty\n   * @memberof LoginForm\n   */\n  isValid() {\n    const { errors, isValid } = validateInput(this.state);\n\n    if (!isValid) {\n      this.setState({ errors });\n    }\n    return isValid;\n  }\n\n  /**\n   * @param {any} event\n   * @memberof LoginForm\n   * @returns {void}\n   */\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.isValid()) {\n      this.setState({ errors: {}, isLoading: true });\n      this.props.login(this.state).then(\n        () => this.context.router.history.push('/groups'),\n        err => this.setState({\n          errors: err.data.errors,\n          username: '',\n          password: ''\n        })\n      );\n    }\n  }\n\n  /**\n   * @param {any} event\n   * @memberof LoginForm\n   * @returns {void}\n   */\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  /**\n   * @returns {object} - LoginForm component\n   * @memberof LoginForm\n   */\n  render() {\n    const { errors, username, password } = this.state;\n    return (\n      <div>\n        <h4>Login to PostIt</h4>\n        <FlashMessagesList />\n        <form className=\"col s12\" onSubmit={this.handleSubmit}>\n          { errors.form &&\n          <div className=\"alert alert-danger\">{errors.form}</div> }\n          <div className=\"\">\n            <TextFieldGroup\n              error={errors.username}\n              label=\"Username\"\n              onChange={this.handleChange}\n              value={username}\n              field=\"username\"\n              type=\"text\"\n            />\n            <TextFieldGroup\n              error={errors.password}\n              label=\"Password\"\n              onChange={this.handleChange}\n              value={password}\n              field=\"password\"\n              type=\"password\"\n            />\n            <div className=\"input-field col s12\">\n              <button\n                  className=\"btn waves-effect waves-light\"\n                  type=\"submit\" name=\"action\">Submit\n                <i className=\"material-icons right\">send</i>\n              </button>\n              <br /><br />\n            </div>\n          </div>\n        </form>\n        <div className=\"row\">\n          <div className=\"col s6\"><ForgetPasswordModal /></div>\n          <div className=\"col s6\">\n            <p>\n              Do not have an account?\n              <button\n                className=\"blue-text signUp\"\n                onClick={() => this.props.toggleForm('signup')}>\n                <b>Sign Up</b>\n              </button>\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLoginForm.propTypes = {\n  login: PropTypes.func.isRequired,\n  toggleForm: PropTypes.func.isRequired\n};\n\nLoginForm.contextTypes = {\n  router: PropTypes.object.isRequired\n};\n\nexport default connect(null, { login })(LoginForm);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/user/LoginForm.jsx","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport queryString from 'query-string';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport { validateInput }\n  from '../../validations/reset_password';\nimport FlashMessagesList from '../notification/FlashMessagesList';\nimport { resetPassword } from '../../actions/forgotPasswordActions';\nimport { addFlashMessage } from '../../actions/flashMessageActions';\n\n/**\n * @class ResetPasswordForm\n * @extends {React.Component}\n */\nclass ResetPasswordForm extends React.Component {\n  /**\n   * Creates an instance of ResetPasswordForm.\n   * @param {any} props\n   * @memberof ResetPasswordForm\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      newPassword: '',\n      confirmNewPassword: '',\n      errors: {},\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  /**\n   * @memberof ResetPasswordForm\n   * @returns {isValid} - checks if the text field are not empty\n   */\n  isValid() {\n    const { errors, isValid } = validateInput(this.state);\n\n    if (!isValid) {\n      this.setState({ errors });\n    }\n    return isValid;\n  }\n\n  /**\n   * @param {any} event\n   * @memberof ResetPasswordForm\n   * @returns {void}\n   */\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.isValid()) {\n      const query = queryString.parse(this.props.location.search);\n      const email = query.email;\n      this.setState({ errors: {} });\n      if (this.state.newPassword === this.state.confirmNewPassword) {\n        this.props.resetPassword(this.state.newPassword, email).then(\n          () => this.context.router.history.push('/'),\n          err => this.setState({\n            errors: err.data.errors,\n            newPassword: '',\n            confirmNewPassword: ''\n          })\n        );\n      } else {\n        this.props.addFlashMessage({\n          type: 'error',\n          text: 'Password does not Match'\n        });\n      }\n    }\n  }\n\n  /**\n   * @param {any} e\n   * @memberof ResetPasswordForm\n   * @return {void}\n   */\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  /**\n   * @memberof ResetPasswordForm\n   * @returns {object} - ResetPasswordForm Component\n   */\n  render() {\n    const\n    { errors, newPassword, confirmNewPassword, addFlashMessage } = this.state;\n    return (\n      <div>\n        <section classID=\"wrapper\" className=\"resetPasswordForm\">\n          <div className=\"wrapper_cen2\">\n            <div className=\"row\">\n              <div className=\"col s12 m12 l12 reg_form\">\n                <div className=\"reg_form_cen\">\n                  <h4>Reset Password</h4>\n                  <FlashMessagesList />\n                  <form className=\"col s12\" onSubmit={this.handleSubmit}>\n                    {\n                      errors.form &&\n                      <div className=\"alert alert-danger\">{errors.form}</div>\n                    }\n                    <div className=\"\">\n                      <TextFieldGroup\n                        error={errors.newPassword}\n                        label=\"New Password\"\n                        field=\"newPassword\"\n                        onChange={this.handleChange}\n                        value={newPassword}\n                        type=\"password\"\n                      />\n                      <TextFieldGroup\n                        error={errors.confirmNewPassword}\n                        label=\"Confirm New Password\"\n                        field=\"confirmNewPassword\"\n                        value={confirmNewPassword}\n                        onChange={this.handleChange}\n                        type=\"password\"\n                      />\n                      <div className=\"input-field col s12\">\n                        <button\n                          className=\"btn waves-effect waves-light\"\n                          type=\"submit\" name=\"action\">Submit\n                          <i className=\"material-icons right\">send</i>\n                        </button>\n                        <br /><br />\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nResetPasswordForm.propTypes = {\n  resetPassword: PropTypes.func.isRequired,\n  addFlashMessage: PropTypes.func.isRequired\n};\n\nResetPasswordForm.contextTypes = {\n  router: PropTypes.object.isRequired\n};\n\nexport default connect(null,\n  { resetPassword, addFlashMessage })(withRouter(ResetPasswordForm));\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/user/ResetPasswordForm.jsx","import React from 'react';\nimport queryString from 'query-string';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ResetPasswordForm from './ResetPasswordForm';\nimport { checkToken } from '../../actions/forgotPasswordActions';\n\n/**\n * @class ResetPasswordPage\n * @extends {React.Component}\n */\nclass ResetPasswordPage extends React.Component {\n  /**\n   * Creates an instance of ResetPasswordPage.\n   * @param {any} props\n   * @memberof ResetPasswordPage\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      ok: false\n    };\n  }\n\n  /**\n   * @memberof ResetPasswordPage\n   * @return {void}\n   */\n  componentDidMount() {\n    const query = queryString.parse(this.props.location.search);\n    const token = query.token;\n    const email = query.email;\n    this.props.checkToken(token, email)\n    .then(() => {\n      this.setState({\n        ok: true\n      });\n    }, () => {\n      //\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        { this.state.ok && <ResetPasswordForm />}\n      </div>\n    );\n  }\n}\n\nResetPasswordPage.propTypes = {\n  checkToken: PropTypes.func.isRequired\n};\n\n\nexport default connect(null, { checkToken })(ResetPasswordPage);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/user/ResetPasswordPage.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport validateInput from '../../validations/signup';\nimport {\n  userSignupRequest\n} from '../../actions/authenticationActions';\nimport { addFlashMessage } from '../../actions/flashMessageActions';\n\n/**\n * @class SignupForm\n * @extends {React.Component}\n */\nclass SignupForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      phoneNo: '',\n      password: '',\n      confirm_password: '',\n      errors: {},\n      isLoading: false,\n      invalid: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  /**\n   * Handle onChange event\n   * @param {any} event\n   * @memberof SignupForm\n   * @return {void}\n   */\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  /**\n   * Checks if the form input(s) is valid\n   * @memberof SignupForm\n   * @return {isValid} - checks if the fields are not empty\n   */\n  isValid() {\n    const { errors, isValid } = validateInput(this.state);\n\n    if (!isValid) {\n      this.setState({ errors });\n    }\n\n    return isValid;\n  }\n\n  /**\n   * Handles submit event\n   * @param {any} event\n   * @memberof SignupForm\n   * @return {void}\n   */\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.isValid()) {\n      this.setState({ errors: {}, isLoading: true });\n      this.props.userSignupRequest(this.state).then(\n        () => {\n          this.props.addFlashMessage({\n            type: 'success',\n            text: 'You signed up successfully. Login!'\n          });\n          this.context.router.history.push('/groups');\n        },\n        ({ data }) => this.setState({\n          errors: data,\n          isLoading: false,\n          username: '',\n          email: '',\n          phone: '',\n          password: '',\n          confirm_password: '',\n        })\n      );\n    }\n  }\n  /**\n   * renders the signup form component\n   * @returns {object} - signup component\n   * @memberof SignupForm\n   */\n  render() {\n    const { errors } = this.state;\n    return (\n      <div>\n        <h4>Register to PostIt</h4>\n        <form className=\"col s12\" onSubmit={this.handleSubmit}>\n          <div className=\"\">\n            <TextFieldGroup\n              error={errors.username}\n              label=\"Username\"\n              onChange={this.handleChange}\n              checkUserExits={this.checkUserExits}\n              value={this.state.username}\n              field=\"username\"\n              type=\"text\"\n            />\n            <TextFieldGroup\n              error={errors.email}\n              label=\"Email\"\n              onChange={this.handleChange}\n              checkUserExits={this.checkUserExits}\n              value={this.state.email}\n              field=\"email\"\n              type=\"text\"\n            />\n            <TextFieldGroup\n              error={errors.phone}\n              label=\"Phone Number\"\n              onChange={this.handleChange}\n              value={this.state.phoneNo}\n              field=\"phoneNo\"\n              type=\"number\"\n            />\n            <TextFieldGroup\n              error={errors.password}\n              label=\"Password\"\n              onChange={this.handleChange}\n              value={this.state.password}\n              field=\"password\"\n              type=\"password\"\n            />\n            <TextFieldGroup\n              error={errors.confirm_password}\n              label=\"Confirm Password\"\n              onChange={this.handleChange}\n              value={this.state.confirm_password}\n              field=\"confirm_password\"\n              type=\"password\"\n            />\n            <div className=\"input-field col s12\">\n              <button\n                disabled={this.state.isLoading || this.state.invalid}\n                className=\"btn waves-effect waves-light\" type=\"submit\"\n                name=\"action\">Submit\n                <i className=\"material-icons right\">send</i>\n              </button>\n              <br /><br />\n            </div>\n          </div>\n        </form>\n        <p>Have an account already?\n          <button\n            className=\"blue-text signUp\"\n            onClick={() => this.props.toggleForm('login')}\n          >\n            <b>Login</b></button>\n        </p>\n      </div>\n    );\n  }\n}\n\nSignupForm.propTypes = {\n  userSignupRequest: PropTypes.func.isRequired,\n  addFlashMessage: PropTypes.func.isRequired,\n  toggleForm: PropTypes.func.isRequired\n};\n\nSignupForm.contextTypes = {\n  router: PropTypes.object.isRequired\n};\n\nexport default connect(null,\n  { userSignupRequest, addFlashMessage })(SignupForm);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/user/SignupForm.jsx","import React from 'react';\nimport ReactPaginate from 'react-paginate';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport queryString from 'query-string';\nimport getUsersAction from '../../actions/getUsersAction';\n\n/**\n * @class UserList\n * @extends {Component}\n */\nclass UserList extends React.Component {\n  /**\n   * Creates an instance of UserList.\n   * @param {object} props\n   * @memberof UserList\n   */\n  constructor(props) {\n    super(props);\n    this.usersPerPage = 5;\n    const { pagination } = this.props;\n    this.state = {\n      users: pagination.users,\n      offset: 0,\n      pageCount: Math.ceil(pagination.count / this.usersPerPage)\n    };\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.searchParams = queryString.parse(this.props.location.search).q;\n  }\n\n  /**\n   * call the getUsers method after component have mounted\n   * @memberof UserList\n   * @return {void}\n   */\n  componentDidMount() {\n    this.props.getUsersAction(this.searchParams);\n  }\n\n  /**\n   * update component with new props\n   * @param {object} nextProps\n   * @memberof UserList\n   * @return {void}\n   */\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      users: nextProps.pagination.users,\n      pageCount: Math.ceil(nextProps.pagination.totalCount / this.usersPerPage)\n    });\n  }\n\n  /**\n   * used to calculate offset\n   * @param {number} page\n   * @memberof UserList\n   * @return {page} - page\n   */\n  handlePageClick(page) {\n    const selected = page.selected;\n    const offset = Math.ceil(selected * this.usersPerPage);\n\n    this.setState({ offset }, () => {\n      this.props.getUsersAction(this.searchParams, offset);\n    });\n  }\n\n  /**\n   * Renders the UserList component\n   * @memberof UserList\n   * @return {object} - UserList component\n   */\n  render() {\n    const { users } = this.state;\n    return (\n      <div>\n        <div className=\"col s12 m10 l10 col-md-10\">\n          <div className=\"mycontainer\">\n            <div className=\"row\">\n              <div className=\"col s12 m4 l2\" />\n              <div className=\"col s12 m4 l8 large-cards\">\n                <h4>Users</h4>\n                <table className=\"striped responsive-table\">\n                  <thead>\n                    <tr>\n                      <th>Name</th>\n                      <th>Email</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {\n                      users.length > 0 ? users.map((user, index) => (\n                        <tr key={index}>\n                          <td>{user.username}</td>\n                          <td>{user.email}</td>\n                        </tr>\n                      )) : (\n                        <tr>\n                          <td\n                            className=\"center\"\n                            col=\"2\" colSpan=\"2\">\n                            No user found\n                          </td>\n                        </tr>\n                      )\n                    }\n                  </tbody>\n                </table>\n                {\n                  users.length > 5 &&\n                  <ReactPaginate\n                  previousLabel={'previous'}\n                  nextLabel={'next'}\n                  breakLabel={<a href=\"\">...</a>}\n                  breakClassName={'break-me'}\n                  pageCount={this.state.pageCount}\n                  marginPagesDisplayed={2}\n                  pageRangeDisplayed={5}\n                  onPageChange={this.handlePageClick}\n                  containerClassName={'pagination'}\n                  subContainerClassName={'pages pagination'}\n                  activeClassName={'active'}\n                />\n                }\n              </div>\n              <div className=\"col s12 m4 l2\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUserList.propTypes = {\n  location: PropTypes.object.isRequired,\n  getUsersAction: PropTypes.func.isRequired,\n\n};\n\nconst mapStateToProps = state => ({\n  pagination: state.pagination,\n  pageCount: state.pagination.pageCount\n});\n\nexport default connect(mapStateToProps,\n  { getUsersAction })(withRouter(UserList));\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/user/UserList.jsx","import { GET_GROUPS } from '../actions/types';\n\nconst initialState = [];\n\n/**\n * updates the groups property of the store\n * @param {Object} state - current state\n * @param {Object} action - action type and action payload\n *\n * @returns {state} - returns a new state.\n */\nexport default (state = initialState, action = {}) => {\n  switch (action.type) {\n  case GET_GROUPS:\n    return [\n      ...action.groups\n    ];\n  default:\n    return state;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/reducers/groupsReducer.js","import { GET_MESSAGES, POST_MESSAGE } from '../actions/types';\n\nconst initialState = [];\n\n/**\n * updates the messages property of the store\n *\n * @param {Object} state - current state\n * @param {Object} action - action type and action payload\n *\n * @returns {state} - returns a new state.\n */\nexport default (state = initialState, action = {}) => {\n  switch (action.type) {\n  case GET_MESSAGES:\n    return [\n      ...action.messages\n    ];\n  case POST_MESSAGE:\n    return [\n      ...state,\n      action.message\n    ];\n  default:\n    return state;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/reducers/messagesReducer.js","import { GET_ALL_USERS } from '../actions/types';\n\nconst initialState = {\n  pageNumber: 0,\n  pageCount: 0,\n  pageSize: 0,\n  totalCount: 0,\n  users: []\n};\n\n/**\n * updates the messages property of the store\n * @param {Object} state - current state\n * @param {Object} action - action type and action payload\n *\n * @returns {state} - returns a new state.\n*/\nexport default (state = initialState, action = {}) => {\n  switch (action.type) {\n  case GET_ALL_USERS:\n    return {\n      pageNumber: action.users.pageNumber,\n      pageCount: action.users.pageCount,\n      pageSize: action.users.pageSize,\n      users: action.users.users,\n      totalCount: action.users.totalCount\n    };\n  default: return state;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/reducers/paginationReducer.js","const checkNum = (num) => {\n  const rawNum = parseInt(num, 10);\n  if (isNaN(rawNum)) {\n    return false;\n  }\n  return true;\n};\n\n\nmodule.exports = checkNum;\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/utils/numberValidation.js","import axios from 'axios';\nimport { GET_GROUPS, ADD_USER_TO_GROUP, GET_GROUP_USERS } from './types';\n\n/**\n * Creates a new Group.\n * @param {Array} group - groups.\n *\n * @returns {createGroup} -\n    returns the createGroup function to perform async dispatch.\n */\nexport function createGroup(group) {\n  return () => (\n    axios.post('/api/v1/group/', group)\n  );\n}\n\n/**\n * Fetch all Groups.\n * @param {Array} groups - groups.\n *\n * @returns {object} action payload data and action type\n */\nexport function getGroups(groups) {\n  return {\n    type: GET_GROUPS,\n    groups\n  };\n}\n\n/**\n * Fetch all Users in a group.\n * @param {Array} groupUsers - groupUsers.\n *\n * @returns {object} action payload data and action type\n */\nexport function getGroupUsers(groupUsers) {\n  return {\n    type: GET_GROUP_USERS,\n    groupUsers\n  };\n}\n\n/**\n * Add user to a group.\n * @param {Boolean} status - status.\n * @param {string} message - message.\n *\n * @returns {object} action payload data and action type\n */\nexport function addUserStatus(status, message) {\n  return {\n    type: ADD_USER_TO_GROUP,\n    status,\n    message\n  };\n}\n\n/**\n * Fetch all Groups.\n * @returns {function} dispatches getGroups action\n */\nexport function fetchGroups() {\n  return dispatch => (\n    axios.get('/api/v1/groups').then((response) => {\n      const groups = response.data;\n      dispatch(getGroups(groups));\n    }).catch((error) => {\n      throw (error);\n    })\n  );\n}\n\n/**\n * Dispatches an action to fetch all users in a group.\n * @param {Integer} groupId - groupdId.\n * @returns {function} - dispatches fetchGroupUsers action.\n */\nexport function fetchGroupUsers(groupId) {\n  return dispatch => (\n    axios.get(`/api/v1/group/${groupId}/users`)\n    .then(({ data }) => {\n      dispatch(getGroupUsers(data.data.members));\n    }).catch((error) => {\n      throw (error);\n    })\n  );\n}\n\n/**\n * Dispatches an action to add a user to a group.\n * @param {integer} groupId - The Id of the group.\n * @param {String} user - The username.\n *@returns {function} - dispatches addUserToGroup action.\n */\nexport function addUserToGroup(groupId, user) {\n  return dispatch =>\n  axios.post(`/api/v1/group/${groupId}/user`, user)\n    .then((data) => {\n      const message = data.message;\n      dispatch(addUserStatus(true, message));\n      return true;\n    }).catch((error) => {\n      const message = error.data.message;\n      dispatch(addUserStatus(false, message));\n      return message;\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/actions/groupActions.js"],"sourceRoot":""}