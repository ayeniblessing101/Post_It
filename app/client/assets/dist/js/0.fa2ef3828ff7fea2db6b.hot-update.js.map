{"version":3,"sources":["webpack:///./app/client/components/user/LoginForm.jsx?65be"],"names":["LoginForm","props","state","username","password","errors","handleSubmit","bind","handleChange","isValid","setState","event","preventDefault","isLoading","login","then","context","router","history","push","err","data","target","name","value","form","toggleForm","Component","propTypes","func","isRequired","contextTypes","object"],"mappings":"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","file":"0.fa2ef3828ff7fea2db6b.hot-update.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport ForgetPasswordModal from './ForgetPasswordModal';\nimport { login } from '../../actions/authenticationActions';\nimport validateInput from '../../validations/login';\nimport FlashMessagesList from '../notification/FlashMessagesList';\n\n/**\n * @class LoginForm\n * @extends {React.Component}\n */\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      errors: {},\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  /**\n   * @returns {isValid} - checks if the fields are not empty\n   * @memberof LoginForm\n   */\n  isValid() {\n    const { errors, isValid } = validateInput(this.state);\n\n    if (!isValid) {\n      this.setState({ errors });\n    }\n    return isValid;\n  }\n\n  /**\n   * @param {any} event\n   * @memberof LoginForm\n   * @returns {void}\n   */\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.isValid()) {\n      this.setState({ errors: {}, isLoading: true });\n      this.props.login(this.state).then(\n        () => this.context.router.history.push('/groups'),\n        err => this.setState({\n          errors: err.data.errors,\n          password: ''\n        })\n      );\n    }\n  }\n\n  /**\n   * @param {any} event\n   * @memberof LoginForm\n   * @returns {void}\n   */\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  /**\n   * @returns {object} - LoginForm component\n   * @memberof LoginForm\n   */\n  render() {\n    const { errors, username, password } = this.state;\n    return (\n      <div>\n        <h4>Login to PostIt</h4>\n        <FlashMessagesList />\n        <form className=\"col s12\" onSubmit={this.handleSubmit}>\n          { errors.form &&\n          <div className=\"alert alert-danger\">{errors.form}</div> }\n          <div className=\"\">\n            <TextFieldGroup\n              error={errors.username}\n              label=\"Username\"\n              onChange={this.handleChange}\n              value={username}\n              field=\"username\"\n              type=\"text\"\n            />\n            <TextFieldGroup\n              error={errors.password}\n              label=\"Password\"\n              onChange={this.handleChange}\n              value={password}\n              field=\"password\"\n              type=\"password\"\n            />\n            <div className=\"input-field col s12\">\n              <button\n                  className=\"btn waves-effect waves-light\"\n                  type=\"submit\" name=\"action\">Submit\n                <i className=\"material-icons right\">send</i>\n              </button>\n              <br /><br />\n            </div>\n          </div>\n        </form>\n        <div className=\"row\">\n          <div className=\"col s6\"><ForgetPasswordModal /></div>\n          <div className=\"col s6\">\n            <p>\n              Do not have an account?\n              <button\n                className=\"blue-text signUp\"\n                onClick={() => this.props.toggleForm('signup')}>\n                <b>Sign Up</b>\n              </button>\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLoginForm.propTypes = {\n  login: PropTypes.func.isRequired,\n  toggleForm: PropTypes.func.isRequired\n};\n\nLoginForm.contextTypes = {\n  router: PropTypes.object.isRequired\n};\n\nexport default connect(null, { login })(LoginForm);\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/user/LoginForm.jsx"],"sourceRoot":""}