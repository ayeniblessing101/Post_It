{"version":3,"sources":["webpack:///./app/client/actions/messageAction.js?f4ea"],"names":["postMessage","getGroupWithMessages","postMessageStatus","type","message","getGroupAllMessages","groupInfo","groupId","post","then","res","console","log","data","dispatch","get"],"mappings":";;;;;;;;;;;;QAkCgBA,W,GAAAA,W;QAgBAC,oB,GAAAA,oB;;AAlDhB;;;;AACA;;;;AAEA;;;;;AAKO,IAAMC,gDAAoB,SAApBA,iBAAoB;AAAA,SAC/B;AACEC,6BADF;AAEEC;AAFF,GAD+B;AAAA,CAA1B;;AAOP;;;;;AAKO,IAAMC,oDAAsB,SAAtBA,mBAAsB;AAAA,SACjC;AACEF,uCADF;AAEEG;AAFF,GADiC;AAAA,CAA5B;;AAOP;;;;;;;AAOO,SAASN,WAAT,CAAqBO,OAArB,EAA8BH,OAA9B,EAAuC;AAC5C,SAAO;AAAA,WACL,gBAAMI,IAAN,oBAA4BD,OAA5B,eAA+CH,OAA/C,EACCK,IADD,CACM,UAACC,GAAD,EAAS;AACbC,cAAQC,GAAR,CAAYF,IAAIG,IAAhB;AACAC,eAASZ,kBAAkBQ,IAAIG,IAAtB,CAAT;AACD,KAJD,CADK;AAAA,GAAP;AAOD;;AAED;;;;;;AAMO,SAASZ,oBAAT,CAA8BM,OAA9B,EAAuC;AAC5C,SAAO;AAAA,WACL,gBAAMQ,GAAN,oBAA2BR,OAA3B,QACCE,IADD,CACM,gBAAc;AAAA,UAAXI,IAAW,QAAXA,IAAW;;AAClBC,eAAST,oBAAoBQ,KAAKA,IAAzB,CAAT;AACD,KAHD,CADK;AAAA,GAAP;AAMD,C","file":"0.1e07189515b8982ba697.hot-update.js","sourcesContent":["import axios from 'axios';\nimport { POST_MESSAGE, GET_GROUP_WITH_MESSAGE } from './types';\n\n/**\n * post message status\n * @param {any} message\n * @return {object} -action payload data and action type\n */\nexport const postMessageStatus = message => (\n  {\n    type: POST_MESSAGE,\n    message\n  }\n);\n\n/**\n * action to fetch all messages\n * @param {any} messages\n * @return {object} - action payload data and action type\n */\nexport const getGroupAllMessages = groupInfo => (\n  {\n    type: GET_GROUP_WITH_MESSAGE,\n    groupInfo\n  }\n);\n\n/**\n * Post a message.\n * @param {integer} groupId - groupdId.\n * @param {string} message - groupdId.\n *\n *@returns {function} - dispatches an action to post message.\n */\nexport function postMessage(groupId, message) {\n  return dispatch => (\n    axios.post(`/api/v1/group/${groupId}/message`, message)\n    .then((res) => {\n      console.log(res.data);\n      dispatch(postMessageStatus(res.data));\n    })\n  );\n}\n\n/**\n * Fetch all Messages.\n * @param {Integer} groupId - groupdId.\n *\n * @returns {function} - dispatch an action to get all messages to the store.\n */\nexport function getGroupWithMessages(groupId) {\n  return dispatch => (\n    axios.get(`/api/v1/group/${groupId}/`)\n    .then(({ data }) => {\n      dispatch(getGroupAllMessages(data.data));\n    })\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/actions/messageAction.js"],"sourceRoot":""}