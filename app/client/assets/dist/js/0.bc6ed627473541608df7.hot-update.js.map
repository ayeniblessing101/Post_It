{"version":3,"sources":["webpack:///./app/client/utils/isAuthenticated.js?5bc3","webpack:///./app/client/components/Routes.jsx?ae4d"],"names":["ComposedComponent","Authenticate","props","isAuthenticated","context","router","history","push","nextProps","Component","propTypes","bool","isRequired","contextTypes","object","mapStateToProps","state","auth","ReactRouter","require","Route","Switch","Routes"],"mappings":";;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;;;;;;;;;AAEA;;;;;kBAKe,UAACA,iBAAD,EAAuB;AAAA,MAC9BC,YAD8B;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,2CAEb;AACnB,YAAI,KAAKC,KAAL,CAAWC,eAAf,EAAgC;AAC9B,eAAKC,OAAL,CAAaC,MAAb,CAAoBC,OAApB,CAA4BC,IAA5B,CAAiC,SAAjC;AACD;AACF;AANiC;AAAA;AAAA,0CAQdC,SARc,EAQH;AAC7B,YAAIA,UAAUL,eAAd,EAA+B;AAC7B,eAAKC,OAAL,CAAaC,MAAb,CAAoBC,OAApB,CAA4BC,IAA5B,CAAiC,SAAjC;AACD;AACF;AAZiC;AAAA;AAAA,+BAczB;AACP,eACE,8BAAC,iBAAD,EAAuB,KAAKL,KAA5B,CADF;AAGD;AAlBiC;;AAAA;AAAA,IACT,gBAAMO,SADG;;AAqBpCR,eAAaS,SAAb,GAAyB;AACvBP,qBAAiB,oBAAUQ,IAAV,CAAeC;AADT,GAAzB;;AAIAX,eAAaY,YAAb,GAA4B;AAC1BR,YAAQ,oBAAUS,MAAV,CAAiBF;AADC,GAA5B;AAGA;;;;;AAKA,MAAMG,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,WAAO;AACLb,uBAAiBa,MAAMC,IAAN,CAAWd;AADvB,KAAP;AAGD,GAJD;;AAMA,SAAO,yBAAQY,eAAR,EAAyBd,YAAzB,CAAP;AACD,C;;;;;;;;;;;;;;ACjDD;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMiB,cAAc,mBAAAC,CAAQ,EAAR,CAApB;;AAEA,IAAMC,QAAQF,YAAYE,KAA1B;AACA,IAAMC,SAASH,YAAYG,MAA3B;;AAEA,IAAMC,SAAS,SAATA,MAAS,GAAM;AACnB,SACE;AAAA;AAAA;AACE;AAAC,YAAD;AAAA;AACE,oCAAC,KAAD,IAAO,WAAP,EAAa,MAAK,GAAlB,EAAsB,WAAW,qDAAjC,GADF;AAEE,oCAAC,KAAD,IAAO,MAAK,uBAAZ,EAAoC,sCAApC,GAFF;AAGE,oCAAC,KAAD,IAAO,MAAK,SAAZ,EAAsB,WAAW,gDAAjC,GAHF;AAIE,oCAAC,KAAD,IAAO,MAAK,YAAZ,EAAyB,WAAW,iDAApC,GAJF;AAKE,oCAAC,KAAD,IAAO,MAAK,YAAZ,EAAyB,WAAW,kDAApC,GALF;AAME,oCAAC,KAAD,IAAO,MAAK,WAAZ,EAAwB,WAAW,6CAAnC,GANF;AAOE,oCAAC,KAAD,IAAO,MAAK,eAAZ,EAA4B,WAAW,8CAAvC,GAPF;AAQE,oCAAC,KAAD;AACE,gBAAQ,kBAAM;AACZ,iBAAO,2DAAP;AACD;AAHH;AARF;AADF,GADF;AAkBD,CAnBD;kBAoBeA,M","file":"0.bc6ed627473541608df7.hot-update.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n/**\n * A middleware that ensure a user is authenticated to access certain routes\n * @param {object} ComposedComponent - ComposedComponent\n * @return {void} - void\n */\nexport default (ComposedComponent) => {\n  class Authenticate extends React.Component {\n    componentWillMount() {\n      if (this.props.isAuthenticated) {\n        this.context.router.history.push('/groups');\n      }\n    }\n\n    componentWillUpdate(nextProps) {\n      if (nextProps.isAuthenticated) {\n        this.context.router.history.push('/groups');\n      }\n    }\n\n    render() {\n      return (\n        <ComposedComponent {...this.props} />\n      );\n    }\n  }\n\n  Authenticate.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n  };\n\n  Authenticate.contextTypes = {\n    router: PropTypes.object.isRequired\n  };\n  /**\n   * maps the store state isAuthenticated to props\n   * @param {*} state\n   * @returns {void}\n   */\n  const mapStateToProps = (state) => {\n    return {\n      isAuthenticated: state.auth.isAuthenticated\n    };\n  };\n\n  return connect(mapStateToProps)(Authenticate);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/utils/isAuthenticated.js","import React from 'react';\nimport LandingPage from './user/LandingPage';\nimport GroupsPage from './group/GroupsPage';\nimport AddGroup from './group/AddGroupPage';\nimport AddUser from './user/AddUser';\nimport GroupPage from './messages/MessagePage';\nimport ResetPasswordPage from './user/ResetPasswordPage';\nimport requireAuth from '../utils/requireAuth';\nimport isAuthenticated from '../utils/isAuthenticated';\nimport UserPage from './user/UserPage';\nimport NotFoundPage from './NotFoundPage';\n\nconst ReactRouter = require('react-router-dom');\n\nconst Route = ReactRouter.Route;\nconst Switch = ReactRouter.Switch;\n\nconst Routes = () => {\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\" component={isAuthenticated(LandingPage)} />\n        <Route path=\"/user/password/verify\" component={ResetPasswordPage} />\n        <Route path=\"/groups\" component={requireAuth(GroupsPage)} />\n        <Route path=\"/group/:id\" component={requireAuth(GroupPage)} />\n        <Route path=\"/add-group\" component={requireAuth(AddGroup)} />\n        <Route path=\"/add-user\" component={requireAuth(AddUser)} />\n        <Route path=\"/user/search/\" component={requireAuth(UserPage)} />\n        <Route\n          render={() => {\n            return <NotFoundPage />;\n          }}\n        />\n      </Switch>\n    </div>\n  );\n};\nexport default Routes;\n\n\n\n// WEBPACK FOOTER //\n// ./app/client/components/Routes.jsx"],"sourceRoot":""}